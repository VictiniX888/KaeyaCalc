{"version":3,"sources":["js/Data.js","js/Resistance.js","js/Talent.js","js/option/Option.js","js/option/characterOptions/CharacterOption.js","js/option/characterOptions/DilucOption.js","js/option/characterOptions/XiaoOption.js","js/option/characterOptions/NoelleOption.js","js/option/characterOptions/ChongyunOption.js","js/option/characterOptions/HuTaoOption.js","js/option/characterOptions/YanfeiOption.js","js/option/artifactSetOptions/ArtifactSetOption.js","js/option/artifactSetOptions/BraveHeartOption.js","js/option/artifactSetOptions/BerserkerOption.js","js/option/artifactSetOptions/MartialArtistOption.js","js/option/artifactSetOptions/InstructorOption.js","js/option/artifactSetOptions/BlizzardStrayerOption.js","js/option/artifactSetOptions/ThundersootherOption.js","js/option/artifactSetOptions/LavawalkerOption.js","js/option/artifactSetOptions/MaidenBelovedOption.js","js/option/artifactSetOptions/ViridescentVenererOption.js","js/option/OptionUtils.js","js/Character.js","js/Weapon.js","js/Stat.js","js/Artifact.js","js/ArtifactSetBonus.js","js/ArtifactSet.js","js/DamageModifer.js","js/Styles.js","App.js"],"names":["sortedCharacterList","sortedWeaponList","sortedArtifactSetList","characterData","characterDataRaw","reduce","acc","charData","id","characterAscensionBonusData","rawData","characterId","ascensionBonusSet","map","bonusData","ascensionBonuses","processCharacterAscensionBonusData","characterAscensionBonusDataRaw","characterStatCurveData","curveData","level","statCurves","processCharacterStatCurveData","characterStatCurveDataRaw","weaponData","processWeaponData","weaponDataRaw","weaponAscensionBonusData","weaponId","processWeaponAscensionBonusData","weaponAscensionBonusDataRaw","weaponStatCurveData","processWeaponStatCurveData","weaponStatCurveDataRaw","talentData","talentDataRaw","talents","attack","curveAcc","params","skill","burst","processTalentData","artifactSetData","setData","processArtifactSetData","artifactSetDataRaw","artifactSetBonusData","setId","setBonusSet","bonusAcc","bonusThreshold","processArtifactSetBonusData","artifactSetBonusDataRaw","getData","dataObj","getAscensionBonusData","getStatCurveAt","getCharacterData","getWeaponData","getAscensionBonusAt","getTalentData","emptyTalentParams","Array","fill","NaN","getTalentStatsAt","type","talentStats","undefined","getArtifactSetData","getArtifactSetBonusData","getArtifactSetBonusParams","pieces","bonusExtra","Resistance","anemo","cryo","electro","geo","hydro","pyro","physical","this","value","isNaN","defaultTalent","calculateBaseDamage","stats","multiplier","scalingType","flatDmg","flatAtk","flatDef","flatHp","calculateTotalDamage","element","attackType","modifier","baseDmg","dmgBonus","normalDmgBonus","chargedDmgBonus","plungeDmgBonus","skillDmgBonus","burstDmgBonus","getDamageBonus","crit","critType","critDmg","critRate","chargedCritRate","Math","min","characterLevel","enemyLevel","enemyDefReduction","res","resReduction","totalRes","calculateResMultiplier","enemyRes","enemyResReduction","calculateHp","flatBonus","normalAttackDefault","hits","talentValues","i","damage","push","description","normalAttackMulti","hitCount","damages","hit","chargedAttackDefault","chargedAttackMulti","chargedAttackHeavy","plungeAttackDefault","attackLightDefault","normalHits","slice","attackLightMulti","chargedHits","length","attackHeavyDefault","attackBowDefault","chargedElement","aimShotDefault","skillBase","skillDefault","skillMultiBase","burstBase","burstDefault","burstMultiBase","healingSkillBase","flatHealing","calculateHealing","hpBase","shieldBase","dmgAbsorption","shieldStrength","dionaHoldSkill","calculateDmgAbsorption","lisaAttack","lisaSkill","talentDmg","lisaBurst","barbaraAttack","barbaraSkill","barbaraBurst","kaeyaAttack","kaeyaSkill","kaeyaBurst","dilucAttack","infusion","dilucSkill","talentDamage","dilucBurst","razorAttack","razorSkill","razorBurst","attackParams","talentAttackLevel","amberAttack","amberSkill","amberBurst","ventiAttack","ventiSkill","ventiBurst","xianglingAttack","xianglingSkill","xianglingBurst","beidouAttack","beidouSkill","beidouBurst","xingqiuAttack","concat","xingqiuSkill","xingqiuBurst","xiaoAttack","xiaoSkill","xiaoBurst","ningguangAttack","normalAtkDmg","starJadeDmg","ningguangSkill","ningguangBurst","kleeAttack","kleeSkill","kleeBurst","zhongliAttack","zhongliSkill","zhongliBurst","fischlAttack","fischlSkill","fischlBurst","bennettAttack","bennettSkill","bennettBurst","atkBonus","baseAtk","tartagliaAttack","riptideFlashDmg","riptideBurstDmg","tartagliaSkill","tartagliaBurst","noelleAttack","noelleSkill","skillDamage","noelleBurst","modifiedStats","qiqiAttack","qiqiSkill","qiqiBurst","chongyunAttack","chongyunSkill","chongyunBurst","ganyuAttack","aimedShotDmg","chargedDmg","ganyuSkill","ganyuBurst","albedoAttack","albedoSkill","transientBlossomDmg","albedoBurst","dionaAttack","dionaSkill","holdModifier","dionaBurst","monaAttack","monaSkill","monaBurst","keqingAttack","hit4Dmg","hit5Dmg","keqingSkill","keqingBurst","consecutiveSlashDmg","sucroseAttack","sucroseSkill","sucroseBurst","xinyanAttack","xinyanSkill","xinyanBurst","rosariaAttack","rosariaSkill","rosariaBurst","hutaoAttack","hit6Dmg","hutaoSkill","hutaoBurst","forEach","yanfeiAttack","yanfeiSkill","yanfeiBurst","eulaAttack","attackHeavyMulti","eulaSkill","eulaBurst","lightfallSwordParams","lightfallSwordTalent","Option","initialValue","choices","applyOnStats","applyOnModifier","_applyOnStats","_applyOnModifier","constructor","CharacterOption","talentSkillLevel","talentBurstLevel","burstParams","skillParams","ArtifactSetOption","threshold","elementalMastery","healedBonus","add","defaultOptions","getOptions","characterOptions","artifactSetOptions","Character","data","name","baseStats","statCurveMapping","hasAscended","innateStats","Object","keys","obj","stat","charStatCurves","entries","curve","bonus","talentLevel","totalStats","toLowerCase","damageFn","Weapon","rank","weaponLevel","weaponStats","weaponStatCurves","getStatDisplayValue","isPercentage","toFixed","round","getDamageDisplayValue","values","str","every","getOptionName","optionMapping","convertStatValue","getTalentDescription","desc","talentDescMapping","getTotalStatsAt","weapon","weaponHasAscended","character","characterHasAscended","artifactSetBonuses","artifacts","characterStats","getStatsAt","getInnateStatsAt","getBaseStatsAt","combinedStats","artifactStats","artifact","getStats","baseDef","defBonus","baseHp","hpBonus","energyRecharge","anemoDmgBonus","cryoDmgBonus","electroDmgBonus","geoDmgBonus","hydroDmgBonus","pyroDmgBonus","physicalDmgBonus","anemoRes","cryoRes","electroRes","geoRes","hydroRes","pyroRes","physicalRes","healingBonus","option","capitalize","toUpperCase","Artifact","mainStat","rawValue","subStats","statObj","statUtils","subStat","mainStatProps","Flower","Feather","Sands","Goblet","Circlet","subStatProps","defaultSetBonus","Relic_ExtraAtkCritUp","Relic_GiantKiller","Relic_AbsorbTeamElemResist","Relic_AllElemResistUp","Relic_ElemDmgEnhanceElemResist","Relic_LowHPGainExtraCritRate","Relic_AtkAndExtraAtkUp","Relic_SkillEnhanceNormalAtkAndExtraAtk","Relic_ReactionGainExtraElemMasteryForTeam","Relic_SkillDamageUp","Relic_KillingRefreshSkill","Relic_UltGainEnergyForTeam","Relic_ChestHealSelf","Relic_CoinHealSelf","Relic_RestoreEnergyGainExtraEnergyForTeam","Relic_UltHealSelf","Relic_CriticUpAgainstIceAndFrozen","Relic_DamageUpAgainstElectric","Relic_DamageUpAgainstFireAndBurning","Relic_SkillEnhanceCured","Relic_MeleeAttackUp","Relic_ReactionWindEnhance","ArtifactSet","bonusThresholds","setBonuses","filter","options","getSetBonusesAt","setBonus","bonuses","statBonus","extraBonus","bonusFn","extraBonuses","DamageModifier","modifiers","reaction","StyleSheet","create","container","display","flexDirection","alignItems","fontSize","height","backgroundColor","inputColumn","padding","borderRightWidth","inputRow","marginVertical","levelInput","width","statInput","buttonGroupContainer","marginTop","marginBottom","marginLeft","marginRight","borderRadius","borderColor","buttonGroupButtonContainer","borderRightColor","buttonGroupText","fontWeight","color","buttonGroupSelectedButton","buttonGroupSelectedText","resultColumn","resultBlockNoBorder","resultBlock","borderBottomWidth","artifactBlockNoBorder","paddingTop","paddingBottom","artifactBlock","borderStyle","characterImage","titleText","artifactType","artifactStatType","resultText","fillerColumn","flexGrow","App","elements","renderInputColumn","View","renderCharacterList","style","styles","Text","TextInput","defaultValue","state","onChangeText","text","setState","parseInt","setCharacterState","Checkbox","onValueChange","isCharacterAscended","renderWeaponList","setWeaponState","isWeaponAscended","artifactSets","_","renderArtifactSetInput","setStatTalentState","buttons","containerStyle","buttonContainerStyle","textStyle","selectedButtonStyle","selectedTextStyle","selectedIndex","onPress","setAllTalentState","key","set","parseFloat","characterSelect","selectedValue","Item","label","characters","weapons","setArtifactSetState","renderCharacterImage","imageUrl","Image","source","uri","getAllOptions","artifactSet1Options","artifactSet2Options","artifactSet3Options","getDamageModifier","getTotalStats","talentAttackDamage","getTalentDamageAt","talentSkillDamage","talentBurstDamage","isweaponAscended","artifactSetStats","setStats","setTalentState","artifactFlower","artifactFeather","artifactSands","artifactGoblet","artifactCirclet","renderCharacterStats","renderWeaponStats","renderArtifactSetStats","renderArtifactMainStat","setStat","prop","renderArtifactSubStats","index","renderArtifactStat","isLast","renderAllArtifactStats","renderTotalStats","renderTalentDamage","renderOptions","FlatList","keyExtractor","item","renderItem","choice","renderCharacterOptions","withValue","renderArtifactSetOptions","renderAllTalentDamage","sort","name1","name2","localeCompare","artifactSet1Id","artifactSet1Pc","artifactSet2Id","artifactSet2Pc","artifactSet3Id","artifactSet3Pc","Component"],"mappings":"2p6aAcA,IAmBIA,EACAC,EACAC,EArBEC,EAAqCC,EAyB1BC,QAAO,SAACC,EAAKC,GAE1B,OADAD,EAAIC,EAASC,IAAMD,EACZD,IACN,IA3BCG,EA8BN,SAA4CC,GAC1C,OAAOA,EAAQL,QAAO,SAACC,EAAKC,GAI1B,OAHAD,EAAIC,EAASI,aAAeJ,EAASK,kBAAkBC,KACrD,SAACC,GAAD,OAAeA,EAAUC,oBAEpBT,IACN,IApC+BU,CAClCC,GAEIC,EAoCN,SAAuCR,GACrC,OAAOA,EAAQL,QAAO,SAACC,EAAKa,GAE1B,OADAb,EAAIa,EAAUC,OAASD,EAAUE,WAC1Bf,IACN,IAxC0BgB,CAC7BC,GAEIC,EAwCN,SAA2Bd,GACzB,OAAOA,EAAQL,QAAO,SAACC,EAAKkB,GAE1B,OADAlB,EAAIkB,EAAWhB,IAAMgB,EACdlB,IACN,IA5CcmB,CAAkBC,GAC/BC,EA8CN,SAAyCjB,GACvC,OAAOA,EAAQL,QAAO,SAACC,EAAKkB,GAI1B,OAHAlB,EAAIkB,EAAWI,UAAYJ,EAAWZ,kBAAkBC,KACtD,SAACC,GAAD,OAAeA,EAAUC,oBAEpBT,IACN,IApD4BuB,CAC/BC,GAEIC,GAoDN,SAAoCrB,GAClC,OAAOA,EAAQL,QAAO,SAACC,EAAKa,GAE1B,OADAb,EAAIa,EAAUC,OAASD,EAAUE,WAC1Bf,IACN,IAxDuB0B,CAA2BC,GACjDC,GA0DN,SAA2BxB,GACzB,OAAOA,EAAQL,QAAO,SAACC,EAAK6B,GAC1B,IAAID,E,iWAAU,IAAQC,EAAcC,SAgBpC,OAdAF,EAAWG,OAASH,EAAWG,OAAOhC,QAAO,SAACiC,EAAUnB,GAEtD,OADAmB,EAASnB,EAAUC,OAASD,EAAUoB,OAC/BD,IACN,IACHJ,EAAWM,MAAQN,EAAWM,MAAMnC,QAAO,SAACiC,EAAUnB,GAEpD,OADAmB,EAASnB,EAAUC,OAASD,EAAUoB,OAC/BD,IACN,IACHJ,EAAWO,MAAQP,EAAWO,MAAMpC,QAAO,SAACiC,EAAUnB,GAEpD,OADAmB,EAASnB,EAAUC,OAASD,EAAUoB,OAC/BD,IACN,IAEHhC,EAAI6B,EAAcxB,aAAeuB,EAC1B5B,IACN,IA7EcoC,CAAkBP,GAC/BQ,GA+EN,SAAgCjC,GAC9B,OAAOA,EAAQL,QAAO,SAACC,EAAKsC,GAE1B,OADAtC,EAAIsC,EAAQpC,IAAMoC,EACXtC,IACN,IAnFmBuC,CAAuBC,GACzCC,GAqFN,SAAqCrC,GACnC,OAAOA,EAAQL,QAAO,SAACC,EAAKsC,GAK1B,OAJAtC,EAAIsC,EAAQI,OAASJ,EAAQK,YAAY5C,QAAO,SAAC6C,EAAUpC,GAEzD,OADAoC,EAASpC,EAAUqC,gBAAkBrC,EAC9BoC,IACN,IACI5C,IACN,IA5FwB8C,CAC3BC,GA+FF,SAASC,GAAQ9C,EAAI+C,GACnB,OAAOA,EAAQ/C,GAGjB,SAASgD,GAAsBhD,EAAI+C,GACjC,OAAOA,EAAQ/C,GAGjB,SAASiD,GAAerC,EAAOC,GAC7B,OAAOA,EAAWD,GAIb,SAASsC,GAAiBlD,GAC/B,OAAO8C,GAAQ9C,EAAIL,GAWd,SAASwD,GAAcnD,GAC5B,OAAO8C,GAAQ9C,EAAIgB,GAWd,SAASoC,GAAoBxC,EAAOL,GACzC,OAAOA,EAAiBK,GAGnB,SAASyC,GAAcrD,GAC5B,OAAO0B,GAAW1B,GAGpB,IAAMsD,GAAoBC,MAAM,IAAIC,KAAKC,KAElC,SAASC,GAAiBC,EAAM/C,EAAOgB,GAC5C,IAAMgC,EAAchC,EAAQ+B,GAAM/C,GAClC,YAAoBiD,IAAhBD,EACKA,EAEAN,GAIJ,SAASQ,GAAmB9D,GACjC,OAAO8C,GAAQ9C,EAAImC,IAGd,SAAS4B,GAAwB/D,GACtC,OAAO8C,GAAQ9C,EAAIuC,IAGd,SAASyB,GAA0BhE,EAAIiE,GAAS,IAAD,MAC9ClC,EAAM,SAAGgC,GAAwB/D,KAA3B,SAAG,EAA8BiE,KAAjC,SAAG,EAAuCC,iBAA1C,EAAG,EAAmDnC,OAClE,aAAOA,IAAUuB,G,IC9LEa,G,WACnB,cAQI,IAAD,IAPDC,aAOC,MAPO,EAOP,MANDC,YAMC,MANM,EAMN,MALDC,eAKC,MALS,EAKT,MAJDC,WAIC,MAJK,EAIL,MAHDC,aAGC,MAHO,EAGP,MAFDC,YAEC,MAFM,EAEN,MADDC,gBACC,MADU,EACV,cACDC,KAAKP,MAAQA,EACbO,KAAKN,KAAOA,EACZM,KAAKL,QAAUA,EACfK,KAAKJ,IAAMA,EACXI,KAAKH,MAAQA,EACbG,KAAKF,KAAOA,EACZE,KAAKD,SAAWA,E,+BAGlB,SAAIf,EAAMiB,GACHC,MAAMD,GAGTD,KAAKhB,GAAQ,EAFbgB,KAAKhB,GAAQiB,I,iBAMjB,SAAIjB,EAAMiB,GACHC,MAAMD,KACTD,KAAKhB,IAASiB,O,0kBCzBb,SAASE,KACd,MAAO,GAsCT,SAASC,GAAT,GAA+E,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,YAA4B,IAAfC,eAAe,MAAL,EAAK,EAC5E,MAAmB,UAAfD,EACKF,EAAMI,QAAUH,EAAaE,EACZ,WAAfD,EACFF,EAAMK,QAAUJ,EAAaE,EACZ,MAAfD,EACFF,EAAMM,OAASL,EAAaE,EAE5B1B,IAoBX,SAAS8B,GAAT,GAOI,IANFP,EAMC,EANDA,MACAC,EAKC,EALDA,WACAO,EAIC,EAJDA,QAIC,IAHDN,mBAGC,MAHa,SAGb,MAFDO,kBAEC,MAFY,OAEZ,EADDC,EACC,EADDA,SAEIC,EAAUZ,GAAoB,CAChCC,QACAC,aACAC,cACAC,QAASO,EAASP,UAEhBS,EA3EN,YAAyD,IAAD,cAA9BZ,EAA8B,EAA9BA,MAAOQ,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACpCG,EAAW,EAIf,OAHAA,GAAQ,SAAIZ,EAAMY,UAAV,EAAsB,EAC9BA,GAAQ,SAAIZ,EAASQ,EAAJ,aAAT,EAAmC,EAEnCC,GACN,IAAK,SACHG,GAAQ,SAAIZ,EAAMa,gBAAV,EAA4B,EACpC,MAEF,IAAK,UACHD,GAAQ,SAAIZ,EAAMc,iBAAV,EAA6B,EACrC,MAEF,IAAK,SACHF,GAAQ,SAAIZ,EAAMe,gBAAV,EAA4B,EACpC,MAEF,IAAK,QACHH,GAAQ,SAAIZ,EAAMgB,eAAV,EAA2B,EACnC,MAEF,IAAK,QACHJ,GAAQ,SAAIZ,EAAMiB,eAAV,EAA2B,EAOvC,OAAOL,EA6CQM,CAAe,CAAElB,QAAOQ,UAASC,eAE5CU,EAAO,EACX,GAA0B,SAAtBT,EAASU,SACXD,GAAQnB,EAAMqB,aACT,GAA0B,YAAtBX,EAASU,SAAwB,CAC1C,IAC8B,EAD1BE,EAAWtB,EAAMsB,SACrB,GAAmB,YAAfb,EACFa,GAAQ,SAAItB,EAAMuB,iBAAV,EAA6B,EAEvCJ,GAAQK,KAAKC,IAAI,EAAGH,GAAYtB,EAAMqB,QAgBxC,OAAOV,EAAUC,EAAWO,IAZzBT,EAASgB,eAAiB,MAC1BhB,EAASgB,eACR,KACChB,EAASiB,WAAa,MAAQ,EAAIjB,EAASkB,qBA/ClD,YAII,IAHFpB,EAGC,EAHDA,QAGC,IAFDqB,WAEC,MAFK,IAAI1C,GAAW,IAEpB,MADD2C,oBACC,MADc,IAAI3C,GAAW,IAC7B,EACG4C,EAAWF,EAAIrB,GAAWsB,EAAatB,GAE3C,OAAIuB,EAAW,EACN,EAAIA,EAAW,EACbA,EAAW,IACb,EAAIA,EAEJ,GAAK,EAAIA,EAAW,GAoCJC,CAAuB,CAC9CxB,UACAqB,IAAKnB,EAASuB,SACdH,aAAcpB,EAASwB,oBAwB3B,SAASC,GAAT,GAA4E,IAArDnC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,WAAYmC,EAAiC,EAAjCA,UAAiC,IAAtBlC,mBAAsB,MAAR,KAAQ,EACzE,MAAmB,UAAfA,EACKF,EAAMI,QAAUH,EAAamC,EACZ,WAAflC,EACFF,EAAMK,QAAUJ,EAAamC,EACZ,MAAflC,EACFF,EAAMM,OAASL,EAAamC,EAE5B3D,IAoCX,SAAS4D,GAAT,GAEE,IAFwE,IAA3CC,EAA0C,EAA1CA,KAAM9B,EAAoC,EAApCA,QAASzD,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACvD6B,EAAe,GACVC,EAAI,EAAGA,EAAIF,EAAME,IAAK,CAC7B,IAAIC,EAASlC,GAAqB,CAChCP,QACAC,WAAYlD,EAAOyF,GACnBhC,UACAC,WAAY,SACZC,aAGF6B,EAAaG,KAAK,CAChBC,YAAgBH,EAAI,EAAT,SACXC,OAAQ,CAACA,KAIb,OAAOF,EAIT,SAASK,GAAT,GAA6E,IAAD,IAA/CN,YAA+C,MAAxC,GAAwC,EAApC9B,EAAoC,EAApCA,QAASzD,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAqB9D,OApBmB4B,EAAKjH,KAAI,SAACwH,EAAUL,GAUrC,IATA,IAAIC,EAASlC,GAAqB,CAChCP,QACAC,WAAYlD,EAAOyF,GACnBhC,UACAC,WAAY,SACZC,aAGEoC,EAAU,GACLC,EAAM,EAAGA,EAAMF,EAAUE,IAChCD,EAAQJ,KAAKD,GAGf,MAAO,CACLE,YAAgBH,EAAI,EAAT,SACXC,OAAQK,MAQd,SAASE,GAAT,GAAqE,IAArCxC,EAAoC,EAApCA,QAASzD,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAStD,MAAO,CACL,CACEiC,YAAa,aACbF,OAAQ,CAXClC,GAAqB,CAChCP,QACAC,WAAYlD,EAAO,GACnByD,UACAC,WAAY,UACZC,gBAYJ,SAASuC,GAAT,GAEE,IAFuE,IAA3CX,EAA0C,EAA1CA,KAAM9B,EAAoC,EAApCA,QAASzD,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACtDoC,EAAU,GACLN,EAAI,EAAGA,EAAIF,EAAME,IAAK,CAC7B,IAAIC,EAASlC,GAAqB,CAChCP,QACAC,WAAYlD,EAAOyF,GACnBhC,UACAC,WAAY,UACZC,aAEFoC,EAAQJ,KAAKD,GAGf,MAAO,CACL,CACEE,YAAY,aACZF,OAAQK,IAMd,SAASI,GAAT,GAAgF,IAAD,IAAjD1C,eAAiD,MAAvC,WAAuC,EAA3BzD,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAEjE,MADmB,CAAC,iBAAkB,mBAClBrF,KAAI,SAACsH,EAAaH,GASpC,MAAO,CACLG,YAAaA,EACbF,OAAQ,CAVGlC,GAAqB,CAChCP,QACAC,WAAYlD,EAAOyF,GACnBhC,UACAC,WAAY,UACZC,kBAWN,SAASyC,GAAT,GAAoE,IAArC3C,EAAoC,EAApCA,QAASzD,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAErD,MADmB,CAAC,YAAa,eAAgB,iBAC7BrF,KAAI,SAACsH,EAAaH,GASpC,MAAO,CACLG,YAAaA,EACbF,OAAQ,CAVGlC,GAAqB,CAChCP,QACAC,WAAYlD,EAAOyF,GACnBhC,UACAC,WAAY,SACZC,kBAWN,SAAS0C,GAAT,GAMI,IALFC,EAKC,EALDA,WAKC,IAJD7C,eAIC,MAJS,WAIT,EAHDzD,EAGC,EAHDA,OACAiD,EAEC,EAFDA,MACAU,EACC,EADDA,SAEI6B,EAAe,GA8BnB,OA5BAA,EAAaG,KAAb,MAAAH,EAAY,IACPF,GAAoB,CACrBC,KAAMe,EACN7C,UACAzD,OAAQA,EAAOuG,MAAM,EAAGD,GACxBrD,QACAU,eAIJ6B,EAAaG,KAAb,MAAAH,EAAY,IACPS,GAAqB,CACtBxC,UACAzD,OAAQA,EAAOuG,MAAMD,EAAYA,EAAa,GAC9CrD,QACAU,eAIJ6B,EAAaG,KAAb,MAAAH,EAAY,IACPY,GAAoB,CACrB3C,UACAzD,OAAQA,EAAOuG,MAAMD,EAAa,EAAI,GACtCrD,QACAU,eAIG6B,EAIT,SAASgB,GAAT,GAOI,IAAD,IANDF,kBAMC,MANY,GAMZ,MALDG,mBAKC,MALa,EAKb,MAJDhD,eAIC,MAJS,WAIT,EAHDzD,EAGC,EAHDA,OACAiD,EAEC,EAFDA,MACAU,EACC,EADDA,SAEI6B,EAAe,GA6CnB,OA3CAA,EAAaG,KAAb,MAAAH,EAAY,IACPK,GAAkB,CACnBN,KAAMe,EACN7C,UACAzD,OAAQA,EAAOuG,MAAM,EAAGD,EAAWI,QACnCzD,QACAU,eAIgB,IAAhB8C,EACFjB,EAAaG,KAAb,MAAAH,EAAY,IACPS,GAAqB,CACtBxC,UACAzD,OAAQA,EAAOuG,MAAMD,EAAWI,OAAQJ,EAAWI,OAAS,GAC5DzD,QACAU,eAIJ6B,EAAaG,KAAb,MAAAH,EAAY,IACPU,GAAmB,CACpBX,KAAMkB,EACNhD,UACAzD,OAAQA,EAAOuG,MACbD,EAAWI,OACXJ,EAAWI,OAASD,GAEtBxD,QACAU,eAKN6B,EAAaG,KAAb,MAAAH,EAAY,IACPY,GAAoB,CACrB3C,UACAzD,OAAQA,EAAOuG,MAAMD,EAAWI,OAASD,EAAc,GACvDxD,QACAU,eAIG6B,EAIT,SAASmB,GAAT,GAMI,IALFL,EAKC,EALDA,WAKC,IAJD7C,eAIC,MAJS,WAIT,EAHDzD,EAGC,EAHDA,OACAiD,EAEC,EAFDA,MACAU,EACC,EADDA,SAEI6B,EAAe,GA8BnB,OA5BAA,EAAaG,KAAb,MAAAH,EAAY,IACPF,GAAoB,CACrBC,KAAMe,EACN7C,UACAzD,OAAQA,EAAOuG,MAAM,EAAGD,GACxBrD,QACAU,eAIJ6B,EAAaG,KAAb,MAAAH,EAAY,IACPW,GAAmB,CACpB1C,UACAzD,OAAQA,EAAOuG,MAAMD,EAAYA,EAAa,GAC9CrD,QACAU,eAIJ6B,EAAaG,KAAb,MAAAH,EAAY,IACPY,GAAoB,CACrB3C,UACAzD,OAAQA,EAAOuG,MAAMD,EAAa,EAAI,GACtCrD,QACAU,eAIG6B,EA2ET,SAASoB,GAAT,GAMI,IALFN,EAKC,EALDA,WACAO,EAIC,EAJDA,eACA7G,EAGC,EAHDA,OACAiD,EAEC,EAFDA,MACAU,EACC,EADDA,SAEI6B,EAAe,GA8BnB,OA5BAA,EAAaG,KAAb,MAAAH,EAAY,IACPF,GAAoB,CACrBC,KAAMe,EACN7C,QAAS,WACTzD,OAAQA,EAAOuG,MAAM,EAAGD,GACxBrD,QACAU,eAIJ6B,EAAaG,KAAb,MAAAH,EAAY,IAlDd,YAAsE,IAA5CqB,EAA2C,EAA3CA,eAAgB7G,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACnD6B,EAAe,GAEfE,EAASlC,GAAqB,CAChCP,QACAC,WAAYlD,EAAO,GACnByD,QAAS,WACTC,WAAY,SACZC,aAmBF,OAjBA6B,EAAaG,KAAK,CAChBC,YAAa,aACbF,OAAQ,CAACA,KAGXA,EAASlC,GAAqB,CAC5BP,QACAC,WAAYlD,EAAO,GACnByD,QAASoD,EACTnD,WAAY,UACZC,aAEF6B,EAAaG,KAAK,CAChBC,YAAa,oBACbF,OAAQ,CAACA,KAGJF,EAwBFsB,CAAe,CAChBD,iBACA7G,OAAQA,EAAOuG,MAAMD,EAAYA,EAAa,GAC9CrD,QACAU,eAIJ6B,EAAaG,KAAb,MAAAH,EAAY,IACPY,GAAoB,CACrB3C,QAAS,WACTzD,OAAQA,EAAOuG,MAAMD,EAAa,GAClCrD,QACAU,eAIG6B,EAKT,SAASuB,GAAT,GASE,MAAO,CACLnB,YAVsE,EAArDA,YAWjBF,OAAQ,CAVGlC,GAAqB,CAChCC,QAFsE,EAAxCA,QAG9BP,WAHsE,EAA/BA,WAIvCQ,WAAY,QACZT,MALsE,EAAnBA,MAMnDU,SANsE,EAAZA,aAgB9D,SAASqD,GAAT,GAA6D,IAArCvD,EAAoC,EAApCA,QAASzD,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC9C,MAAO,CACLoD,GAAU,CACRnB,YAAa,WACbnC,UACAP,WAAYlD,EAAO,GACnBiD,QACAU,cAMN,SAASsD,GAAT,GAUE,IAHE,IANFrB,EAMC,EANDA,YACAL,EAKC,EALDA,KACA9B,EAIC,EAJDA,QACAzD,EAGC,EAHDA,OACAiD,EAEC,EAFDA,MACAU,EACC,EADDA,SAEIoC,EAAU,GAELN,EAAI,EAAGA,EAAIF,EAAME,IACxBM,EAAQJ,KACNnC,GAAqB,CACnBC,UACAP,WAAYlD,EAAOyF,GACnB/B,WAAY,QACZT,QACAU,cAKN,MAAO,CACLiC,cACAF,OAAQK,GAMZ,SAASmB,GAAT,GASE,MAAO,CACLtB,YAVsE,EAArDA,YAWjBF,OAAQ,CAVGlC,GAAqB,CAChCC,QAFsE,EAAxCA,QAG9BP,WAHsE,EAA/BA,WAIvCQ,WAAY,QACZT,MALsE,EAAnBA,MAMnDU,SANsE,EAAZA,aAgB9D,SAASwD,GAAT,GAA6D,IAArC1D,EAAoC,EAApCA,QAASzD,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC9C,MAAO,CACLuD,GAAU,CACRtB,YAAa,WACbnC,UACAP,WAAYlD,EAAO,GACnBiD,QACAU,cAMN,SAASyD,GAAT,GAUE,IAHE,IANFxB,EAMC,EANDA,YACAL,EAKC,EALDA,KACA9B,EAIC,EAJDA,QACAzD,EAGC,EAHDA,OACAiD,EAEC,EAFDA,MACAU,EACC,EADDA,SAEIoC,EAAU,GAELN,EAAI,EAAGA,EAAIF,EAAME,IACxBM,EAAQJ,KACNnC,GAAqB,CACnBC,UACAP,WAAYlD,EAAOyF,GACnB/B,WAAY,QACZT,QACAU,cAKN,MAAO,CACLiC,cACAF,OAAQK,GAMZ,SAASsB,GAAT,GAMI,IALFzB,EAKC,EALDA,YAKC,IAJDzC,mBAIC,MAJa,KAIb,EAHDnD,EAGC,EAHDA,OACAiD,EAEC,EAFDA,MAEC,EADDU,SASA,MAAO,CACLiC,cACAF,OAAQ,CA1jBZ,YAKI,IAJFzC,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAoE,EAEC,EAFDA,YAEC,IADDnE,YAGA,OAAOH,GAAoB,CACzBC,QACAC,aACAC,iBALD,MADa,KACb,EAMCC,QAASkE,IAsiBEC,CAAiB,CAC5BtE,QACAC,WAAYlD,EAAO,GACnBsH,YAAatH,EAAO,GACpBmD,kBAUJ,SAASqE,GAAT,GAOI,IANF5B,EAMC,EANDA,YACA1C,EAKC,EALDA,WACAmC,EAIC,EAJDA,UAIC,IAHDlC,mBAGC,MAHa,KAGb,EAFDF,EAEC,EAFDA,MAEC,EADDU,SASA,MAAO,CACLiC,cACAF,OAAQ,CATDN,GAAY,CACnBnC,QACAC,aACAmC,YACAlC,kBASJ,SAASsE,GAAT,GAQI,IAPF7B,EAOC,EAPDA,YACA1C,EAMC,EANDA,WACAmC,EAKC,EALDA,UACA5B,EAIC,EAJDA,QAIC,IAHDN,mBAGC,MAHa,KAGb,EAUD,MAAO,CACLyC,cACAF,OAAQ,CA3kBZ,YAOI,IANFzC,EAMC,EANDA,MACAC,EAKC,EALDA,WACAmC,EAIC,EAJDA,UACA5B,EAGC,EAHDA,QAGC,IAFDN,mBAEC,MAFa,KAEb,EADDQ,EACC,EADDA,SAEI+D,EAAgBtC,GAAY,CAC9BnC,QACAC,aACAmC,YACAlC,gBAeF,MAXgB,QAAZM,IAAmBiE,GAAiB,UAGX5F,IAAzBmB,EAAM0E,iBACRD,GAAiB,EAAIzE,EAAM0E,gBAKzBhE,EAASiE,iBAAgBF,GAAiB,MAEvCA,EAqiBaG,CAAuB,CACzC5E,MAFD,EAFDA,MAKEC,aACAmC,YACA5B,UACAN,cACAQ,SAPD,EADDA,aAqBK,SAASmE,GAAT,GACL,OAAOzB,GAAmB,CACxBC,WAAY,EACZ7C,QAAS,UACTzD,OAJoD,EAA3BA,OAKzBiD,MALoD,EAAnBA,MAMjCU,SANoD,EAAZA,WAUrC,SAASoE,GAAT,GAAiD,IAA5B/H,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACrCqE,EAAY,GAEhBA,EAAUrC,KACRoB,GAAU,CACRnB,YAAa,WACbnC,QAAS,UACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIJ,IAAK,IAAI8B,EAAI,EAAGA,GAAK,EAAGA,IACtBuC,EAAUrC,KACRoB,GAAU,CACRnB,YAAY,eAAgBH,EAC5BhC,QAAS,UACTP,WAAYlD,EAAOyF,GACnBxC,QACAU,cAKN,OAAOqE,EAGF,SAASC,GAAT,GACL,OAAOd,GAAa,CAClB1D,QAAS,UACTzD,OAHmD,EAA3BA,OAIxBiD,MAJmD,EAAnBA,MAKhCU,SALmD,EAAZA,WAUpC,SAASuE,GAAT,GACL,OAAO7B,GAAmB,CACxBC,WAAY,EACZ7C,QAAS,QACTzD,OAJuD,EAA3BA,OAK5BiD,MALuD,EAAnBA,MAMpCU,SANuD,EAAZA,WAUxC,SAASwE,GAAT,GAAoD,IAA5BnI,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAyB5C,MAxBgB,CACd0D,GAAiB,CACfzB,YAAa,oBACb5F,OAAQA,EAAOuG,MAAM,EAAG,GACxBtD,QACAU,aAGF0D,GAAiB,CACfzB,YAAa,eACb5F,OAAQA,EAAOuG,MAAM,EAAG,GACxBtD,QACAU,aAGFoD,GAAU,CACRnB,YAAa,aACbnC,QAAS,QACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAOC,SAASyE,GAAT,GACL,MAAO,CACLf,GAAiB,CACfzB,YAAa,UACb5F,OAJoD,EAA3BA,OAKzBiD,MALoD,EAAnBA,MAMjCU,SANoD,EAAZA,YAYvC,SAAS0E,GAAT,GACL,OAAO7B,GAAiB,CACtBF,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GACzBG,YAAa,EACbzG,OAJqD,EAA3BA,OAK1BiD,MALqD,EAAnBA,MAMlCU,SANqD,EAAZA,WAUtC,SAAS2E,GAAT,GACL,OAAOtB,GAAa,CAClBvD,QAAS,OACTzD,OAHoD,EAA3BA,OAIzBiD,MAJoD,EAAnBA,MAKjCU,SALoD,EAAZA,WASrC,SAAS4E,GAAT,GACL,OAAOpB,GAAa,CAClB1D,QAAS,OACTzD,OAHoD,EAA3BA,OAIzBiD,MAJoD,EAAnBA,MAKjCU,SALoD,EAAZA,WAUrC,SAAS6E,GAAT,GAAmD,IAAD,EAA3BxI,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAE3C,OAAOgD,GAAmB,CACxBL,WAAY,EACZ7C,QAHW,SAAGE,EAAS8E,UAAZ,EAAwB,WAInCzI,SACAiD,QACAU,aAIG,SAAS+E,GAAT,GAEL,IAFuD,IAA5B1I,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACtCgF,EAAe,GACVlD,EAAI,EAAGA,EAAI,EAAGA,IACrBkD,EAAahD,KACXoB,GAAU,CACRnB,YAAgBH,EAAI,EAAT,SACXhC,QAAS,OACTP,WAAYlD,EAAOyF,GACnBxC,QACAU,cAKN,OAAOgF,EAGF,SAASC,GAAT,GAAkD,IAA5B5I,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAY1C,MAXmB,CAAC,cAAe,MAAO,gBACVrF,KAAI,SAACsH,EAAaH,GAChD,OAAOyB,GAAU,CACftB,cACAnC,QAAS,OACTP,WAAYlD,EAAOyF,GACnBxC,QACAU,gBAQC,SAASkF,GAAT,GACL,OAAOlC,GAAmB,CACxBL,WAAY,EACZtG,OAHqD,EAA3BA,OAI1BiD,MAJqD,EAAnBA,MAKlCU,SALqD,EAAZA,WAStC,SAASmF,GAAT,GAAkD,IAA5B9I,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAE1C,MADmB,CAAC,WAAY,WACZrF,KAAI,SAACsH,EAAaH,GACpC,OAAOsB,GAAU,CACfnB,cACAnC,QAAS,UACTP,WAAYlD,EAAOyF,GACnBxC,QACAU,gBAKC,SAASoF,GAAT,GAcL,IAduD,IAA5B/I,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACtCgF,EAAexB,GAAa,CAC9B1D,QAAS,UACTzD,SACAiD,QACAU,aAGEqF,EAAerH,GACjB,SACAgC,EAASsF,kBACT3H,GAAc,UAGPmE,EAAI,EAAGA,EAAI,EAAGA,IACrBkD,EAAahD,KACXuB,GAAU,CACRtB,YAAgBH,EAAI,EAAT,sBACXhC,QAAS,UACTP,WAAYlD,EAAO,GAAKgJ,EAAavD,GACrCxC,QACAU,cAKN,OAAOgF,EAIF,SAASO,GAAT,GACL,OAAOtC,GAAiB,CACtBN,WAAY,EACZO,eAAgB,OAChB7G,OAJqD,EAA3BA,OAK1BiD,MALqD,EAAnBA,MAMlCU,SANqD,EAAZA,WAUtC,SAASwF,GAAT,GAAkD,IAA5BnJ,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACtCgF,EAAe,GAsBnB,OApBAA,EAAahD,KACXoB,GAAU,CACRnB,YAAa,eACbnC,QAAS,UACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIJgF,EAAahD,KACX6B,GAAO,CACL5B,YAAa,eACb1C,WAAYlD,EAAO,GACnBqF,UAAW,EACXpC,QACAU,cAIGgF,EAGF,SAASS,GAAT,GAAkD,IAA5BpJ,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACtCgF,EAAe,GAiBnB,OAfAA,EAAahD,KACXuB,GAAU,CACRtB,YAAa,aACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIJgF,EAAahD,KAAK,CAChBC,YAAa,WACbF,OAAQ,CAA6B,GAA5BiD,EAAa,GAAGjD,OAAO,MAG3BiD,EAIF,SAASU,GAAT,GACL,OAAOzC,GAAiB,CACtBN,WAAY,EACZO,eAAgB,QAChB7G,OAJqD,EAA3BA,OAK1BiD,MALqD,EAAnBA,MAMlCU,SANqD,EAAZA,WAUtC,SAAS2F,GAAT,GAAkD,IAA5BtJ,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC1C,MAAO,CACLoD,GAAU,CACRnB,YAAa,WACbnC,QAAS,QACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGFoD,GAAU,CACRnB,YAAa,UACbnC,QAAS,QACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAKC,SAAS4F,GAAT,GAAkD,IAA5BvJ,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC1C,MAAO,CACLuD,GAAU,CACRtB,YAAa,MACbnC,QAAS,QACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAIFuD,GAAU,CACRtB,YAAa,yBACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAMC,SAAS6F,GAAT,GACL,OAAOhD,GAAiB,CACtBF,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GACzBtG,OAHyD,EAA3BA,OAI9BiD,MAJyD,EAAnBA,MAKtCU,SALyD,EAAZA,WAS1C,SAAS8F,GAAT,GAAsD,IAA5BzJ,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC9C,MAAO,CACLoD,GAAU,CACRnB,YAAa,WACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAKC,SAAS+F,GAAT,GAGL,IAH2D,IAA5B1J,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC1CgF,EAAe,GAEVlD,EAAI,EAAGA,EAAI,EAAGA,IACrBkD,EAAahD,KACXuB,GAAU,CACRtB,YAAY,SAASH,EAAI,GAAd,SACXhC,QAAS,OACTP,WAAYlD,EAAOyF,GACnBxC,QACAU,cAeN,OAVAgF,EAAahD,KACXuB,GAAU,CACRtB,YAAa,cACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIGgF,EAIF,SAASgB,GAAT,GACL,OAAOhD,GAAmB,CACxBL,WAAY,EACZtG,OAHsD,EAA3BA,OAI3BiD,MAJsD,EAAnBA,MAKnCU,SALsD,EAAZA,WASvC,SAASiG,GAAT,GAAmD,IAA5B5J,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACvCgF,EAAe,GAiCnB,OA/BAA,EAAahD,KACX8B,GAAW,CACT7B,YAAa,WACb1C,WAAYlD,EAAO,GACnBqF,UAAWrF,EAAO,GAClByD,QAAS,UACTR,QACAU,cAIJgF,EAAahD,KACXoB,GAAU,CACRnB,YAAa,UACbnC,QAAS,UACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIJgF,EAAahD,KACXoB,GAAU,CACRnB,YAAa,qBACbnC,QAAS,UACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIGgF,EAGF,SAASkB,GAAT,GAAmD,IAA5B7J,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACvCgF,EAAe,GAsBnB,OApBAA,EAAahD,KACXuB,GAAU,CACRtB,YAAa,WACbnC,QAAS,UACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIJgF,EAAahD,KACXuB,GAAU,CACRtB,YAAa,eACbnC,QAAS,UACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIGgF,EAIF,SAASmB,GAAT,GAAqD,IAA5B9J,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC7C,OAAO6C,GAAiB,CACtBF,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GACzBG,YAAa,EACbzG,OAAQA,EACLuG,MAAM,EAAG,GACTwD,OAAO/J,EAAOuG,MAAM,EAAG,IACvBwD,OAAO/J,EAAOuG,MAAM,IACvBtD,QACAU,aAIG,SAASqG,GAAT,GACL,MAAO,CACL/C,GAAe,CACbrB,YAAa,WACbL,KAAM,EACN9B,QAAS,QACTzD,OANoD,EAA3BA,OAOzBiD,MAPoD,EAAnBA,MAQjCU,SARoD,EAAZA,YAavC,SAASsG,GAAT,GAAoD,IAA5BjK,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC5C,MAAO,CACLuD,GAAU,CACRtB,YAAa,eACbnC,QAAS,QACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAMC,SAASuG,GAAT,GAAkD,IAAD,EAA3BlK,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAG1C,OAAO6C,GAAiB,CACtBF,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B7C,QAJW,SAAGE,EAAS8E,UAAZ,EAAwB,WAKnCzI,OAAQA,EAAOuG,MAAM,EAAG,GAAGwD,OAAO/J,EAAOuG,MAAM,IAC/CtD,QACAU,aAIG,SAASwG,GAAT,GACL,OAAOnD,GAAa,CAClBvD,QAAS,QACTzD,OAHmD,EAA3BA,OAIxBiD,MAJmD,EAAnBA,MAKhCU,SALmD,EAAZA,WASpC,SAASyG,GAAT,GAAgD,EAA3BpK,OAA2B,EAAnBiD,MAAmB,EAAZU,SACzC,MAluCO,GAsuCF,SAAS0G,GAAT,GAAuD,IAA5BrK,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC3CqE,EAAY,GAGZsC,EAAe9G,GAAqB,CACtCP,QACAC,WAAYlD,EAAO,GACnByD,QAAS,MACTC,WAAY,SACZC,aAEFqE,EAAUrC,KAAK,CACbC,YAAa,eACbF,OAAQ,CAAC4E,KAGXtC,EAAUrC,KAAV,MAAAqC,EAAS,IACJ/B,GAAqB,CACtBxC,QAAS,MACTzD,OAAQA,EAAOuG,MAAM,EAAG,GACxBtD,QACAU,eAKJ,IAAI4G,EAAc/G,GAAqB,CACrCP,QACAC,WAAYlD,EAAO,GACnByD,QAAS,MACTC,WAAY,UACZC,aAgBF,OAdAqE,EAAUrC,KAAK,CACbC,YAAa,cACbF,OAAQ,CAAC6E,KAGXvC,EAAUrC,KAAV,MAAAqC,EAAS,IACJ5B,GAAoB,CACrB3C,QAAS,MACTzD,OAAQA,EAAOuG,MAAM,GACrBtD,QACAU,eAIGqE,EAGF,SAASwC,GAAT,GAAsD,IAA5BxK,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC1CgF,EAAe,GAsBnB,OApBAA,EAAahD,KACXoB,GAAU,CACRnB,YAAa,WACbnC,QAAS,MACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIJgF,EAAahD,KACX6B,GAAO,CACL5B,YAAa,eACb1C,WAAYlD,EAAO,GACnBqF,UAAW,EACXpC,QACAU,cAIGgF,EAGF,SAAS8B,GAAT,GAAsD,IAA5BzK,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC9C,MAAO,CACLuD,GAAU,CACRtB,YAAa,YACbnC,QAAS,MACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAMC,SAAS+G,GAAT,GACL,OAAOrE,GAAmB,CACxBC,WAAY,EACZ7C,QAAS,OACTzD,OAJoD,EAA3BA,OAKzBiD,MALoD,EAAnBA,MAMjCU,SANoD,EAAZA,WAUrC,SAASgH,GAAT,GAAiD,IAA5B3K,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACzC,MAAO,CACLoD,GAAU,CACRnB,YAAa,iBACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGFoD,GAAU,CACRnB,YAAa,UACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAKC,SAASiH,GAAT,GAAiD,IAA5B5K,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACzC,MAAO,CACLuD,GAAU,CACRtB,YAAa,mBACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAMC,SAASkH,GAAT,GACL,OAAOrE,GAAiB,CACtBF,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5BtG,OAHuD,EAA3BA,OAI5BiD,MAJuD,EAAnBA,MAKpCU,SALuD,EAAZA,WASxC,SAASmH,GAAT,GAAoD,IAA5B9K,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAGxCgF,EAFe,CAAC,iBAAkB,gBAENrK,KAAI,SAACsH,EAAaH,GAChD,OAAOsB,GAAU,CACfnB,cACAnC,QAAS,MACTP,WAAYlD,EAAOyF,GACnBxC,QACAU,gBAyBJ,OArBAgF,EAAahD,KACXoB,GAAU,CACRnB,YAAa,UACbnC,QAAS,MACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIJgF,EAAahD,KACX8B,GAAW,CACT7B,YAAa,WACb1C,WAAYlD,EAAO,GACnBqF,UAAWrF,EAAO,GAClByD,QAAS,MACTR,QACAU,cAIGgF,EAGF,SAASoC,GAAT,GACL,OAAO5D,GAAa,CAClB1D,QAAS,MACTzD,OAHsD,EAA3BA,OAI3BiD,MAJsD,EAAnBA,MAKnCU,SALsD,EAAZA,WAUvC,SAASqH,GAAT,GACL,OAAOpE,GAAiB,CACtBN,WAAY,EACZO,eAAgB,UAChB7G,OAJsD,EAA3BA,OAK3BiD,MALsD,EAAnBA,MAMnCU,SANsD,EAAZA,WAUvC,SAASsH,GAAT,GAAmD,IAA5BjL,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAE3C,MADmB,CAAC,QAAS,gBACTrF,KAAI,SAACsH,EAAaH,GAAd,OACtBsB,GAAU,CACRnB,cACAnC,QAAS,UACTP,WAAYlD,EAAOyF,GACnBxC,QACAU,gBAKC,SAASuH,GAAT,GAAmD,IAA5BlL,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC3C,MAAO,CACLuD,GAAU,CACRtB,YAAa,oBACbnC,QAAS,UACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAMC,SAASwH,GAAT,GACL,OAAO3E,GAAiB,CACtBF,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GACzBG,YAAa,EACbzG,OAJuD,EAA3BA,OAK5BiD,MALuD,EAAnBA,MAMpCU,SANuD,EAAZA,WAUxC,SAASyH,GAAT,GAAoD,IAA5BpL,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC5C,MAAO,CACLoD,GAAU,CACRnB,YAAa,WACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGFsD,GAAe,CACbrB,YAAa,kBACbL,KAAM,EACN9B,QAAS,OACTzD,OAAQA,EAAOuG,MAAM,EAAG,GACxBtD,QACAU,aAGFsD,GAAe,CACbrB,YAAa,kBACbL,KAAM,EACN9B,QAAS,OACTzD,OAAQA,EAAOuG,MAAM,EAAG,GACxBtD,QACAU,aAGFoD,GAAU,CACRnB,YAAa,eACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAKC,SAAS0H,GAAT,GAAoD,IAA5BrL,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACxCgF,EAAe,CACjBzB,GAAU,CACRtB,YAAa,WACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGF0D,GAAiB,CACfzB,YAAa,6BACb5F,OAAQA,EAAOuG,MAAM,EAAG,GACxBtD,QACAU,cAKA2H,EAAWrI,EAAMsI,QAAUvL,EAAO,GAMtC,OALA2I,EAAahD,KAAK,CAChBC,YAAa,WACbF,OAAQ,CAAC4F,KAGJ3C,EAIF,SAAS6C,GAAT,GAAuD,IAA5BxL,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC3CgF,EAAe/B,GAAiB,CAClCN,WAAY,EACZO,eAAgB,QAChB7G,OAAQA,EAAOuG,MAAM,EAAG,GAAGwD,OAAO/J,EAAOuG,MAAM,KAC/CtD,QACAU,aAGE8H,EAAkBjI,GAAqB,CACzCP,QACAC,WAAYlD,EAAO,GACnByD,QAAS,QACTC,WAAY,SACZC,aAEFgF,EAAahD,KAAK,CAChBC,YAAa,kBACbF,OAAQ,CAAC+F,KAGX,IAAIC,EAAkBlI,GAAqB,CACzCP,QACAC,WAAYlD,EAAO,GACnByD,QAAS,QACTC,WAAY,SACZC,aAOF,OALAgF,EAAahD,KAAK,CAChBC,YAAa,kBACbF,OAAQ,CAACgG,KAGJ/C,EAGF,SAASgD,GAAT,GAAsD,IAA5B3L,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC1CgF,EAAe,GA0CnB,OAxCAA,EAAahD,KACXoB,GAAU,CACRnB,YAAa,kBACbnC,QAAS,QACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIJgF,EAAahD,KAAb,MAAAgD,EAAY,IACP9C,GAAkB,CACnBN,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACtB9B,QAAS,QACTzD,OAAQA,EAAOuG,MAAM,EAAG,GACxBtD,QACAU,eAIJgF,EAAahD,KAAb,MAAAgD,EAAY,IACPzC,GAAmB,CACpBX,KAAM,EACN9B,QAAS,QACTzD,OAAQA,EAAOuG,MAAM,EAAG,IACxBtD,QACAU,eAIJgF,EAAahD,KACXoB,GAAU,CACRnB,YAAa,kBACbnC,QAAS,QACTP,WAAYlD,EAAO,IACnBiD,QACAU,cAIGgF,EAGF,SAASiD,GAAT,GAAsD,IAA5B5L,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC9C,MAAO,CACLuD,GAAU,CACRtB,YAAa,gBACbnC,QAAS,QACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGFuD,GAAU,CACRtB,YAAa,iBACbnC,QAAS,QACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGFuD,GAAU,CACRtB,YAAa,kBACbnC,QAAS,QACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAMC,SAASkI,GAAT,GAAoD,IAAD,EAA3B7L,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAG5C,OAAOgD,GAAmB,CACxBL,WAAY,EACZ7C,QAJW,SAAGE,EAAS8E,UAAZ,EAAwB,WAKnCzI,SACAiD,QACAU,aAIG,SAASmI,GAAT,GAAmD,IAA5B9L,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACvCgF,EAAe,GAEfoD,EAAcvI,GAAqB,CACrCP,QACAC,WAAYlD,EAAO,GACnByD,QAAS,MACTN,YAAa,UACbO,WAAY,QACZC,aA4BF,OA1BAgF,EAAahD,KAAK,CAChBC,YAAa,WACbF,OAAQ,CAACqG,KAGXpD,EAAahD,KACX8B,GAAW,CACT7B,YAAa,WACb1C,WAAYlD,EAAO,GACnBqF,UAAWrF,EAAO,GAClByD,QAAS,MACTN,YAAa,UACbF,QACAU,cAIJgF,EAAahD,KACX0B,GAAiB,CACfzB,YAAa,UACb5F,OAAQ,CAACA,EAAO,GAAIA,EAAO,IAC3BiD,QACAU,cAIGgF,EAGF,SAASqD,GAAT,GAAmD,IAA5BhM,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACvCsI,EAAa,SACZhJ,GADY,IAEfI,QAASJ,EAAMI,QAAUJ,EAAMK,QAAUtD,EAAO,KAGlD,MAAO,CACLkH,GAAU,CACRtB,YAAa,eACbnC,QAAS,MACTP,WAAYlD,EAAO,GACnBiD,MAAOgJ,EACPtI,aAGFuD,GAAU,CACRtB,YAAa,gBACbnC,QAAS,MACTP,WAAYlD,EAAO,GACnBiD,MAAOgJ,EACPtI,cAMC,SAASuI,GAAT,GAAkD,IAA5BlM,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC1C,OAAO6C,GAAiB,CACtBF,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GACzBG,YAAa,EACbzG,OAAQA,EAAOuG,MAAM,EAAG,GAAGwD,OAAO/J,EAAO,IAAI+J,OAAO/J,EAAOuG,MAAM,IACjEtD,QACAU,aAIG,SAASwI,GAAT,GAAiD,IAA5BnM,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACzC,MAAO,CACLoD,GAAU,CACRnB,YAAa,WACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGFoD,GAAU,CACRnB,YAAa,mBACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGF0D,GAAiB,CACfzB,YAAa,eACbzC,YAAa,SACbnD,OAAQA,EAAOuG,MAAM,EAAG,GACxBtD,QACAU,aAGF0D,GAAiB,CACfzB,YAAa,oBACbzC,YAAa,SACbnD,OAAQA,EAAOuG,MAAM,EAAG,GACxBtD,QACAU,cAKC,SAASyI,GAAT,GAAiD,IAA5BpM,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACzC,MAAO,CACLuD,GAAU,CACRtB,YAAa,WACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGF0D,GAAiB,CACfzB,YAAa,UACbzC,YAAa,SACbnD,SACAiD,QACAU,cAMC,SAAS0I,GAAT,GAAsD,IAAD,EAA3BrM,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAE9C,OAAOgD,GAAmB,CACxBL,WAAY,EACZ7C,QAHW,SAAGE,EAAS8E,UAAZ,EAAwB,WAInCzI,SACAiD,QACAU,aAIG,SAAS2I,GAAT,GACL,OAAOtF,GAAa,CAClBvD,QAAS,OACTzD,OAHuD,EAA3BA,OAI5BiD,MAJuD,EAAnBA,MAKpCU,SALuD,EAAZA,WASxC,SAAS4I,GAAT,GACL,OAAOpF,GAAa,CAClB1D,QAAS,OACTzD,OAHuD,EAA3BA,OAI5BiD,MAJuD,EAAnBA,MAKpCU,SALuD,EAAZA,WAUxC,SAAS6I,GAAT,GAAmD,IAA5BxM,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACvCgF,EAAe,GAGnBA,EAAahD,KAAb,MAAAgD,EAAY,IACPrD,GAAoB,CACrBC,KAAM,EACN9B,QAAS,WACTzD,SACAiD,QACAU,eAKJ,IAAI8I,EAAejJ,GAAqB,CACtCP,QACAC,WAAYlD,EAAO,GACnByD,QAAS,WACTC,WAAY,SACZC,aAEFgF,EAAahD,KAAK,CAChBC,YAAa,aACbF,OAAQ,CAAC+G,KAGX,IAKIC,EALsB,CACxB,sBACA,qBACA,2BAEmCpO,KAAI,SAACsH,EAAaH,GASrD,MAAO,CACLG,cACAF,OAAQ,CAVGlC,GAAqB,CAChCP,QACAC,WAAYlD,EAAOyF,EAAI,GACvBhC,QAAS,OACTC,WAAY,UACZC,kBAmBJ,OAXAgF,EAAahD,KAAb,MAAAgD,EAAY,IAAS+D,IAErB/D,EAAahD,KAAb,MAAAgD,EAAY,IACPvC,GAAoB,CACrB3C,QAAS,WACTzD,OAAQA,EAAOuG,MAAM,IACrBtD,QACAU,eAIGgF,EAGF,SAASgE,GAAT,GAAkD,IAA5B3M,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC1C,MAAO,CACLoD,GAAU,CACRnB,YAAa,WACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGF6D,GAAO,CACL5B,YAAa,aACb1C,WAAYlD,EAAO,GACnBqF,UAAW,EACXpC,QACAU,cAKC,SAASiJ,GAAT,GAAkD,IAA5B5M,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC1C,MAAO,CACLuD,GAAU,CACRtB,YAAa,cACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAMC,SAASkJ,GAAT,GACL,OAAOrG,GAAiB,CACtBF,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GACzBG,YAAa,EACbzG,OAJsD,EAA3BA,OAK3BiD,MALsD,EAAnBA,MAMnCU,SANsD,EAAZA,WAUvC,SAASmJ,GAAT,GAAmD,IAA5B9M,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACvCqE,EAAY,GAEhBA,EAAUrC,KACRoB,GAAU,CACRnB,YAAa,WACbnC,QAAS,MACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIJ,IAAIoJ,EAAsBvJ,GAAqB,CAC7CP,QACAC,WAAYlD,EAAO,GACnByD,QAAS,MACTN,YAAa,UACbO,WAAY,QACZC,aAOF,OALAqE,EAAUrC,KAAK,CACbC,YAAa,sBACbF,OAAQ,CAACqH,KAGJ/E,EAGF,SAASgF,GAAT,GAAmD,IAA5BhN,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC3C,MAAO,CACLuD,GAAU,CACRtB,YAAa,WACbnC,QAAS,MACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGFuD,GAAU,CACRtB,YAAa,kBACbnC,QAAS,MACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAMC,SAASsJ,GAAT,GAAmD,IAA5BjN,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC3C,OAAOiD,GAAiB,CACtBN,WAAY,EACZO,eAAgB,OAChB7G,OAAQA,EAAOuG,MAAM,EAAG,GAAGwD,OAAO/J,EAAOuG,MAAM,IAC/CtD,QACAU,aAIG,SAASuJ,GAAT,GAAkD,IAA5BlN,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACtCwJ,EAAY,SACXxJ,GADW,IAEdiE,gBAAgB,IAGlB,MAAO,CACLb,GAAU,CACRnB,YAAa,kBACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGF8D,GAAW,CACT7B,YAAa,gBACb1C,WAAYlD,EAAO,GACnBqF,UAAWrF,EAAO,GAClByD,QAAS,OACTR,QACAU,aAGF8D,GAAW,CACT7B,YAAa,eACb1C,WAAYlD,EAAO,GACnBqF,UAAWrF,EAAO,GAClByD,QAAS,OACTR,QACAU,SAAUwJ,KAKT,SAASC,GAAT,GAAkD,IAA5BpN,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC1C,MAAO,CACLuD,GAAU,CACRtB,YAAa,WACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGFuD,GAAU,CACRtB,YAAa,qBACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGF0D,GAAiB,CACfzB,YAAa,wBACb5F,OAAQA,EAAOuG,MAAM,GACrBtD,QACAU,cAMC,SAAS0J,GAAT,GACL,OAAOhH,GAAmB,CACxBC,WAAY,EACZ7C,QAAS,QACTzD,OAJoD,EAA3BA,OAKzBiD,MALoD,EAAnBA,MAMjCU,SANoD,EAAZA,WAUrC,SAAS2J,GAAT,GAAiD,IAA5BtN,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACzC,MAAO,CACLoD,GAAU,CACRnB,YAAa,MACbnC,QAAS,QACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGFoD,GAAU,CACRnB,YAAa,eACbnC,QAAS,QACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAKC,SAAS4J,GAAT,GAAiD,IAA5BvN,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACrCsI,EAAa,MAAQhJ,GAOzB,YAN+BnB,IAA3BmK,EAAcpI,SAChBoI,EAAcpI,UAAY7D,EAAO,GAEjCiM,EAAcpI,SAAW7D,EAAO,GAG3B,CACLkH,GAAU,CACRtB,YAAa,eACbnC,QAAS,QACTP,WAAYlD,EAAO,GACnBiD,MAAOgJ,EACPtI,cAMC,SAAS6J,GAAT,GAIL,IAJyD,IAA5BxN,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACxCgF,EAAe,GAGVlD,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIC,EAASlC,GAAqB,CAChCP,QACAC,WAAYlD,EAAOyF,GACnBhC,QAAS,WACTC,WAAY,SACZC,aAEFgF,EAAahD,KAAK,CAChBC,YAAgBH,EAAI,EAAT,SACXC,OAAQ,CAACA,KAKb,IADA,IAAI+H,EAAU,GACLhI,EAAI,EAAGA,EAAI,EAAGA,IACrBgI,EAAQ9H,KACNnC,GAAqB,CACnBP,QACAC,WAAYlD,EAAOyF,GACnBhC,QAAS,WACTC,WAAY,SACZC,cAINgF,EAAahD,KAAK,CAChBC,YAAa,UACbF,OAAQ+H,IAGV,IAAIC,EAAU,CACZlK,GAAqB,CACnBP,QACAC,WAAYlD,EAAO,GACnByD,QAAS,WACTC,WAAY,SACZC,cA6BJ,OA1BAgF,EAAahD,KAAK,CAChBC,YAAY,UACZF,OAAQgI,IAIV/E,EAAahD,KAAb,MAAAgD,EAAY,IACPzC,GAAmB,CACpBX,KAAM,EACN9B,QAAS,WACTzD,OAAQA,EAAOuG,MAAM,EAAG,GACxBtD,QACAU,eAKJgF,EAAahD,KAAb,MAAAgD,EAAY,IACPvC,GAAoB,CACrB3C,QAAS,WACTzD,OAAQA,EAAOuG,MAAM,EAAG,IACxBtD,QACAU,eAIGgF,EAGF,SAASgF,GAAT,GAAmD,IAA5B3N,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAEvCgF,EADe,CAAC,uBAAwB,eACZrK,KAAI,SAACsH,EAAaH,GAChD,OAAOsB,GAAU,CACfnB,cACAnC,QAAS,UACTP,WAAYlD,EAAOyF,GACnBxC,QACAU,gBAeJ,OAXAgF,EAAahD,KACXsB,GAAe,CACbrB,YAAa,sBACbL,KAAM,EACN9B,QAAS,UACTzD,OAAQ,CAACA,EAAO,GAAIA,EAAO,IAC3BiD,QACAU,cAIGgF,EAGF,SAASiF,GAAT,GAAmD,IAA5B5N,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACvCgF,EAAe,GAEnBA,EAAahD,KACXuB,GAAU,CACRtB,YAAa,eACbnC,QAAS,UACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIJ,IAAIkK,EAAsBrK,GAAqB,CAC7CP,QACAC,WAAYlD,EAAO,GACnByD,QAAS,UACTC,WAAY,QACZC,aAiBF,OAfAgF,EAAahD,KAAK,CAChBC,YAAa,sBACbF,OAAQlE,MAAM,GAAGC,KAAKoM,KAGxBlF,EAAahD,KACXuB,GAAU,CACRtB,YAAa,gBACbnC,QAAS,UACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIGgF,EAIF,SAASmF,GAAT,GACL,OAAOzH,GAAmB,CACxBC,WAAY,EACZ7C,QAAS,QACTzD,OAJuD,EAA3BA,OAK5BiD,MALuD,EAAnBA,MAMpCU,SANuD,EAAZA,WAUxC,SAASoK,GAAT,GACL,OAAO/G,GAAa,CAClBvD,QAAS,QACTzD,OAHsD,EAA3BA,OAI3BiD,MAJsD,EAAnBA,MAKnCU,SALsD,EAAZA,WASvC,SAASqK,GAAT,GAAoD,IAA5BhO,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC5C,MAAO,CACLuD,GAAU,CACRtB,YAAa,MACbnC,QAAS,QACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAIFuD,GAAU,CACRtB,YAAa,yBACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAMC,SAASsK,GAAT,GACL,OAAOtH,GAAmB,CACxBL,WAAY,EACZtG,OAHsD,EAA3BA,OAI3BiD,MAJsD,EAAnBA,MAKnCU,SALsD,EAAZA,WASvC,SAASuK,GAAT,GAAmD,IAA5BlO,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACvCgF,EAAe,GAEnBA,EAAahD,KACXoB,GAAU,CACRnB,YAAa,WACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAKJ,IAAK,IAAI8B,EAAI,EAAGA,EAAI,EAAGA,IACrBkD,EAAahD,KACX8B,GAAW,CACT7B,YAAY,iBAAiBH,EAAI,GACjCvC,WAAYlD,EAAO,EAAIyF,EAAI,GAC3BJ,UAAWrF,EAAO,EAAIyF,EAAI,GAC1BhC,QAAS,OACTN,YAAa,UACbF,QACAU,cAeN,OAVAgF,EAAahD,KACXoB,GAAU,CACRnB,YAAa,MACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAIGgF,EAGF,SAASwF,GAAT,GAAmD,IAA5BnO,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC3C,MAAO,CACLuD,GAAU,CACRtB,YAAa,WACbnC,QAAS,WACTP,WAAYlD,EAAO,GACnBiD,QACAU,aAGFuD,GAAU,CACRtB,YAAa,UACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAMC,SAASyK,GAAT,GAAqD,IAA5BpO,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACzCgF,EAAe,GAGnBA,EAAahD,KAAb,MAAAgD,EAAY,IACP9C,GAAkB,CACnBN,KAAM,CAAC,EAAG,EAAG,EAAG,GAChB9B,QAAS,WACTzD,SACAiD,QACAU,eAKJ,IADA,IAAI+J,EAAU,GACLjI,EAAI,EAAGA,EAAI,EAAGA,IACrBiI,EAAQ/H,KACNnC,GAAqB,CACnBP,QACAC,WAAYlD,EAAOyF,GACnBhC,QAAS,WACTC,WAAY,SACZC,cA6BN,OAzBAgF,EAAahD,KAAK,CAChBC,YAAa,UACbF,OAAQgI,IAIV/E,EAAahD,KAAb,MAAAgD,EAAY,IACP1C,GAAqB,CACtBxC,QAAS,WACTzD,OAAQA,EAAOuG,MAAM,EAAG,GACxBtD,QACAU,eAKJgF,EAAahD,KAAb,MAAAgD,EAAY,IACPvC,GAAoB,CACrB3C,QAAS,WACTzD,OAAQA,EAAOuG,MAAM,EAAG,IACxBtD,QACAU,eAIGgF,EAGF,SAAS0F,GAAT,GACL,MAAO,CACLpH,GAAe,CACbrB,YAAa,WACbL,KAAM,EACN9B,QAAS,OACTzD,OANoD,EAA3BA,OAOzBiD,MAPoD,EAAnBA,MAQjCU,SARoD,EAAZA,YAavC,SAAS2K,GAAT,GAAoD,IAA5BtO,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC5C,MAAO,CACLyD,GAAe,CACbxB,YAAa,WACbL,KAAM,EACN9B,QAAS,OACTzD,SACAiD,QACAU,aAGFuD,GAAU,CACRtB,YAAa,cACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAMC,SAAS4K,GAAT,GAAmD,IAAD,EAA3BvO,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACrCF,EAAO,SAAGE,EAAS8E,UAAZ,EAAwB,WAEjCE,EAAe,GAGnBA,EAAahD,KAAb,MAAAgD,EAAY,IACPrD,GAAoB,CACrBC,KAAM,EACN9B,UACAzD,SACAiD,QACAU,eAKJ,IADA,IAAI+J,EAAU,GACLjI,EAAI,EAAGA,EAAI,EAAGA,IACrBiI,EAAQ/H,KACNnC,GAAqB,CACnBP,QACAC,WAAYlD,EAAOyF,GACnBhC,UACAC,WAAY,SACZC,cAINgF,EAAahD,KAAK,CAChBC,YAAa,UACbF,OAAQgI,IAGV,IAAIc,EAAU,CACZhL,GAAqB,CACnBP,QACAC,WAAYlD,EAAO,GACnByD,UACAC,WAAY,SACZC,cA4BJ,OAzBAgF,EAAahD,KAAK,CAChBC,YAAa,UACbF,OAAQ8I,IAIV7F,EAAahD,KAAb,MAAAgD,EAAY,IACP1C,GAAqB,CACtBxC,UACAzD,OAAQA,EAAOuG,MAAM,EAAG,GACxBtD,QACAU,eAKJgF,EAAahD,KAAb,MAAAgD,EAAY,IACPvC,GAAoB,CACrB3C,UACAzD,OAAQA,EAAOuG,MAAM,EAAG,IACxBtD,QACAU,eAIGgF,EAGF,SAAS8F,GAAT,GAAkD,IAA5BzO,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAC1C,MAAO,CACLoD,GAAU,CACRnB,YAAa,kBACbnC,QAAS,OACTP,WAAYlD,EAAO,GACnBiD,QACAU,cAKC,SAAS+K,GAAT,GAAkD,IAA5B1O,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACtCgF,EAAe,GAEG,CAAC,WAAY,iBACnBgG,SAAQ,SAAC/I,EAAaH,GACpCkD,EAAahD,KACXuB,GAAU,CACRtB,cACAnC,QAAS,OACTP,WAAYlD,EAAOyF,GACnBxC,QACAU,iBAiBN,MAZwB,CAAC,UAAW,gBAClBgL,SAAQ,SAAC/I,EAAaH,GACtCkD,EAAahD,KACX0B,GAAiB,CACfzB,cACA5F,OAAQ,CAACA,EAAOyF,EAAI,GAAI,GACxBxC,QACAU,iBAKCgF,EAIF,SAASiG,GAAT,GAAoD,IAA5B5O,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACxCgF,EAAe,GAGnBA,EAAahD,KAAb,MAAAgD,EAAY,IACPrD,GAAoB,CACrBC,KAAM,EACN9B,QAAS,OACTzD,SACAiD,QACAU,eAKJ,IAAK,IAAI8B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIC,EAASlC,GAAqB,CAChCP,QACAC,WAAYlD,EAAOyF,EAAI,GACvBhC,QAAS,OACTC,WAAY,UACZC,aAEFgF,EAAahD,KAAK,CAChBC,YAAY,iBAAkBH,EAC9BC,OAAQ,CAACA,KAcb,OATAiD,EAAahD,KAAb,MAAAgD,EAAY,IACPvC,GAAoB,CACrB3C,QAAS,OACTzD,OAAQA,EAAOuG,MAAM,GAAI,IACzBtD,QACAU,eAIGgF,EAGF,SAASkG,GAAT,GAAmD,IAA5B5L,EAA2B,EAA3BA,MAC5B,OAAO+D,GAAa,CAClBvD,QAAS,OACTzD,OAHqD,EAApBA,OAIjCiD,QACAU,SALqD,EAAZA,WAStC,SAASmL,GAAT,GAAmD,IAA5B7L,EAA2B,EAA3BA,MAC5B,OAAOkE,GAAa,CAClB1D,QAAS,OACTzD,OAHqD,EAApBA,OAIjCiD,QACAU,SALqD,EAAZA,WAUtC,SAASoL,GAAT,GACL,OAxpEF,YAMI,IAAD,IALDzI,kBAKC,MALY,GAKZ,MAJD7C,eAIC,MAJS,WAIT,EAHDzD,EAGC,EAHDA,OACAiD,EAEC,EAFDA,MACAU,EACC,EADDA,SAEI6B,EAAe,GA6BnB,OA3BAA,EAAaG,KAAb,MAAAH,EAAY,IACPK,GAAkB,CACnBN,KAAMe,EACN7C,UACAzD,OAAQA,EAAOuG,MAAM,EAAGD,EAAWI,QACnCzD,QACAU,eAIJ6B,EAAaG,KAAb,MAAAH,EAAY,IACPW,GAAmB,CACpBnG,OAAQA,EAAOuG,MAAMD,EAAWI,OAAQJ,EAAWI,OAAS,GAC5DzD,QACAU,eAIJ6B,EAAaG,KAAb,MAAAH,EAAY,IACPY,GAAoB,CACrB3C,UACAzD,OAAQA,EAAOuG,MAAMD,EAAWI,OAAS,EAAI,GAC7CzD,QACAU,eAIG6B,EAonEAwJ,CAAiB,CACtB1I,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GACzBtG,OAHoD,EAA3BA,OAIzBiD,MAJoD,EAAnBA,MAKjCU,SALoD,EAAZA,WASrC,SAASsL,GAAT,GAAiD,IAA5BjP,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SAEzC,MADmB,CAAC,WAAY,UAAW,oBACvBrF,KAAI,SAACsH,EAAaH,GACpC,OAAOsB,GAAU,CACfnB,cACAnC,QAAS,OACTP,WAAYlD,EAAOyF,GACnBxC,QACAU,gBAKC,SAASuL,GAAT,GAAiD,IAA5BlP,EAA2B,EAA3BA,OAAQiD,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACrCqE,EAAY,GAChBA,EAAUrC,KAAV,MAAAqC,EAAS,IACJb,GAAa,CACd1D,QAAS,OACTzD,SACAiD,QACAU,eAIJ,IACIwL,EAAuBnP,EAAOuG,MAAM,EAAG,GACvC6I,EAFe,CAAC,wBAAyB,0BAEL9Q,KAAI,SAACsH,EAAaH,GACxD,OAAOyB,GAAU,CACftB,cACAnC,QAAS,WACTP,WAAYiM,EAAqB1J,GACjCxC,QACAU,gBAMJ,OAFAqE,EAAUrC,KAAV,MAAAqC,EAAS,IAASoH,IAEXpH,E,IC3nFYqH,G,WAEnB,cAaI,IAZFpR,EAYC,EAZDA,GACA2D,EAWC,EAXDA,KACA0N,EAUC,EAVDA,aAUC,IATDC,eASC,MATS,GAST,MALDC,oBAKC,MALc,SAACvM,EAAOJ,KAKtB,MADD4M,uBACC,MADiB,SAAC9L,EAAUd,KAC5B,cACDD,KAAK3E,GAAKA,EACV2E,KAAKhB,KAAOA,EACZgB,KAAKC,MAAQyM,EACb1M,KAAK2M,QAAUA,EACf3M,KAAK8M,cAAgBF,EACrB5M,KAAK+M,iBAAmBF,E,wCAG1B,SAAaxM,GAEX,OADAL,KAAK8M,cAAczM,EAAOL,KAAKC,OACxBI,I,6BAGT,SAAgBU,GAEd,OADAf,KAAK+M,iBAAiBhM,EAAUf,KAAKC,OAC9Bc,I,uBAIT,SAAUd,GACR,OAAO,IAAID,KAAKgN,YAAY,CAC1B3R,GAAI2E,KAAK3E,GACT2D,KAAMgB,KAAKhB,KACX0N,aAAczM,EACd0M,QAAS3M,KAAK2M,QACdC,aAAc5M,KAAK8M,cACnBD,gBAAiB7M,KAAK+M,uB,ybCxCPE,G,iCACnB,cAiBI,IAhBF5R,EAgBC,EAhBDA,GACA2D,EAeC,EAfDA,KACA0N,EAcC,EAdDA,aAcC,IAbDC,eAaC,MAbS,GAaT,MATDC,oBASC,MATc,SACbvM,EACAJ,EAFa,GAIV,EADDoG,kBACC,EADkB6G,iBAClB,EADoCC,kBAMxC,MADDN,uBACC,MADiB,SAAC9L,EAAUd,KAC5B,iCACK,CAAE5E,KAAI2D,OAAM0N,eAAcC,UAASC,eAAcC,oB,wCAGzD,SAAaxM,EAAOgG,EAAmB6G,EAAkBC,GAMvD,OALAnN,KAAK8M,cAAczM,EAAOL,KAAKC,MAAO,CACpCoG,oBACA6G,mBACAC,qBAEK9M,M,GA5BkCoM,ICY9B,IAZa,IAAIQ,GAAgB,CAC9C5R,GAAI,eACJ2D,KAAM,UACN0N,cAAc,EAEdG,gBAAiB,SAAC9L,EAAUd,IACZ,IAAVA,IACFc,EAAS8E,SAAW,YCoBX,IA1BS,IAAIoH,GAAgB,CAC1C5R,GAAI,YACJ2D,KAAM,UACN0N,cAAc,EAEdE,aAAc,SAACvM,EAAOJ,EAAR,GAAyC,IAAxBkN,EAAuB,EAAvBA,iBAC7B,IAAc,IAAVlN,EAAgB,CAAC,IAAD,MACdmN,EAAcrO,GAChB,QACAoO,EACAzO,GAAc,SAGhB2B,EAAMa,eAAiBkM,EAAY,IAAZ,SAAkB/M,EAAMa,gBAAxB,EAA0C,GACjEb,EAAMc,gBAAkBiM,EAAY,IAAZ,SAAkB/M,EAAMc,iBAAxB,EAA2C,GACnEd,EAAMe,eAAiBgM,EAAY,IAAZ,SAAkB/M,EAAMe,gBAAxB,EAA0C,KAIrEyL,gBAAiB,SAAC9L,EAAUd,IACZ,IAAVA,IACFc,EAAS8E,SAAW,aCGX,IAxBW,IAAIoH,GAAgB,CAC5C5R,GAAI,cACJ2D,KAAM,UACN0N,cAAc,EAEdE,aAAc,SAACvM,EAAOJ,EAAR,GAAyC,IAAxBkN,EAAuB,EAAvBA,iBAC7B,IAAc,IAAVlN,EAAgB,CAClB,IAAImN,EAAcrO,GAChB,QACAoO,EACAzO,GAAc,WAGhB2B,EAAMI,QAAUJ,EAAMI,QAAUJ,EAAMK,QAAU0M,EAAY,KAIhEP,gBAAiB,SAAC9L,EAAUd,IACZ,IAAVA,IACFc,EAAS8E,SAAW,WCRX,IAZgB,IAAIoH,GAAgB,CACjD5R,GAAI,eACJ2D,KAAM,UACN0N,cAAc,EAEdG,gBAAiB,SAAC9L,EAAUd,IACZ,IAAVA,IACFc,EAAS8E,SAAW,YCiBX,IAvBU,IAAIoH,GAAgB,CAC3C5R,GAAI,uBACJ2D,KAAM,UACN0N,cAAc,EAEdE,aAAc,SAACvM,EAAOJ,EAAR,GAAyC,IAAxBiN,EAAuB,EAAvBA,iBAC7B,IAAc,IAAVjN,EAAgB,CAClB,IAAIoN,EAActO,GAChB,QACAmO,EACAxO,GAAc,UAEhB2B,EAAMI,SAAW4M,EAAY,GAAKhN,EAAMM,SAI5CkM,gBAAiB,SAAC9L,EAAUd,IACZ,IAAVA,IACFc,EAAS8E,SAAW,YCDX,IAjBW,IAAIoH,GAAgB,CAC5C5R,GAAI,aACJ2D,KAAM,UACN0N,cAAc,EAEdE,aAAc,SAACvM,EAAOJ,EAAR,GAAyC,IAAxBkN,EAAuB,EAAvBA,iBAC7B,IAAc,IAAVlN,EAAgB,CAAC,IAAD,EACZmN,EAAcrO,GAClB,QACAoO,EACAzO,GAAc,WAEhB2B,EAAMc,gBAAkBiM,EAAY,IAAZ,SAAkB/M,EAAMc,iBAAxB,EAA2C,Q,obCbpDmM,G,iCACnB,cAcI,IAAD,EAbDjS,EAaC,EAbDA,GACA2D,EAYC,EAZDA,KACA0N,EAWC,EAXDA,aAWC,IAVDC,eAUC,MAVS,GAUT,EATDY,EASC,EATDA,UASC,IALDX,oBAKC,MALc,SAACvM,EAAOJ,KAKtB,MADD4M,uBACC,MADiB,SAAC9L,EAAUd,KAC5B,sBACD,cAAM,CAAE5E,KAAI2D,OAAM0N,eAAcC,UAASC,eAAcC,qBAClDU,UAAYA,EAFhB,E,qCAMH,SAAUtN,GACR,OAAO,IAAID,KAAKgN,YAAY,CAC1B3R,GAAI2E,KAAK3E,GACT2D,KAAMgB,KAAKhB,KACX0N,aAAczM,EACd0M,QAAS3M,KAAK2M,QACdY,UAAWvN,KAAKuN,UAChBX,aAAc5M,KAAK8M,cACnBD,gBAAiB7M,KAAK+M,uB,GA7BmBN,ICehC,IAda,IAAIa,GAAkB,CAChDjS,GAAI,gBACJ2D,KAAM,UACN0N,cAAc,EACda,UAAW,EAEXX,aAAc,SAACvM,EAAOJ,GACpB,IAAc,IAAVA,EAAgB,CAAC,IAAD,EACZ7C,EAASiC,GAA0B,aAAc,GACvDgB,EAAMY,SAAW7D,EAAO,IAAP,SAAaiD,EAAMY,UAAnB,EAA+B,QCKvC,IAdY,IAAIqM,GAAkB,CAC/CjS,GAAI,eACJ2D,KAAM,UACN0N,cAAc,EACda,UAAW,EAEXX,aAAc,SAACvM,EAAOJ,GACpB,IAAc,IAAVA,EAAgB,CAAC,IAAD,EACZ7C,EAASiC,GAA0B,YAAa,GACtDgB,EAAMsB,SAAWvE,EAAO,IAAP,SAAaiD,EAAMsB,UAAnB,EAA+B,QCMvC,IAfgB,IAAI2L,GAAkB,CACnDjS,GAAI,mBACJ2D,KAAM,UACN0N,cAAc,EACda,UAAW,EAEXX,aAAc,SAACvM,EAAOJ,GACpB,IAAc,IAAVA,EAAgB,CAAC,IAAD,IACZ7C,EAASiC,GAA0B,gBAAiB,GAC1DgB,EAAMa,eAAiB9D,EAAO,IAAP,SAAaiD,EAAMa,gBAAnB,EAAqC,GAC5Db,EAAMc,gBAAkB/D,EAAO,IAAP,SAAaiD,EAAMc,iBAAnB,EAAsC,QCIrD,IAda,IAAImM,GAAkB,CAChDjS,GAAI,gBACJ2D,KAAM,UACN0N,cAAc,EACda,UAAW,EAEXX,aAAc,SAACvM,EAAOJ,GACpB,IAAc,IAAVA,EAAgB,CAAC,IAAD,EACZ7C,EAASiC,GAA0B,aAAc,GACvDgB,EAAMmN,iBAAmBpQ,EAAO,IAAP,SAAaiD,EAAMmN,kBAAnB,EAAuC,QCmBvD,IA5BsB,IAAIF,GAAkB,CACzDjS,GAAI,yBACJ2D,KAAM,UACN0N,cAAc,EACda,UAAW,EAEXX,aAAc,SAACvM,EAAOJ,GACpB,IAAc,IAAVA,EAAgB,CAAC,IAAD,EACZ7C,EAASiC,GAA0B,kBAAmB,GAC5DgB,EAAMsB,SAAWvE,EAAO,IAAP,SAAaiD,EAAMsB,UAAnB,EAA+B,OAKf,IAAI2L,GAAkB,CAC3DjS,GAAI,2BACJ2D,KAAM,UACN0N,cAAc,EACda,UAAW,EAEXX,aAAc,SAACvM,EAAOJ,GACpB,IAAc,IAAVA,EAAgB,CAAC,IAAD,EACZ7C,EAASiC,GAA0B,kBAAmB,GAC5DgB,EAAMsB,SAAWvE,EAAO,IAAP,SAAaiD,EAAMsB,UAAnB,EAA+B,QCTvC,IAdiB,IAAI2L,GAAkB,CACpDjS,GAAI,oBACJ2D,KAAM,UACN0N,cAAc,EACda,UAAW,EAEXX,aAAc,SAACvM,EAAOJ,GACpB,IAAc,IAAVA,EAAgB,CAAC,IAAD,EACZ7C,EAASiC,GAA0B,iBAAkB,GAC3DgB,EAAMY,SAAW7D,EAAO,IAAP,SAAaiD,EAAMY,UAAnB,EAA+B,QCKvC,IAda,IAAIqM,GAAkB,CAChDjS,GAAI,gBACJ2D,KAAM,UACN0N,cAAc,EACda,UAAW,EAEXX,aAAc,SAACvM,EAAOJ,GACpB,IAAc,IAAVA,EAAgB,CAAC,IAAD,EACZ7C,EAASiC,GAA0B,aAAc,GACvDgB,EAAMY,SAAW7D,EAAO,IAAP,SAAaiD,EAAMY,UAAnB,EAA+B,QCKvC,IAdgB,IAAIqM,GAAkB,CACnDjS,GAAI,mBACJ2D,KAAM,UACN0N,cAAc,EACda,UAAW,EAEXX,aAAc,SAACvM,EAAOJ,GACpB,IAAc,IAAVA,EAAgB,CAAC,IAAD,EACZ7C,EAASiC,GAA0B,gBAAiB,GAC1DgB,EAAMoN,YAAcrQ,EAAO,IAAP,SAAaiD,EAAMoN,aAAnB,EAAkC,QCI7C,IAbqB,IAAIH,GAAkB,CACxDjS,GAAI,wBACJ2D,KAAM,SACN0N,cAAc,EACdC,QAAS,CAAC,OAAQ,UAAW,QAAS,QACtCY,UAAW,EAEXV,gBAAiB,SAAC9L,EAAUd,GAC1B,IAAM7C,EAASiC,GAA0B,qBAAsB,GAC/D0B,EAASwB,kBAAkBmL,IAAIzN,EAAO7C,EAAO,QCT3CuQ,GAAiB,GAGhB,SAASC,GAAW5O,EAAM3D,GAAK,IAAD,IACnC,OAAQ2D,GACN,IAAK,YACH,gBAAO6O,EAAiBxS,IAAxB,EAA+BsS,GACjC,IAAK,cACH,gBAAOG,EAAmBzS,IAA1B,EAAiCsS,GACnC,QACE,OAAOA,I,mOCDQI,G,WACnB,WAAY1S,GAAK,YACf2E,KAAK3E,GAAKA,EAEV,IAAM2S,EAAO7P,GAAQ9C,GACrB2E,KAAKiO,KAAOD,EAAKC,KACjBjO,KAAKkO,UAAYF,EAAKE,UACtBlO,KAAKmO,iBAAmBH,EAAK9R,WAC7B8D,KAAKpE,iBtByHF,SAAwCP,GAC7C,OAAOgD,GAAsBhD,EAAIC,GsB1HP+C,CAAsBhD,GAE9C2E,KAAK/C,QAAUyB,GAAcrD,G,4CAI/B,SAAiBY,EAAOmS,GAGpB,IAAIC,EAFN,GAAInO,MAAMjE,IAAUA,EAAQ,GAAKA,EAAQ,GAiBvC,OAZEoS,OAFuBnP,IAArBc,KAAKqO,YAEOC,OAAOC,KAAKvO,KAAKqO,aAAanT,QAAO,SAACsT,EAAKC,GAEvD,OADAD,EAAIC,GAAQ,KACLD,IACN,IAEW,GAGhBxO,KAAKqO,YAAcA,EACnBrO,KAAK/D,MAAQA,EACb+D,KAAKoO,YAAcA,EAEZC,EAGJ,GAAIpS,IAAU+D,KAAK/D,OAASmS,IAAgBpO,KAAKoO,YAEpD,OAAOpO,KAAKqO,YAGZ,IAAIA,E,mWAAW,IAAQrO,KAAKkO,WAExBQ,EtB2FH,SAAiCzS,GACtC,OAAOqC,GAAerC,EAAOF,GsB5FJuC,CAAerC,GAGpCqS,OAAOK,QAAQ3O,KAAKmO,kBAAkBpC,SAAQ,YAAoB,IAAD,WAAjB0C,EAAiB,KAAXG,EAAW,KAC3DtO,EAAaoO,EAAeE,GAChCP,EAAYI,IAASnO,KAoBvB,IAAI1E,EAAmB6C,GAfnBxC,EAAQ,IAAgB,IAATA,GAAemS,EACf,EACRnS,EAAQ,IAAgB,IAATA,GAAemS,EACtB,EACRnS,EAAQ,IAAgB,IAATA,GAAemS,EACtB,EACRnS,EAAQ,IAAgB,IAATA,GAAemS,EACtB,EACRnS,EAAQ,IAAgB,IAATA,GAAemS,EACtB,EACRnS,EAAQ,IAAgB,IAATA,GAAemS,EACtB,EAEA,EAIjBpO,KAAKpE,kBAiBP,YAdyBsD,IAArBtD,GACF0S,OAAOK,QAAQ/S,GAAkBmQ,SAAQ,YAAoB,IAAD,WAAjB0C,EAAiB,KAAXI,EAAW,KACtDJ,KAAQJ,EACVA,EAAYI,IAASI,EAErBR,EAAYI,GAAQI,KAK1B7O,KAAKqO,YAAcA,EACnBrO,KAAK/D,MAAQA,EACb+D,KAAKoO,YAAcA,EAEZC,I,+BAKX,YAAgE,IAA5CrP,EAA2C,EAA3CA,KAAM8P,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,WAAYhO,EAAY,EAAZA,SAC3C3D,EAAS2B,GACbC,EAAKgQ,cACLF,EACA9O,KAAK/C,SAGHgS,EAAWhS,EAAQ+C,KAAK3E,GAAK2D,GAWjC,YAViBE,IAAb+P,IACFA,EAAWhS,IAGAgS,EAAS,CACpB7R,SACAiD,MAAO0O,EACPhO,e,wBAMJ,WACE,OAAO6M,GAAW,YAAa5N,KAAK3E,Q,wOCtHnB6T,G,WACnB,WAAY7T,GAAK,YACf2E,KAAK3E,GAAKA,EAEV,IAAM2S,EAAO7P,GAAQ9C,GACrB2E,KAAKiO,KAAOD,EAAKC,KACjBjO,KAAKhB,KAAOgP,EAAKhP,KACjBgB,KAAKmP,KAAOnB,EAAKmB,KACjBnP,KAAKkO,UAAYF,EAAKE,UACtBlO,KAAKmO,iBAAmBH,EAAK9R,WAC7B8D,KAAKpE,iBvBwIF,SAAqCP,GAC1C,OAAOgD,GAAsBhD,EAAImB,GuBzIP6B,CAAsBhD,G,sCAIhD,SAAW+T,EAAahB,GAQpB,IAAIiB,EAPN,GACEnP,MAAMkP,IACNA,EAAc,GACbpP,KAAKmP,MAAQ,GAAKC,EAAc,IACjCA,EAAc,GAkBd,OAZEC,OAFiBnQ,IAAfc,KAAKK,MAEOiO,OAAOC,KAAKvO,KAAKK,OAAOnF,QAAO,SAACsT,EAAKC,GAEjD,OADAD,EAAIC,GAAQ,KACLD,IACN,IAEW,GAGhBxO,KAAKK,MAAQgP,EACbrP,KAAKoP,YAAcA,EACnBpP,KAAKoO,YAAcA,EAEZiB,EAGJ,GACHD,IAAgBpP,KAAKoP,aACrBhB,IAAgBpO,KAAKoO,YAGrB,OAAOpO,KAAKK,MAGZ,IAAIgP,E,mWAAW,IAAQrP,KAAKkO,WAExBoB,EvBqGDhR,GuBrGmC8Q,EvBqGbxS,IuBlGzB0R,OAAOK,QAAQ3O,KAAKmO,kBAAkBpC,SAAQ,YAAoB,IAAD,WAAjB0C,EAAiB,KAAXG,EAAW,KAC3DtO,EAAagP,EAAiBV,GAClCS,EAAYZ,IAASnO,KA2BvB,IAAI1E,EAAmB6C,GApBrBuB,KAAKmP,KAAO,IACXC,EAAc,IAAsB,IAAfA,GAAqBhB,GAE1B,EAEjBpO,KAAKmP,KAAO,IACXC,EAAc,IAAsB,IAAfA,GAAqBhB,GAE1B,EACRgB,EAAc,IAAsB,IAAfA,GAAqBhB,EAClC,EACRgB,EAAc,IAAsB,IAAfA,GAAqBhB,EAClC,EACRgB,EAAc,IAAsB,IAAfA,GAAqBhB,EAClC,EACRgB,EAAc,IAAsB,IAAfA,GAAqBhB,EAClC,EAEA,EAIjBpO,KAAKpE,kBAiBP,YAdyBsD,IAArBtD,GACF0S,OAAOK,QAAQ/S,GAAkBmQ,SAAQ,YAAoB,IAAD,WAAjB0C,EAAiB,KAAXI,EAAW,KACtDJ,KAAQY,EACVA,EAAYZ,IAASI,EAErBQ,EAAYZ,GAAQI,KAK1B7O,KAAKK,MAAQgP,EACbrP,KAAKoP,YAAcA,EACnBpP,KAAKoO,YAAcA,EAEZiB,M,0kBCzGN,SAASE,GAAoBtP,EAAOuP,GACzC,OAAa,MAATvP,EACEuP,GACc,IAARvP,GAAawP,QAAQ,GAAK,IAE3B5N,KAAK6N,MAAMzP,GAGb,IAKJ,SAAS0P,GAAsBC,GACpC,IAAIC,EAAM,GAEV,OAAsB,IAAlBD,EAAO9L,OACF+L,EAGL3P,MAAM0P,EAAO,IACR,KAEPC,GAAOhO,KAAK6N,MAAME,EAAO,IAGvBA,EAAO9L,QAAU,GAAK8L,EAAOE,OAAM,SAAC7P,GAAD,OAAWA,IAAU2P,EAAO,MAEjEC,GAAO,MAAQD,EAAO9L,OAGtB8L,EAAOjM,MAAM,GAAGoI,SAAQ,SAAC9L,GACvB,GAAIC,MAAMD,GACR,MAAO,IAEP4P,GAAO,MAAQhO,KAAK6N,MAAMzP,MAKzB4P,GAIF,SAASE,GAAc1U,GAC5B,OAAO2U,EAAc3U,GAKhB,SAAS4U,GAAiBhQ,EAAOuP,GACtC,OAAIA,EACKvP,EAAQ,IAERA,EAIJ,SAASiQ,GAAqBC,GACnC,OAAOC,EAAkBD,GA6CpB,SAASE,GACdC,EACAlB,EACAmB,EACAC,EACAzO,EACA0O,EACAC,EACAC,EACA9C,EACAxH,EACA6G,EACAC,GAEA,IAAIe,EAtDN,SACEoC,EACAlB,EACAmB,EACAC,EACAzO,EACA0O,GAEA,IAAIpB,EAOAuB,EALFvB,OADanQ,IAAXoR,EACYA,EAAOO,WAAWzB,EAAamB,GAE/B,GAKdK,OADgB1R,IAAdsR,EACeA,EAAUM,iBACzB/O,EACA0O,GAGe,GAInB,IAAIvC,EAAS,MAAQmB,GASrB,OARAf,OAAOK,QAAQiC,GAAgBlV,KAAI,YAAoB,IAAD,WAAjB+S,EAAiB,KAAXxO,EAAW,UAC5Bf,IAApBgP,EAAUO,GACZP,EAAUO,GAAQxO,EAElBiO,EAAUO,IAASxO,KAIhBiO,EAmBS6C,CACdT,EACAlB,EACAmB,EACAC,EACAzO,EACA0O,GAEEO,EAAa,MAAQ9C,QAGEhP,IAAvBwR,GACFpC,OAAOK,QAAQ+B,GAAoB3E,SAAQ,YAAoB,IAAD,WAAjB0C,EAAiB,KAAXxO,EAAW,UAChCf,IAAxB8R,EAAcvC,GAChBuC,EAAcvC,GAAQxO,EAEtB+Q,EAAcvC,IAASxO,KAM7B,IAAIgR,EAAgB,GACpBN,EAAU5E,SAAQ,SAACmF,GACjB5C,OAAOK,QAAQuC,EAASC,YAAYpF,SAAQ,YAAoB,IAAD,WAAjB0C,EAAiB,KAAXxO,EAAW,UACjCf,IAAxB+R,EAAcxC,GAChBwC,EAAcxC,GAAQxO,EAEtBgR,EAAcxC,IAASxO,QAM7BqO,OAAOK,QAAQsC,GAAelF,SAAQ,YAAoB,IAAD,WAAjB0C,EAAiB,KAAXxO,EAAW,UAC3Bf,IAAxB8R,EAAcvC,GAChBuC,EAAcvC,GAAQxO,EAEtB+Q,EAAcvC,IAASxO,KAK3B,IAAI8O,EAAa,GAqGjB,OAnGAA,EAAWpG,QAAUqI,EAAcrI,QAAUqI,EAAcrI,QAAU,EAErEoG,EAAWtO,SACRuQ,EAAcrI,QAAUqI,EAAcrI,QAAU,IAC9C,GAAKqI,EAActI,SAAWsI,EAActI,SAAW,KACzDsI,EAAcvQ,QAAUuQ,EAAcvQ,QAAU,GACnDsO,EAAWrO,SACRsQ,EAAcI,QAAUJ,EAAcI,QAAU,IAC9C,GAAKJ,EAAcK,SAAWL,EAAcK,SAAW,KACzDL,EAActQ,QAAUsQ,EAActQ,QAAU,GACnDqO,EAAWpO,QACRqQ,EAAcM,OAASN,EAAcM,OAAS,IAC5C,GAAKN,EAAcO,QAAUP,EAAcO,QAAU,KACvDP,EAAcrQ,OAASqQ,EAAcrQ,OAAS,GACjDoO,EAAWpN,SAAWqP,EAAcrP,SAAWqP,EAAcrP,SAAW,EACxEoN,EAAWrN,QAAUsP,EAActP,QAAUsP,EAActP,QAAU,EACrEqN,EAAWvB,iBAAmBwD,EAAcxD,iBACxCwD,EAAcxD,iBACd,EACJuB,EAAWyC,eACT,GAAKR,EAAcQ,eAAiBR,EAAcQ,eAAiB,GAErER,EAAcS,gBACT1C,EAAW0C,cAAgBT,EAAcS,eAE9CT,EAAcU,eACT3C,EAAW2C,aAAeV,EAAcU,cAE7CV,EAAcW,kBACT5C,EAAW4C,gBAAkBX,EAAcW,iBAEhDX,EAAcY,cACT7C,EAAW6C,YAAcZ,EAAcY,aAE5CZ,EAAca,gBACT9C,EAAW8C,cAAgBb,EAAca,eAE9Cb,EAAcc,eACT/C,EAAW+C,aAAed,EAAcc,cAE7Cd,EAAce,mBACThD,EAAWgD,iBAAmBf,EAAce,kBAGjDf,EAAcgB,WACTjD,EAAWiD,SAAWhB,EAAcgB,UAEzChB,EAAciB,UAAWlD,EAAWkD,QAAUjB,EAAciB,SAC5DjB,EAAckB,aACTnD,EAAWmD,WAAalB,EAAckB,YAE3ClB,EAAcmB,SAAUpD,EAAWoD,OAASnB,EAAcmB,QAC1DnB,EAAcoB,WACTrD,EAAWqD,SAAWpB,EAAcoB,UAEzCpB,EAAcqB,UAAWtD,EAAWsD,QAAUrB,EAAcqB,SAC5DrB,EAAcsB,cACTvD,EAAWuD,YAActB,EAAcsB,aAG5CtB,EAAcuB,eACTxD,EAAWwD,aAAevB,EAAcuB,cAG7CvB,EAAcjM,iBACTgK,EAAWhK,eAAiBiM,EAAcjM,gBAE/CiM,EAAc/P,WACT8N,EAAW9N,SAAW+P,EAAc/P,UAEzC+P,EAAc9P,iBACT6N,EAAW7N,eAAiB8P,EAAc9P,gBAE/C8P,EAAc7P,kBACT4N,EAAW5N,gBAAkB6P,EAAc7P,iBAEhD6P,EAAc5P,iBACT2N,EAAW3N,eAAiB4P,EAAc5P,gBAE/C4P,EAAc3P,gBACT0N,EAAW1N,cAAgB2P,EAAc3P,eAE9C2P,EAAc1P,gBACTyN,EAAWzN,cAAgB0P,EAAc1P,eAE9C0P,EAAcpP,kBACTmN,EAAWnN,gBAAkBoP,EAAcpP,iBAIhDiM,EAAiB9B,SAAQ,SAACyG,GACxBA,EAAO5F,aACLmC,EACA1I,EACA6G,EACAC,MAIG4B,EAGF,SAAS0D,GAAW5C,GACzB,OAAOA,EAAI,GAAG6C,cAAcvL,OAAO0I,EAAIlM,MAAM,I,IC3Q1BgP,G,WA8BnB,WAAY3T,GAAO,iBA7BnB4T,SAAW,CACTnE,KAAM,EACNoE,SAAU/T,IACVmB,MAAOnB,KA0BS,KAvBlBgU,SAAW,CACT,CACErE,KAAM,EACNoE,SAAU/T,IACVmB,MAAOnB,KAET,CACE2P,KAAM,EACNoE,SAAU/T,IACVmB,MAAOnB,KAET,CACE2P,KAAM,EACNoE,SAAU/T,IACVmB,MAAOnB,KAET,CACE2P,KAAM,EACNoE,SAAU/T,IACVmB,MAAOnB,MAKTkB,KAAKhB,KAAOA,E,mCAId,SAAQ+T,EAAStE,EAAMxO,GAA8B,IAAvBuP,EAAsB,6DACtCtQ,GAARuP,QAA8BvP,GAATe,GACvB8S,EAAQF,SAAW5S,EACnB8S,EAAQ9S,MAAQ+S,GAA2B/S,EAAOuP,SACjCtQ,GAARuP,QAA8BvP,GAATe,GAC9B8S,EAAQtE,KAAOA,EACfsE,EAAQ9S,MAAQ+S,GACdD,EAAQF,SACRrD,SAEetQ,GAARuP,QAA8BvP,GAATe,IAC9B8S,EAAQtE,KAAOA,EACfsE,EAAQF,SAAW5S,EACnB8S,EAAQ9S,MAAQ+S,GAA2B/S,EAAOuP,M,sBAgBtD,WACE,IAAInP,EAAQ,GAoBZ,OAlB0B,GAAtBL,KAAK4S,SAASnE,OACXvO,MAAMF,KAAK4S,SAAS3S,OAGvBI,EAAML,KAAK4S,SAASnE,MAAQ,KAF5BpO,EAAML,KAAK4S,SAASnE,MAAQzO,KAAK4S,SAAS3S,OAM9CD,KAAK8S,SAAS/G,SAAQ,SAACkH,GACD,GAAhBA,EAAQxE,OACLvO,MAAM+S,EAAQhT,OAGjBI,EAAM4S,EAAQxE,MAAQ,KAFtBpO,EAAM4S,EAAQxE,MAAQwE,EAAQhT,UAO7BI,M,KAIE6S,GAAgB,CAC3BC,OAAQ,CAAC,UAETC,QAAS,CAAC,WAEVC,MAAO,CACL,UACA,WACA,WACA,mBACA,kBAGFC,OAAQ,CACN,UACA,WACA,WACA,mBACA,gBACA,eACA,kBACA,cACA,gBACA,eACA,oBAGFC,QAAS,CACP,UACA,WACA,WACA,mBACA,WACA,UACA,iBAISC,GAAe,CAC1B,SACA,UACA,UACA,UACA,WACA,WACA,mBACA,iBACA,WACA,WC1IK,SAASC,KACd,MAAO,GAGF,SAASC,GAAqBtW,GACnC,MAAO,CACL,CACEqR,KAAM,kBACNxO,MAAO7C,EAAO,KAKb,SAASuW,KAEd,MAdO,GAiBF,SAASC,KAGd,MApBO,GAuBF,SAASC,GAAsBzW,GAEpC,MADiB,CAAC,QAAS,OAAQ,UAAW,MAAO,QAAS,QAC9C1B,KAAI,SAACmF,GACnB,MAAO,CACL4N,KAAS5N,EAAL,MACJZ,MAAO7C,EAAO,OAKb,SAAS0W,KAGd,MApCO,GAuCF,SAASC,KAEd,MAzCO,GA4CF,SAASC,GAAuB5W,GACrC,MAAO,CACL,CACEqR,KAAM,iBACNxO,MAAO7C,EAAO,IAEhB,CACEqR,KAAM,kBACNxO,MAAO7C,EAAO,KAKb,SAAS6W,KAEd,MA3DO,GA8DF,SAASC,KAEd,MAhEO,GAmEF,SAASC,GAAoB/W,GAClC,MAAO,CACL,CACEqR,KAAM,gBACNxO,MAAO7C,EAAO,KAKb,SAASgX,KAEd,MA9EO,GAiFF,SAASC,KAEd,MAnFO,GAsFF,SAASC,KAEd,MAxFO,GA2FF,SAASC,KAEd,MA7FO,GAgGF,SAASC,KAEd,MAlGO,GAqGF,SAASC,KAEd,MAvGO,GA0GF,SAASC,KAEd,MA5GO,GA+GF,SAASC,KAEd,MAjHO,GAoHF,SAASC,KAEd,MAtHO,GAyHF,SAASC,KAEd,MA3HO,GA8HF,SAASC,GAAoB1X,GAGlC,MAAO,CACL,CACEqR,KAAM,iBACNxO,MAAO7C,EAAO,KAKb,SAAS2X,KAKd,MA9IO,G,ICEYC,G,WACnB,WAAY3Z,GAAK,YACf2E,KAAK3E,GAAKA,EAEV,IAAM2S,EAAO7O,GAAmB9D,GAChC2E,KAAKiO,KAAOD,EAAKC,KACjBjO,KAAKiV,gBAAkBjH,EAAKiH,gBAE5BjV,KAAKkV,WAAa9V,GAAwB/D,G,2CAG5C,SAAgBiE,GAAS,IAAD,OACtB,OAAOU,KAAKiV,gBACTE,QAAO,SAAC5H,GAAD,OAAejO,GAAUiO,KAChC7R,KAAI,SAAC6R,GAAD,OAAe,EAAK2H,WAAW3H,Q,wBAGxC,SAAWjO,EAAQ8V,GACjB,IAAI/U,EAAQ,GAuCZ,OArCiBL,KAAKqV,gBAAgB/V,GAC3ByM,SAAQ,SAACuJ,GAElBA,EAASC,QAAQxJ,SAAQ,SAACyJ,QACMtW,IAA1BmB,EAAMmV,EAAU/G,MAClBpO,EAAMmV,EAAU/G,OAAS+G,EAAUvV,MAEnCI,EAAMmV,EAAU/G,MAAQ+G,EAAUvV,SAKtC,IAAIwV,EAAaH,EAAS/V,WAC1B,GAAwB,KAApBkW,EAAWzW,KAAa,CAC1B,IAAI0W,EAAUC,EAAaF,EAAWzW,WACtBE,IAAZwW,IACFA,EAAUC,IAKMD,EAFLD,EAAWrY,QAIZ2O,SAAQ,SAACyJ,QACWtW,IAA1BmB,EAAMmV,EAAU/G,MAClBpO,EAAMmV,EAAU/G,OAAS+G,EAAUvV,MAEnCI,EAAMmV,EAAU/G,MAAQ+G,EAAUvV,aAM1CmV,EAAQrJ,SAAQ,SAACyG,GACfA,EAAO5F,aAAavM,MAGfA,I,wBAGT,SAAWf,GAET,OADgBsO,GAAW,cAAe5N,KAAK3E,IAChC8Z,QAAO,gBAAG5H,EAAH,EAAGA,UAAH,OAAmBjO,GAAUiO,S,KChElCqI,GACnB,cAcI,IAAD,OAbD7T,EAaC,EAbDA,eAaC,IAZDC,kBAYC,MAZY,EAYZ,MAXDC,yBAWC,MAXmB,EAWnB,MAVDK,gBAUC,MAVU,IAAI9C,GAAW,IAUzB,MATD+C,yBASC,MATmB,IAAI/C,GAAW,IASlC,MARDqW,iBAQC,MARW,GAQX,MAPDpU,gBAOC,MAPU,OAOV,MANDjB,eAMC,MANS,EAMT,MALDsV,gBAKC,MALU,OAKV,EAJDzP,EAIC,EAJDA,kBACA6G,EAGC,EAHDA,iBACAC,EAEC,EAFDA,iBAEC,IADDiI,eACC,MADS,GACT,cACDpV,KAAK+B,eAAiBA,EACtB/B,KAAKgC,WAAaA,EAClBhC,KAAKiC,kBAAoBA,EACzBjC,KAAKsC,SAAWA,EAChBtC,KAAKuC,kBAAoBA,EACzBvC,KAAK6V,UAAYA,EACjB7V,KAAKyB,SAAWA,EAChBzB,KAAKQ,QAAUA,EACfR,KAAK8V,SAAWA,EAChB9V,KAAKqG,kBAAoBA,EACzBrG,KAAKkN,iBAAmBA,EACxBlN,KAAKmN,iBAAmBA,EAExBiI,EAAQrJ,SAAQ,SAACyG,GACfA,EAAO3F,gBAAgB,OC9BdkJ,G,KAAAA,EAAWC,OAAO,CAC/BC,UAAW,CACTC,QAAS,OACTC,cAAe,MACfC,WAAY,UAEZC,SAAU,GAEVC,OAAQ,OAERC,gBAAiB,QAGnBC,YAAa,CACXN,QAAS,OACTC,cAAe,SAEfM,QAAS,KAETC,iBAAkB,EAElBH,gBAAiB,QAGnBI,SAAU,CACRT,QAAS,OACTC,cAAe,MACfC,WAAY,SAEZQ,eAAgB,UAGlBC,WAAY,CACVC,MAAO,OAGTC,UAAW,CACTD,MAAO,OAGTE,qBAAsB,CACpBV,OAAQ,UAERW,UAAW,EACXC,aAAc,EACdC,WAAY,EACZC,YAAa,EAEbC,aAAc,EACdC,YAAa,OAEbf,gBAAiB,QAGnBgB,2BAA4B,CAC1BC,iBAAkB,OAClBV,MAAO,OAGTW,gBAAiB,CACfpB,SAAU,MACVqB,WAAY,IACZC,MAAO,QAGTC,0BAA2B,CACzBrB,gBAAiB,QAGnBsB,wBAAyB,CACvBF,MAAO,QAGTG,aAAc,CACZ5B,QAAS,OACTC,cAAe,SAEfO,iBAAkB,EAElBH,gBAAiB,QAGnBwB,oBAAqB,CACnB7B,QAAS,OACTC,cAAe,SAEfM,QAAS,SAGXuB,YAAa,CACX9B,QAAS,OACTC,cAAe,SAEfM,QAAS,QACTwB,kBAAmB,GAGrBC,sBAAuB,CACrBhC,QAAS,OACTC,cAAe,SACfgC,WAAY,QACZC,cAAe,SAGjBC,cAAe,CACbnC,QAAS,OACTC,cAAe,SAEfgC,WAAY,QACZC,cAAe,QAEfE,YAAa,SACbL,kBAAmB,GAGrBM,eAAgB,CACd3B,eAAgB,UAGlB4B,UAAW,CACTnC,SAAU,QACVqB,WAAY,MAEZd,eAAgB,UAGlB6B,aAAc,CACZpC,SAAU,QACVqB,WAAY,MAEZd,eAAgB,UAGlB8B,iBAAkB,CAChB9B,eAAgB,UAGlB+B,WAAY,CACV/B,eAAgB,UAGlBgC,aAAc,CACZC,SAAU,EAEVtC,gBAAiB,U,obCjIAuC,G,iCAcnB,aAAe,IAAD,sBACZ,gBAbFC,SAAW,CAAC,QAAS,OAAQ,UAAW,MAAO,QAAS,OAAQ,YAYlD,EAuDdC,kBAAoB,WAClB,OACE,kBAACC,EAAA,EAAD,KACG,EAAKC,sBAEN,kBAACD,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,gBACA,kBAACC,EAAA,EAAD,CACEH,MAAOC,GAAOvC,WACd0C,aAAc,EAAKC,MAAMzX,eACzB0X,aAAc,SAACC,GACb,EAAKC,SACH,CAAE5X,eAAgB6X,SAASF,IAC3B,EAAKG,uBAMb,kBAACZ,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,mBACA,kBAACS,EAAA,EAAD,CACEC,cAAe,SAAC9Z,GAAD,OACb,EAAK0Z,SACH,CAAEK,oBAAqB/Z,GACvB,EAAK4Z,oBAGT5Z,MAAO,EAAKuZ,MAAMQ,uBAItB,kBAACX,EAAA,EAAD,UAEC,EAAKY,mBAEN,kBAAChB,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,gBACA,kBAACC,EAAA,EAAD,CACEH,MAAOC,GAAOvC,WACd0C,aAAc,EAAKC,MAAMpK,YACzBqK,aAAc,SAACC,GACb,EAAKC,SACH,CAAEvK,YAAawK,SAASF,IACxB,EAAKQ,oBAMb,kBAACjB,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,mBACA,kBAACS,EAAA,EAAD,CACEC,cAAe,SAAC9Z,GAAD,OACb,EAAK0Z,SAAS,CAAEQ,iBAAkBla,GAAS,EAAKia,iBAElDja,MAAO,EAAKuZ,MAAMW,oBAItB,kBAACd,EAAA,EAAD,UAEA,kBAACA,EAAA,EAAD,sBACC,EAAKe,aAAa1e,KAAI,SAAC2e,EAAGxX,GAAJ,OAAU,EAAKyX,uBAAuBzX,MAE7D,kBAACwW,EAAA,EAAD,UAEA,kBAACJ,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,8BACA,kBAACC,EAAA,EAAD,CACEH,MAAOC,GAAOvC,WACd0C,aAAc,EAAKC,MAAMnT,kBACzBoT,aAAc,SAACC,GACb,EAAKC,SACH,CAAEtT,kBAAmBuT,SAASF,IAC9B,EAAKa,wBAMb,kBAACtB,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,6BACA,kBAACC,EAAA,EAAD,CACEH,MAAOC,GAAOvC,WACd0C,aAAc,EAAKC,MAAMtM,iBACzBuM,aAAc,SAACC,GACb,EAAKC,SACH,CAAEzM,iBAAkB0M,SAASF,IAC7B,EAAKa,wBAMb,kBAACtB,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,6BACA,kBAACC,EAAA,EAAD,CACEH,MAAOC,GAAOvC,WACd0C,aAAc,EAAKC,MAAMrM,iBACzBsM,aAAc,SAACC,GACb,EAAKC,SACH,CAAExM,iBAAkByM,SAASF,IAC7B,EAAKa,wBAMb,kBAAClB,EAAA,EAAD,UAEA,kBAACJ,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,eACA,kBAAC,IAAD,CACEmB,QAAS,CAAC,OAAQ,OAAQ,WAC1BC,eAAgBrB,GAAOpC,qBACvB0D,qBAAsBtB,GAAO7B,2BAC7BoD,UAAWvB,GAAO3B,gBAClBmD,oBAAqBxB,GAAOxB,0BAC5BiD,kBAAmBzB,GAAOvB,wBAC1BiD,cAC8B,SAAxB,EAAKtB,MAAM/X,SACN,EAC0B,YAAxB,EAAK+X,MAAM/X,SACb,EAEA,EAGXsZ,QAAS,SAACD,GACc,IAAlBA,EACF,EAAKnB,SAAS,CAAElY,SAAU,QAAU,EAAKuZ,mBACd,IAAlBF,EACT,EAAKnB,SAAS,CAAElY,SAAU,WAAa,EAAKuZ,mBAE5C,EAAKrB,SAAS,CAAElY,SAAU,QAAU,EAAKuZ,uBAMjD,kBAAC/B,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,sBACA,kBAACC,EAAA,EAAD,CACEH,MAAOC,GAAOvC,WACd0C,aAAc,EAAKC,MAAMxX,WACzByX,aAAc,SAACC,GACb,EAAKC,SACH,CAAE3X,WAAY4X,SAASF,IACvB,EAAKsB,uBAMZ,EAAKjC,SAASrd,KAAI,SAACmF,GAClB,OACE,kBAACoY,EAAA,EAAD,CAAME,MAAOC,GAAOzC,SAAUsE,IAAKpa,GACjC,kBAACwY,EAAA,EAAD,cAAarG,GAAqBnS,GAAlC,UACA,kBAACyY,EAAA,EAAD,CACEH,MAAOC,GAAOvC,WACd0C,aAAc,EAAKC,MAAMlX,SAASzB,GAClC4Y,aAAc,SAACC,GACb,EAAKF,MAAMlX,SAAS4Y,IAAIra,EAASsa,WAAWzB,GAAQ,KACpD,IAAIpX,EAAW,EAAKkX,MAAMlX,SAC1B,EAAKqX,SAAS,CAAErX,YAAY,EAAK0Y,sBAGrC,kBAAC3B,EAAA,EAAD,gBA/NE,EAuOdH,oBAAsB,WACpB,OACE,kBAACD,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,oBACA,kBAAC,IAAD,CACEF,MAAOC,GAAOgC,gBACdC,cAAe,EAAK7B,MAAMhe,YAC1Bue,cAAe,SAAC9Z,EAAOoa,GACR,GAATpa,IACF,EAAKuQ,UAAY,IAAIzC,GAAU9N,GAC/B,EAAK0Z,SACH,CACEne,YAAayE,EACb4N,iBAAkB,EAAK2C,UAAU5C,cAEnC,EAAKiM,sBAKX,kBAAC,IAAOyB,KAAR,CAAaC,MAAM,GAAGtb,MAAO,IAC5B,EAAKub,WAAW9f,KAAI,SAACL,GAAD,OACnB,kBAAC,IAAOigB,KAAR,CACEC,MAAOvN,GAAsB3S,GAAI4S,KACjChO,MAAO5E,EACP4f,IAAK5f,UAhQH,EAwQd4e,iBAAmB,WACjB,OACE,kBAAChB,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,iBACA,kBAAC,IAAD,CACEF,MAAOC,GAAOgC,gBACdC,cAAe,EAAK7B,MAAM/c,SAC1Bsd,cAAe,SAAC9Z,EAAOoa,GACR,GAATpa,IACF,EAAKqQ,OAAS,IAAIpB,GAAOjP,GACzB,EAAK0Z,SAAS,CAAEld,SAAUwD,GAAS,EAAKia,mBAI5C,kBAAC,IAAOoB,KAAR,CAAaC,MAAM,GAAGtb,MAAO,IAC5B,EAAKwb,QAAQ/f,KAAI,SAACL,GAAD,OAChB,kBAAC,IAAOigB,KAAR,CACEC,MAAOvN,GAAmB3S,GAAI4S,KAC9BhO,MAAO5E,EACP4f,IAAK5f,UA3RH,EAmSdif,uBAAyB,SAACzX,GACxB,OACE,kBAACoW,EAAA,EAAD,CAAME,MAAOC,GAAOzC,SAAUsE,IAAKpY,GACjC,kBAAC,IAAD,CACEsW,MAAOC,GAAOgC,gBACdC,cAAe,EAAK7B,MAAL,eAAyB3W,EAAI,GAA7B,MACfkX,cAAe,SAAC9Z,EAAOoa,GACrB,GAAa,GAATpa,EAAY,CAAC,IAAD,EACd,EAAKma,aAAavX,GAAK,IAAImS,GAAY/U,GAGvC,IAAImV,EAAU,EAAKgF,aAAavX,GAAG+K,WACjC,EAAK4L,MAAL,eAAyB3W,EAAI,GAA7B,OAGF,EAAK8W,UAAL,0BAEmB9W,EAAI,GAFvB,KAE+B5C,GAF/B,qBAGmB4C,EAAI,GAHvB,UAGoCuS,GAHpC,GAKE,EAAKsG,wBAKX,kBAAC,IAAOJ,KAAR,CAAaC,MAAM,GAAGtb,MAAO,IAC5B,EAAK0Q,UAAUjV,KAAI,SAACL,GAAD,OAClB,kBAAC,IAAOigB,KAAR,CACEC,MAAOvN,GAAwB3S,GAAI4S,KACnChO,MAAO5E,EACP4f,IAAK5f,QAKX,kBAACge,EAAA,EAAD,YAEA,kBAACC,EAAA,EAAD,CACEH,MAAOC,GAAOvC,WACd0C,aAAc,EAAKC,MAAL,eAAyB3W,EAAI,GAA7B,MACd4W,aAAc,SAACC,GAAU,IAAD,EAUlB,EATEpa,EAASsa,SAASF,GAEpBtE,EAAU,QAC8BlW,IAAxC,EAAKsa,MAAL,eAAyB3W,EAAI,GAA7B,QAEFuS,EAAO,IAAO,EAAKoE,MAAL,eAAyB3W,EAAI,GAA7B,aAEX,EAAK2W,MAAL,eAAyB3W,EAAI,GAA7B,OACDvD,EAAS,EAAKka,MAAL,eAAyB3W,EAAI,GAA7B,OAGT,EAAAuS,GAAQrS,KAAR,YACK,EAAKqX,aAAavX,GAClB+K,WAAWgM,SAASF,IACpBvE,QACC,qBAAG5H,WACY,EAAKiM,MAAL,eAAyB3W,EAAI,GAA7B,OAAuC,QAI5DuS,EAAUA,EAAQD,QAAO,gBAAG5H,EAAH,EAAGA,UAAH,OAAmBjO,EAASiO,MAIzD,EAAKoM,UAAL,0BAEmB9W,EAAI,GAFvB,KAE+B+W,SAASF,IAFxC,qBAGmB7W,EAAI,GAHvB,UAGoCuS,GAHpC,GAKE,EAAKsG,wBAKX,kBAACrC,EAAA,EAAD,aA9WQ,EAmXdsC,qBAAuB,WACrB,IAAIC,EAAQ,4CAA+C,EAAKpL,UAAUvC,KAA9D,OACZ,OACE,kBAAC4N,EAAA,EAAD,CACE1C,MAAOC,GAAOb,eACduD,OAAQ,CAAEC,IAAKH,EAAU9E,MAAO,GAAIR,OAAQ,OAxXpC,EA6Xd0F,cAAgB,WACd,MAAM,GAAN,WACK,EAAKxC,MAAM3L,kBADhB,IAEK,EAAK2L,MAAMyC,qBAFhB,IAGK,EAAKzC,MAAM0C,qBAHhB,IAIK,EAAK1C,MAAM2C,uBAlYJ,EAsYdC,kBAAoB,WAYlB,OAXe,IAAIxG,GAAe,CAChC7T,eAAgB,EAAKyX,MAAMzX,eAC3BN,SAAU,EAAK+X,MAAM/X,SACrBO,WAAY,EAAKwX,MAAMxX,WACvBM,SAAU,EAAKkX,MAAMlX,SACrB+D,kBAAmB,EAAKmT,MAAMnT,kBAC9B6G,iBAAkB,EAAKsM,MAAMtM,iBAC7BC,iBAAkB,EAAKqM,MAAMrM,iBAC7BiI,QAAS,EAAK4G,mBA/YJ,EAqZdnC,kBAAoB,WAClB,QAAuB3a,IAAnB,EAAKsR,UAAyB,CAChC,IAAInQ,EAAQ,EAAKmQ,UAAUM,iBACzB,EAAK0I,MAAMzX,eACX,EAAKyX,MAAMQ,qBAETjL,EAAa,EAAKsN,gBAClBtb,EAAW,EAAKqb,oBAEhBE,EAAqB,EAAK9L,UAAU+L,kBAAkB,CACxDvd,KAAM,SACN8P,YAAa,EAAK0K,MAAMnT,kBACxB0I,aACAhO,aAGEyb,EAAoB,EAAKhM,UAAU+L,kBAAkB,CACvDvd,KAAM,QACN8P,YAAa,EAAK0K,MAAMtM,iBACxB6B,aACAhO,aAGE0b,EAAoB,EAAKjM,UAAU+L,kBAAkB,CACvDvd,KAAM,QACN8P,YAAa,EAAK0K,MAAMrM,iBACxB4B,aACAhO,aAGF,EAAK4Y,SAAS,CACZ/I,eAAgBvQ,EAChB0O,WAAYA,EACZuN,mBAAoBA,EACpBE,kBAAmBA,EACnBC,kBAAmBA,MAxbX,EA6bdvC,eAAiB,WACf,QAAoBhb,IAAhB,EAAKoR,OAAsB,CAC7B,IAOIgM,EAAoBE,EAAmBC,EAPvCpc,EAAQ,EAAKiQ,OAAOO,WACtB,EAAK2I,MAAMpK,YACX,EAAKoK,MAAMkD,kBAET3N,EAAa,EAAKsN,gBAClBtb,EAAW,EAAKqb,yBAGGld,IAAnB,EAAKsR,YACP8L,EAAqB,EAAK9L,UAAU+L,kBAAkB,CACpDvd,KAAM,SACN8P,YAAa,EAAK0K,MAAMnT,kBACxB0I,aACAhO,aAGFyb,EAAoB,EAAKhM,UAAU+L,kBAAkB,CACnDvd,KAAM,QACN8P,YAAa,EAAK0K,MAAMtM,iBACxB6B,aACAhO,aAGF0b,EAAoB,EAAKjM,UAAU+L,kBAAkB,CACnDvd,KAAM,QACN8P,YAAa,EAAK0K,MAAMrM,iBACxB4B,aACAhO,cAIJ,EAAK4Y,SAAS,CACZtK,YAAahP,EACb0O,WAAYA,EACZuN,mBAAoBA,EACpBE,kBAAmBA,EACnBC,kBAAmBA,MAneX,EAwedf,oBAAsB,WACf,EAAKtB,aAAatK,OAAM,SAAC7P,GAAD,OAAqB,IAAVA,OACtC,EAAK0c,iBAAmB,EAAKvC,aAAalf,QAAO,SAACC,EAAK+f,EAAKrY,GAC1D,GAAY,IAARqY,EAAW,CACb,IAAI0B,EAAW1B,EAAIrK,WACjB,EAAK2I,MAAL,eAAyB3W,EAAI,GAA7B,MACA,EAAK2W,MAAL,eAAyB3W,EAAI,GAA7B,YASF,OAPAyL,OAAOK,QAAQiO,GAAU7Q,SAAQ,YAAoB,IAAD,WAAjB0C,EAAiB,KAAXxO,EAAW,UAChCf,IAAd/D,EAAIsT,GACNtT,EAAIsT,IAASxO,EAEb9E,EAAIsT,GAAQxO,KAGT9E,EAEP,OAAOA,IAER,IAEH,EAAKof,uBA7fK,EAigBdA,mBAAqB,SAACvb,GACpB,IAGIsd,EAAoBE,EAAmBC,EAHvC1N,EAAa,EAAKsN,gBAClBtb,EAAW,EAAKqb,yBAGGld,IAAnB,EAAKsR,YACP8L,EAAqB,EAAK9L,UAAU+L,kBAAkB,CACpDvd,KAAM,SACN8P,YAAa,EAAK0K,MAAMnT,kBACxB0I,aACAhO,aAGFyb,EAAoB,EAAKhM,UAAU+L,kBAAkB,CACnDvd,KAAM,QACN8P,YAAa,EAAK0K,MAAMtM,iBACxB6B,aACAhO,aAGF0b,EAAoB,EAAKjM,UAAU+L,kBAAkB,CACnDvd,KAAM,QACN8P,YAAa,EAAK0K,MAAMrM,iBACxB4B,aACAhO,cAIJ,EAAK4Y,SAAS,CACZ5K,WAAYA,EACZuN,mBAAoBA,EACpBE,kBAAmBA,EACnBC,kBAAmBA,KAjiBT,EAqiBdI,eAAiB,SAAC7d,GAChB,QAAuBE,IAAnB,EAAKsR,UAAyB,CAChC,IAAIpL,EAAY,EAAKoL,UAAU+L,kBAAkB,CAC/Cvd,OACA8P,YAAa,EAAK0K,MAAL,SAAoBxa,EAApB,SACb+P,WAAY,EAAKyK,MAAMzK,WACvBhO,SAAU,EAAKqb,sBAGjB,EAAKzC,SAAL,gBAA0B3a,EAA1B,SAAyCoG,MA9iB/B,EAojBd4V,kBAAoB,WAClB,QAAuB9b,IAAnB,EAAKsR,UAAyB,CAChC,IAAI8L,EAAqB,EAAK9L,UAAU+L,kBAAkB,CACxDvd,KAAM,SACN8P,YAAa,EAAK0K,MAAMnT,kBACxB0I,WAAY,EAAKyK,MAAMzK,WACvBhO,SAAU,EAAKqb,sBAGbI,EAAoB,EAAKhM,UAAU+L,kBAAkB,CACvDvd,KAAM,QACN8P,YAAa,EAAK0K,MAAMtM,iBACxB6B,WAAY,EAAKyK,MAAMzK,WACvBhO,SAAU,EAAKqb,sBAGbK,EAAoB,EAAKjM,UAAU+L,kBAAkB,CACvDvd,KAAM,QACN8P,YAAa,EAAK0K,MAAMrM,iBACxB4B,WAAY,EAAKyK,MAAMzK,WACvBhO,SAAU,EAAKqb,sBAGjB,EAAKzC,SAAS,CACZ2C,mBAAoBA,EACpBE,kBAAmBA,EACnBC,kBAAmBA,MA9kBX,EAmlBdJ,cAAgB,WACd,IAAI1L,EAAY,CACd,EAAKmM,eACL,EAAKC,gBACL,EAAKC,cACL,EAAKC,eACL,EAAKC,iBAkBP,OAfYlK,GACV,EAAK1C,OACL,EAAKkJ,MAAMpK,YACX,EAAKoK,MAAMW,iBACX,EAAK3J,UACL,EAAKgJ,MAAMzX,eACX,EAAKyX,MAAMQ,oBACX,EAAK2C,iBACLhM,EACA,EAAK6I,MAAM3L,iBACX,EAAK2L,MAAMnT,kBACX,EAAKmT,MAAMtM,iBACX,EAAKsM,MAAMrM,mBAxmBD,EA8mBdgQ,qBAAuB,WACrB,OAAO,EAAK3M,UACV,kBAACyI,EAAA,EAAD,CAAME,MAAOC,GAAOpB,aAClB,kBAACqB,EAAA,EAAD,CAAMF,MAAOC,GAAOZ,WAApB,aACC,EAAKmD,uBACN,kBAACtC,EAAA,EAAD,CAAMF,MAAOC,GAAOT,YACjB,EAAKnI,UAAY,EAAKA,UAAUvC,KAAO,IAEzC,EAAKuL,MAAM5I,eACRtC,OAAOK,QAAQ,EAAK6K,MAAM5I,gBAAgBlV,KAAI,YAAoB,IAAD,WAAjB+S,EAAiB,KAAXxO,EAAW,KAC/D,OACE,kBAACoZ,EAAA,EAAD,CAAMF,MAAOC,GAAOT,WAAYsC,IAAKxM,GAClCT,EAAiBS,GAAMR,KAD1B,IACiC,IAC9B+E,GACC/S,EACA+N,EAAiBS,GAAMe,kBAK/B,MAEJ,MApoBQ,EAuoBd4N,kBAAoB,WAClB,OAAO,EAAK9M,OACV,kBAAC2I,EAAA,EAAD,CAAME,MAAOC,GAAOpB,aAClB,kBAACqB,EAAA,EAAD,CAAMF,MAAOC,GAAOZ,WAApB,UACA,kBAACa,EAAA,EAAD,CAAMF,MAAOC,GAAOT,YACjB,EAAKrI,OAAS,EAAKA,OAAOrC,KAAO,IAEnC,EAAKuL,MAAMnK,YACRf,OAAOK,QAAQ,EAAK6K,MAAMnK,aAAa3T,KAAI,YAAoB,IAAD,WAAjB+S,EAAiB,KAAXxO,EAAW,KAC5D,OACE,kBAACoZ,EAAA,EAAD,CAAMF,MAAOC,GAAOT,WAAYsC,IAAKxM,GAClCT,EAAiBS,GAAMR,KAD1B,IACiC,IAC9B+E,GACC/S,EACA+N,EAAiBS,GAAMe,kBAK/B,MAEJ,MA5pBQ,EA+pBd6N,uBAAyB,WACvB,IAAIhd,EAAQ,EAAKsc,iBAEjB,OAAOtc,EACL,kBAAC4Y,EAAA,EAAD,CAAME,MAAOC,GAAOpB,aAClB,kBAACqB,EAAA,EAAD,CAAMF,MAAOC,GAAOZ,WAApB,iBACClK,OAAOK,QAAQtO,GAAO3E,KAAI,YAAoB,IAAD,WAAjB+S,EAAiB,KAAXxO,EAAW,KAC5C,OACE,kBAACoZ,EAAA,EAAD,CAAMF,MAAOC,GAAOT,WAAYsC,IAAKxM,GAClCT,EAAiBS,GAAMR,KAD1B,IACiC,IAC9B+E,GACC/S,EACA+N,EAAiBS,GAAMe,mBAM/B,MAjrBQ,EAorBd8N,uBAAyB,SAACte,GACxB,OACE,kBAACia,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC,IAAD,CACE0E,cAAe,EAAK,WAAarc,GAAM4T,SAASnE,KAChDsL,cAAe,SAACtL,EAAM4L,GACpB,GAAY,GAAR5L,EAAW,CACb,IAAImE,EAAW,EAAK,WAAa5T,GAAM4T,SACvC,EAAK,WAAa5T,GAAMue,QACtB3K,EACAnE,OACAvP,EACA8O,EAAiBS,GAAMe,cAGzB,EAAK+K,mBAAmBvb,MAI5B,kBAAC,IAAOsc,KAAR,CAAaC,MAAM,GAAGtb,MAAO,IAC5BiT,GAAclU,GAAMtD,KAAI,SAAC8hB,GAAD,OACvB,kBAAC,IAAOlC,KAAR,CACEC,MAAOvN,EAAiBwP,GAAMvP,KAC9BhO,MAAOud,EACPvC,IAAKuC,QAKX,kBAACnE,EAAA,EAAD,YAEA,kBAACC,EAAA,EAAD,CACEH,MAAOC,GAAOrC,UACd0C,aAAc,SAACC,GACb,IAAI9G,EAAW,EAAK,WAAa5T,GAAM4T,SACnCA,EAASnE,KACX,EAAK,WAAazP,GAAMue,QACtB3K,OACA1T,EACAic,WAAWzB,GACX1L,EAAiB4E,EAASnE,MAAMe,cAIlC,EAAK,WAAaxQ,GAAMue,QACtB3K,OACA1T,EACAic,WAAWzB,IACX,GAKJ,EAAKa,mBAAmBvb,QAzuBpB,EAgvBdye,uBAAyB,SAACze,GACxB,OACE,kBAACia,EAAA,EAAD,KACG,EAAK,WAAaja,GAAM8T,SAASpX,KAAI,SAACuX,EAASyK,GAC9C,OACE,kBAACzE,EAAA,EAAD,CAAME,MAAOC,GAAOzC,SAAUsE,IAAKyC,GACjC,kBAAC,IAAD,CACErC,cAAepI,EAAQxE,KACvBsL,cAAe,SAACtL,EAAM4L,GACR,GAAR5L,IACF,EAAK,WAAazP,GAAMue,QACtBtK,EACAxE,OACAvP,EACA8O,EAAiBS,GAAMe,cAGzB,EAAK+K,mBAAmBvb,MAI5B,kBAAC,IAAOsc,KAAR,CAAaC,MAAM,GAAGtb,MAAO,IAC5BuT,GAAa9X,KAAI,SAAC8hB,GAAD,OAChB,kBAAC,IAAOlC,KAAR,CACEC,MAAOvN,EAAiBwP,GAAMvP,KAC9BhO,MAAOud,EACPvC,IAAKuC,QAKX,kBAACnE,EAAA,EAAD,YAEA,kBAACC,EAAA,EAAD,CACEH,MAAOC,GAAOrC,UACd0C,aAAc,SAACC,GACb,IAAIjL,EAAOwE,EAAQxE,KACfA,EACF,EAAK,WAAazP,GAAMue,QACtBtK,OACA/T,EACAic,WAAWzB,GACX1L,EAAiBS,GAAMe,cAIzB,EAAK,WAAaxQ,GAAMue,QACtBtK,OACA/T,EACAic,WAAWzB,IACX,GAIJ,EAAKa,mBAAmBvb,YAtyB1B,EAgzBd2e,mBAAqB,SAAC3e,GAA0B,IAApB4e,EAAmB,wDAC7C,OACE,kBAAC3E,EAAA,EAAD,CACEE,MAAOyE,EAASxE,GAAOlB,sBAAwBkB,GAAOf,eAEtD,kBAACgB,EAAA,EAAD,CAAMF,MAAOC,GAAOX,cAAezZ,GAEnC,kBAACqa,EAAA,EAAD,CAAMF,MAAOC,GAAOV,kBAApB,aACC,EAAK4E,uBAAuBte,GAE7B,kBAACqa,EAAA,EAAD,CAAMF,MAAOC,GAAOV,kBAApB,YACC,EAAK+E,uBAAuBze,KA3zBrB,EAg0Bd6e,uBAAyB,WACvB,OACE,kBAAC5E,EAAA,EAAD,CAAME,MAAOC,GAAOrB,qBAClB,kBAACsB,EAAA,EAAD,CAAMF,MAAOC,GAAOZ,WAApB,aACC,EAAKmF,mBAAmB,UACxB,EAAKA,mBAAmB,WACxB,EAAKA,mBAAmB,SACxB,EAAKA,mBAAmB,UACxB,EAAKA,mBAAmB,WAAW,KAx0B5B,EA60BdG,iBAAmB,WACjB,OACE,kBAAC7E,EAAA,EAAD,CAAME,MAAOC,GAAOrB,qBAClB,kBAACsB,EAAA,EAAD,CAAMF,MAAOC,GAAOZ,WAApB,cACC,EAAKgB,MAAMzK,WACRT,OAAOK,QAAQ,EAAK6K,MAAMzK,YAAYrT,KAAI,YAAoB,IAAD,WAAjB+S,EAAiB,KAAXxO,EAAW,KAC3D,MAAY,WAARwO,EAEA,kBAAC4K,EAAA,EAAD,CAAMF,MAAOC,GAAOT,WAAYsC,IAAKxM,GAClCT,EAAiBS,GAAMR,KAD1B,IACiC,IAC9B+E,GACC/S,EACA+N,EAAiBS,GAAMe,eAKtB,QAGX,OAj2BI,EAs2BduO,mBAAqB,SAAC/e,GAA0B,IAApB4e,EAAmB,wDAC7C,OACE,kBAAC3E,EAAA,EAAD,CACEE,MAAOyE,EAASxE,GAAOlB,sBAAwBkB,GAAOf,eAEtD,kBAACgB,EAAA,EAAD,CAAMF,MAAOC,GAAOX,cAAezZ,GAClC,EAAKwa,MAAM,SAAWxa,EAAO,UAC1B,EAAKwa,MAAM,SAAWxa,EAAO,UAAUtD,KACrC,WAA0BgiB,GAAW,IAAlC1a,EAAiC,EAAjCA,YAAaF,EAAoB,EAApBA,OACd,OACE,kBAACuW,EAAA,EAAD,CAAMF,MAAOC,GAAOT,WAAYsC,IAAKyC,GAClC1K,GAA+BhQ,GADlC,IACiD,IAC9CgQ,GAAgClQ,OAKzC,OAv3BI,EA43Bdkb,cAAgB,SAAC5I,GAAuD,IAA9C2E,EAA6C,uDAA7B,SAAC2D,GAAD,OAAW,SAACzd,MACpD,OACE,kBAACge,EAAA,EAAD,CACEjQ,KAAMoH,EACN8I,aAAc,SAACC,GAAD,OAAUA,EAAK9iB,IAC7B+iB,WAAY,YAAsB,IAAnBD,EAAkB,EAAlBA,KAAMT,EAAY,EAAZA,MACnB,OAAQS,EAAKnf,MACX,IAAK,UACH,OACE,kBAACia,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,KAAOrG,GAAwBmL,EAAK9iB,IAApC,MACA,kBAACye,EAAA,EAAD,CACEC,cAAeA,EAAc2D,GAC7Bzd,MAAOke,EAAKle,SAKpB,IAAK,SACH,OACE,kBAACgZ,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,KAAOrG,GAAwBmL,EAAK9iB,IAApC,MACA,kBAACie,EAAA,EAAD,CACEH,MAAOC,GAAOvC,WACd4C,aAAcM,EAAc2D,GAC5Bzd,MAAOke,EAAKle,SAKpB,IAAK,SACH,OACE,kBAACgZ,EAAA,EAAD,CAAME,MAAOC,GAAOzC,UAClB,kBAAC0C,EAAA,EAAD,KAAOrG,GAAwBmL,EAAK9iB,IAApC,MACA,kBAAC,IAAD,CACE8d,MAAOC,GAAOgC,gBACdC,cAAe8C,EAAKle,MACpB8Z,cAAeA,EAAc2D,IAE5BS,EAAKxR,QAAQjR,KAAI,SAAC2iB,GAAD,OAChB,kBAAC,IAAO/C,KAAR,CACEC,MAAOvI,GAAqBqL,GAC5Bpe,MAAOoe,EACPpD,IAAKoD,SAOjB,QACE,OAAO,UA/6BL,EAs7BdC,uBAAyB,kBACvB,EAAKN,cAAc,EAAKxE,MAAM3L,kBAAkB,SAAC6P,GAAD,OAAW,SAACzd,GAC1D,IAAImV,EAAO,IAAO,EAAKoE,MAAM3L,kBAC7BuH,EAAQsI,GAAStI,EAAQsI,GAAOa,UAAUte,GAC1C,EAAK0Z,SAAS,CAAE9L,iBAAkBuH,GAAW,EAAKmF,yBA17BxC,EA67BdiE,yBAA2B,SAAC3b,GAAD,OACzB,EAAKmb,cACH,EAAKxE,MAAL,eAAyB3W,EAAI,GAA7B,YACA,SAAC6a,GAAD,OAAW,SAACzd,GACV,IAAImV,EAAO,IAAO,EAAKoE,MAAL,eAAyB3W,EAAI,GAA7B,YAClBuS,EAAQsI,GAAStI,EAAQsI,GAAOa,UAAUte,GAC1C,EAAK0Z,SAAL,sBACmB9W,EAAI,GADvB,UACoCuS,GAClC,EAAKsG,0BAr8BC,EA08Bd+C,sBAAwB,WACtB,OACE,kBAACxF,EAAA,EAAD,CAAME,MAAOC,GAAOrB,qBAClB,kBAACsB,EAAA,EAAD,CAAMF,MAAOC,GAAOZ,WAApB,WAEC,EAAKuF,mBAAmB,UACxB,EAAKA,mBAAmB,SACxB,EAAKA,mBAAmB,SAAS,GACjC,EAAKO,yBACL,EAAKE,yBAAyB,GAC9B,EAAKA,yBAAyB,GAC9B,EAAKA,yBAAyB,KAj9BnC,EAAKhD,iB9BgKqBtc,IAAxBrE,IACFA,EAAsByT,OAAOK,QAAQ3T,GAClC0jB,MAAK,6BAAcC,GAAd,UAAQ1Q,MAAR,WAAqC2Q,GAArC,UAA+B3Q,MAA/B,OACJ0Q,EAAME,cAAcD,MAErBljB,KAAI,2BAAEL,EAAF,iBAAaA,MAGfR,G8BvKL,EAAK4gB,c9B2KkBvc,IAArBpE,IACFA,EAAmBwT,OAAOK,QAAQtS,GAC/BqiB,MAAK,6BAAcC,GAAd,UAAQ1Q,MAAR,WAAqC2Q,GAArC,UAA+B3Q,MAA/B,OACJ0Q,EAAME,cAAcD,MAErBljB,KAAI,2BAAEL,EAAF,iBAAaA,MAGfP,G8BlLL,EAAK6V,gB9BsLuBzR,IAA1BnE,IACFA,EAAwBuT,OAAOK,QAAQnR,IACpCkhB,MAAK,6BAAcC,GAAd,UAAQ1Q,MAAR,WAAqC2Q,GAArC,UAA+B3Q,MAA/B,OACJ0Q,EAAME,cAAcD,MAErBljB,KAAI,2BAAEL,EAAF,iBAAaA,MAGfN,G8B5LL,EAAK+hB,eAAiB,IAAInK,GAAS,UACnC,EAAKoK,gBAAkB,IAAIpK,GAAS,WACpC,EAAKqK,cAAgB,IAAIrK,GAAS,SAClC,EAAKsK,eAAiB,IAAItK,GAAS,UACnC,EAAKuK,gBAAkB,IAAIvK,GAAS,WAEpC,EAAKyH,aAAe,CAAC,EAAG,EAAG,GAE3B,EAAKZ,MAAQ,CACXhe,iBAAa0D,EACb6C,eAAgB,EAChBiY,qBAAqB,EAErBvd,cAAUyC,EACVkQ,YAAa,EACb+K,kBAAkB,EAElB2E,oBAAgB5f,EAChB6f,oBAAgB7f,EAChB8f,oBAAgB9f,EAChB+f,oBAAgB/f,EAChBggB,oBAAgBhgB,EAChBigB,oBAAgBjgB,EAEhBmH,kBAAmB,EACnB6G,iBAAkB,EAClBC,iBAAkB,EAElB1L,SAAU,OACVO,WAAY,EACZM,SAAU,IAAI9C,GAAW,IAEzBoR,oBAAgB1R,EAChBmQ,iBAAanQ,EACb6P,gBAAY7P,EAEZod,wBAAoBpd,EACpBsd,uBAAmBtd,EACnBud,uBAAmBvd,EAEnB2O,iBAAkB,GAClBoO,oBAAqB,GACrBC,oBAAqB,GACrBC,oBAAqB,IAnDX,E,kCA09Bd,WACE,OACE,kBAAClD,EAAA,EAAD,CAAME,MAAOC,GAAOnD,WAClB,kBAACgD,EAAA,EAAD,CAAME,MAAOC,GAAO5C,aAAcxW,KAAKgZ,qBAEvC,kBAACC,EAAA,EAAD,CAAME,MAAOC,GAAOtB,cACjB9X,KAAKmd,uBACLnd,KAAKod,oBACLpd,KAAKqd,yBACLrd,KAAK6d,0BAGR,kBAAC5E,EAAA,EAAD,CAAME,MAAOC,GAAOtB,cAAe9X,KAAK8d,oBAExC,kBAAC7E,EAAA,EAAD,CAAME,MAAOC,GAAOtB,cAAe9X,KAAKye,yBAExC,kBAACxF,EAAA,EAAD,CAAME,MAAOC,GAAOR,oB,GAx/BKwG,c","file":"static/js/app.31933c75.chunk.js","sourcesContent":["import characterDataRaw from '../data/characterdata.json';\nimport characterAscensionBonusDataRaw from '../data/characterascensionbonusdata.json';\nimport characterStatCurveDataRaw from '../data/characterstatcurvedata.json';\nimport weaponDataRaw from '../data/weapondata.json';\nimport weaponAscensionBonusDataRaw from '../data/weaponascensionbonusdata.json';\nimport weaponStatCurveDataRaw from '../data/weaponstatcurvedata.json';\nimport talentDataRaw from '../data/talentdata.json';\nimport artifactSetDataRaw from '../data/artifactsetdata.json';\nimport artifactSetBonusDataRaw from '../data/artifactsetbonusdata.json';\nexport { default as propMapping } from '../data/propmapping.json';\nexport { default as talentDescMapping } from '../data/talentdescmapping.json';\nexport { default as optionMapping } from '../data/optionmapping.json';\n\n// Pre-processed data, coverting from arrays to objects (map-like) for faster lookup\nconst characterData = processCharacterData(characterDataRaw);\nconst characterAscensionBonusData = processCharacterAscensionBonusData(\n  characterAscensionBonusDataRaw\n);\nconst characterStatCurveData = processCharacterStatCurveData(\n  characterStatCurveDataRaw\n);\nconst weaponData = processWeaponData(weaponDataRaw);\nconst weaponAscensionBonusData = processWeaponAscensionBonusData(\n  weaponAscensionBonusDataRaw\n);\nconst weaponStatCurveData = processWeaponStatCurveData(weaponStatCurveDataRaw);\nconst talentData = processTalentData(talentDataRaw);\nconst artifactSetData = processArtifactSetData(artifactSetDataRaw);\nconst artifactSetBonusData = processArtifactSetBonusData(\n  artifactSetBonusDataRaw\n);\n\n// Pre-processed data, lists\nlet sortedCharacterList; // lazy loading implemented with getSortedCharacterList()\nlet sortedWeaponList; // lazy loading implemented with getSortedWeaponList()\nlet sortedArtifactSetList; // lazy loading implemented with getSortedArtifactSetList()\n\n// Functions for pre-processing data\nfunction processCharacterData(rawData) {\n  return rawData.reduce((acc, charData) => {\n    acc[charData.id] = charData;\n    return acc;\n  }, {});\n}\n\nfunction processCharacterAscensionBonusData(rawData) {\n  return rawData.reduce((acc, charData) => {\n    acc[charData.characterId] = charData.ascensionBonusSet.map(\n      (bonusData) => bonusData.ascensionBonuses\n    );\n    return acc;\n  }, {});\n}\n\nfunction processCharacterStatCurveData(rawData) {\n  return rawData.reduce((acc, curveData) => {\n    acc[curveData.level] = curveData.statCurves;\n    return acc;\n  }, {});\n}\n\nfunction processWeaponData(rawData) {\n  return rawData.reduce((acc, weaponData) => {\n    acc[weaponData.id] = weaponData;\n    return acc;\n  }, {});\n}\n\nfunction processWeaponAscensionBonusData(rawData) {\n  return rawData.reduce((acc, weaponData) => {\n    acc[weaponData.weaponId] = weaponData.ascensionBonusSet.map(\n      (bonusData) => bonusData.ascensionBonuses\n    );\n    return acc;\n  }, {});\n}\n\nfunction processWeaponStatCurveData(rawData) {\n  return rawData.reduce((acc, curveData) => {\n    acc[curveData.level] = curveData.statCurves;\n    return acc;\n  }, {});\n}\n\nfunction processTalentData(rawData) {\n  return rawData.reduce((acc, talentDataRaw) => {\n    let talentData = { ...talentDataRaw.talents };\n\n    talentData.attack = talentData.attack.reduce((curveAcc, curveData) => {\n      curveAcc[curveData.level] = curveData.params;\n      return curveAcc;\n    }, {});\n    talentData.skill = talentData.skill.reduce((curveAcc, curveData) => {\n      curveAcc[curveData.level] = curveData.params;\n      return curveAcc;\n    }, {});\n    talentData.burst = talentData.burst.reduce((curveAcc, curveData) => {\n      curveAcc[curveData.level] = curveData.params;\n      return curveAcc;\n    }, {});\n\n    acc[talentDataRaw.characterId] = talentData;\n    return acc;\n  }, {});\n}\n\nfunction processArtifactSetData(rawData) {\n  return rawData.reduce((acc, setData) => {\n    acc[setData.id] = setData;\n    return acc;\n  }, {});\n}\n\nfunction processArtifactSetBonusData(rawData) {\n  return rawData.reduce((acc, setData) => {\n    acc[setData.setId] = setData.setBonusSet.reduce((bonusAcc, bonusData) => {\n      bonusAcc[bonusData.bonusThreshold] = bonusData;\n      return bonusAcc;\n    }, {});\n    return acc;\n  }, {});\n}\n\n// Helper functions for accessing data properties\nfunction getData(id, dataObj) {\n  return dataObj[id];\n}\n\nfunction getAscensionBonusData(id, dataObj) {\n  return dataObj[id];\n}\n\nfunction getStatCurveAt(level, statCurves) {\n  return statCurves[level];\n}\n\n// \"Public\" functions for accessing data properties\nexport function getCharacterData(id) {\n  return getData(id, characterData);\n}\n\nexport function getCharacterAscensionBonusData(id) {\n  return getAscensionBonusData(id, characterAscensionBonusData);\n}\n\nexport function getCharacterStatCurveAt(level) {\n  return getStatCurveAt(level, characterStatCurveData);\n}\n\nexport function getWeaponData(id) {\n  return getData(id, weaponData);\n}\n\nexport function getWeaponAscensionBonusData(id) {\n  return getAscensionBonusData(id, weaponAscensionBonusData);\n}\n\nexport function getWeaponStatCurveAt(level) {\n  return getStatCurveAt(level, weaponStatCurveData);\n}\n\nexport function getAscensionBonusAt(level, ascensionBonuses) {\n  return ascensionBonuses[level];\n}\n\nexport function getTalentData(id) {\n  return talentData[id];\n}\n\nconst emptyTalentParams = Array(19).fill(NaN);\n\nexport function getTalentStatsAt(type, level, talents) {\n  const talentStats = talents[type][level];\n  if (talentStats !== undefined) {\n    return talentStats;\n  } else {\n    return emptyTalentParams;\n  }\n}\n\nexport function getArtifactSetData(id) {\n  return getData(id, artifactSetData);\n}\n\nexport function getArtifactSetBonusData(id) {\n  return getData(id, artifactSetBonusData);\n}\n\nexport function getArtifactSetBonusParams(id, pieces) {\n  const params = getArtifactSetBonusData(id)?.[pieces]?.bonusExtra?.params;\n  return params ?? emptyTalentParams;\n}\n\n// \"Public\" functions for getting data collections\nexport function getSortedCharacterList() {\n  if (sortedCharacterList === undefined) {\n    sortedCharacterList = Object.entries(characterData)\n      .sort(([_1, { name: name1 }], [_2, { name: name2 }]) =>\n        name1.localeCompare(name2)\n      )\n      .map(([id, _]) => id);\n  }\n\n  return sortedCharacterList;\n}\n\nexport function getSortedWeaponList() {\n  if (sortedWeaponList === undefined) {\n    sortedWeaponList = Object.entries(weaponData)\n      .sort(([_1, { name: name1 }], [_2, { name: name2 }]) =>\n        name1.localeCompare(name2)\n      )\n      .map(([id, _]) => id);\n  }\n\n  return sortedWeaponList;\n}\n\nexport function getSortedArtifactSetList() {\n  if (sortedArtifactSetList === undefined) {\n    sortedArtifactSetList = Object.entries(artifactSetData)\n      .sort(([_1, { name: name1 }], [_2, { name: name2 }]) =>\n        name1.localeCompare(name2)\n      )\n      .map(([id, _]) => id);\n  }\n\n  return sortedArtifactSetList;\n}\n","export default class Resistance {\n  constructor({\n    anemo = 0,\n    cryo = 0,\n    electro = 0,\n    geo = 0,\n    hydro = 0,\n    pyro = 0,\n    physical = 0,\n  }) {\n    this.anemo = anemo;\n    this.cryo = cryo;\n    this.electro = electro;\n    this.geo = geo;\n    this.hydro = hydro;\n    this.pyro = pyro;\n    this.physical = physical;\n  }\n\n  set(type, value) {\n    if (!isNaN(value)) {\n      this[type] = value;\n    } else {\n      this[type] = 0;\n    }\n  }\n\n  add(type, value) {\n    if (!isNaN(value)) {\n      this[type] += value;\n    }\n  }\n}\n","import { getTalentData, getTalentStatsAt } from './Data.js';\nimport Resistance from './Resistance.js';\n\n// Placeholder function\nexport function defaultTalent() {\n  return [];\n}\n\n// Internal functions\n\nfunction getDamageBonus({ stats, element, attackType }) {\n  let dmgBonus = 1;\n  dmgBonus += stats.dmgBonus ?? 0;\n  dmgBonus += stats[`${element}DmgBonus`] ?? 0;\n\n  switch (attackType) {\n    case 'normal':\n      dmgBonus += stats.normalDmgBonus ?? 0;\n      break;\n\n    case 'charged':\n      dmgBonus += stats.chargedDmgBonus ?? 0;\n      break;\n\n    case 'plunge':\n      dmgBonus += stats.plungeDmgBonus ?? 0;\n      break;\n\n    case 'skill':\n      dmgBonus += stats.skillDmgBonus ?? 0;\n      break;\n\n    case 'burst':\n      dmgBonus += stats.burstDmgBonus ?? 0;\n      break;\n\n    default:\n      break;\n  }\n\n  return dmgBonus;\n}\n\nfunction calculateBaseDamage({ stats, multiplier, scalingType, flatDmg = 0 }) {\n  if (scalingType == 'attack') {\n    return stats.flatAtk * multiplier + flatDmg;\n  } else if (scalingType == 'defense') {\n    return stats.flatDef * multiplier + flatDmg;\n  } else if (scalingType == 'hp') {\n    return stats.flatHp * multiplier + flatDmg;\n  } else {\n    return NaN;\n  }\n}\n\nfunction calculateResMultiplier({\n  element,\n  res = new Resistance({}),\n  resReduction = new Resistance({}),\n}) {\n  let totalRes = res[element] - resReduction[element];\n\n  if (totalRes < 0) {\n    return 1 - totalRes / 2;\n  } else if (totalRes < 0.75) {\n    return 1 - totalRes;\n  } else {\n    return 1 / (4 * totalRes + 1);\n  }\n}\n\nfunction calculateTotalDamage({\n  stats,\n  multiplier,\n  element,\n  scalingType = 'attack',\n  attackType = 'none',\n  modifier,\n}) {\n  let baseDmg = calculateBaseDamage({\n    stats,\n    multiplier,\n    scalingType,\n    flatDmg: modifier.flatDmg,\n  });\n  let dmgBonus = getDamageBonus({ stats, element, attackType });\n\n  let crit = 1;\n  if (modifier.critType === 'crit') {\n    crit += stats.critDmg;\n  } else if (modifier.critType === 'average') {\n    let critRate = stats.critRate;\n    if (attackType === 'charged') {\n      critRate += stats.chargedCritRate ?? 0;\n    }\n    crit += Math.min(1, critRate) * stats.critDmg;\n  }\n\n  let enemyDefMultiplier =\n    (modifier.characterLevel + 100) /\n    (modifier.characterLevel +\n      100 +\n      (modifier.enemyLevel + 100) * (1 - modifier.enemyDefReduction));\n  let enemyResMultiplier = calculateResMultiplier({\n    element,\n    res: modifier.enemyRes,\n    resReduction: modifier.enemyResReduction,\n  });\n\n  // TODO: reactionBonus\n\n  return baseDmg * dmgBonus * crit * enemyDefMultiplier * enemyResMultiplier;\n}\n\nfunction calculateHealing({\n  stats,\n  multiplier,\n  flatHealing,\n  scalingType = 'hp',\n}) {\n  // TODO: Add healing bonus\n  return calculateBaseDamage({\n    stats,\n    multiplier,\n    scalingType,\n    flatDmg: flatHealing,\n  });\n}\n\n// Used for calculting hp of summons/shield\nfunction calculateHp({ stats, multiplier, flatBonus, scalingType = 'hp' }) {\n  if (scalingType == 'attack') {\n    return stats.flatAtk * multiplier + flatBonus;\n  } else if (scalingType == 'defense') {\n    return stats.flatDef * multiplier + flatBonus;\n  } else if (scalingType == 'hp') {\n    return stats.flatHp * multiplier + flatBonus;\n  } else {\n    return NaN;\n  }\n}\n\n// Used for calculating total shield strength\nfunction calculateDmgAbsorption({\n  stats,\n  multiplier,\n  flatBonus,\n  element,\n  scalingType = 'hp',\n  modifier,\n}) {\n  let dmgAbsorption = calculateHp({\n    stats,\n    multiplier,\n    flatBonus,\n    scalingType,\n  });\n\n  // Geo Shields\n  if (element === 'geo') dmgAbsorption *= 1.5;\n\n  // Shield bonus from external sources\n  if (stats.shieldStrength !== undefined)\n    dmgAbsorption *= 1 + stats.shieldStrength;\n\n  // Character-specific bonuses\n\n  // Diona Hold Skill\n  if (modifier.dionaHoldSkill) dmgAbsorption *= 1.75;\n\n  return dmgAbsorption;\n}\n\n// Used for all default normal attacks\nfunction normalAttackDefault({ hits, element, params, stats, modifier }) {\n  let talentValues = [];\n  for (let i = 0; i < hits; i++) {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i],\n      element,\n      attackType: 'normal',\n      modifier,\n    });\n\n    talentValues.push({\n      description: `${i + 1}HitDmg`,\n      damage: [damage],\n    });\n  }\n\n  return talentValues;\n}\n\n// Used for all normal attacks with multiple damage instances in 1 hit e.g. polearms\nfunction normalAttackMulti({ hits = [], element, params, stats, modifier }) {\n  let talentValues = hits.map((hitCount, i) => {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i],\n      element,\n      attackType: 'normal',\n      modifier,\n    });\n\n    let damages = [];\n    for (let hit = 0; hit < hitCount; hit++) {\n      damages.push(damage);\n    }\n\n    return {\n      description: `${i + 1}HitDmg`,\n      damage: damages,\n    };\n  });\n\n  return talentValues;\n}\n\n// Used for all 1-hit charged attacks\nfunction chargedAttackDefault({ element, params, stats, modifier }) {\n  let damage = calculateTotalDamage({\n    stats,\n    multiplier: params[0],\n    element,\n    attackType: 'charged',\n    modifier,\n  });\n\n  return [\n    {\n      description: 'chargedDmg',\n      damage: [damage],\n    },\n  ];\n}\n\n// Used for multi-hit charged attacks\nfunction chargedAttackMulti({ hits, element, params, stats, modifier }) {\n  let damages = [];\n  for (let i = 0; i < hits; i++) {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i],\n      element,\n      attackType: 'charged',\n      modifier,\n    });\n    damages.push(damage);\n  }\n\n  return [\n    {\n      description: `chargedDmg`,\n      damage: damages,\n    },\n  ];\n}\n\n// Used for all default claymore charged attacks\nfunction chargedAttackHeavy({ element = 'physical', params, stats, modifier }) {\n  let descriptions = ['chargedSpinDmg', 'chargedFinalDmg'];\n  return descriptions.map((description, i) => {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i],\n      element,\n      attackType: 'charged',\n      modifier,\n    });\n\n    return {\n      description: description,\n      damage: [damage],\n    };\n  });\n}\n\n// Used for all default plunge attacks\nfunction plungeAttackDefault({ element, params, stats, modifier }) {\n  let descriptions = ['plungeDmg', 'lowPlungeDmg', 'highPlungeDmg'];\n  return descriptions.map((description, i) => {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i],\n      element,\n      attackType: 'plunge',\n      modifier,\n    });\n\n    return {\n      description: description,\n      damage: [damage],\n    };\n  });\n}\n\n// Used for all default sword/polearm/catalyst attacks\nfunction attackLightDefault({\n  normalHits,\n  element = 'physical',\n  params,\n  stats,\n  modifier,\n}) {\n  let talentValues = [];\n\n  talentValues.push(\n    ...normalAttackDefault({\n      hits: normalHits,\n      element,\n      params: params.slice(0, normalHits),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...chargedAttackDefault({\n      element,\n      params: params.slice(normalHits, normalHits + 1),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...plungeAttackDefault({\n      element,\n      params: params.slice(normalHits + 1 + 1),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentValues;\n}\n\n// Used for all default sword/polearm attacks with multi damage instances\nfunction attackLightMulti({\n  normalHits = [],\n  chargedHits = 1,\n  element = 'physical',\n  params,\n  stats,\n  modifier,\n}) {\n  let talentValues = [];\n\n  talentValues.push(\n    ...normalAttackMulti({\n      hits: normalHits,\n      element,\n      params: params.slice(0, normalHits.length),\n      stats,\n      modifier,\n    })\n  );\n\n  if (chargedHits === 1) {\n    talentValues.push(\n      ...chargedAttackDefault({\n        element,\n        params: params.slice(normalHits.length, normalHits.length + 1),\n        stats,\n        modifier,\n      })\n    );\n  } else {\n    talentValues.push(\n      ...chargedAttackMulti({\n        hits: chargedHits,\n        element,\n        params: params.slice(\n          normalHits.length,\n          normalHits.length + chargedHits\n        ),\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  talentValues.push(\n    ...plungeAttackDefault({\n      element,\n      params: params.slice(normalHits.length + chargedHits + 1),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentValues;\n}\n\n// Used for all default claymore attacks\nfunction attackHeavyDefault({\n  normalHits,\n  element = 'physical',\n  params,\n  stats,\n  modifier,\n}) {\n  let talentValues = [];\n\n  talentValues.push(\n    ...normalAttackDefault({\n      hits: normalHits,\n      element,\n      params: params.slice(0, normalHits),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...chargedAttackHeavy({\n      element,\n      params: params.slice(normalHits, normalHits + 2),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...plungeAttackDefault({\n      element,\n      params: params.slice(normalHits + 2 + 2),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentValues;\n}\n\n// Used for all claymore attacks with multi damage instances\nfunction attackHeavyMulti({\n  normalHits = [],\n  element = 'physical',\n  params,\n  stats,\n  modifier,\n}) {\n  let talentValues = [];\n\n  talentValues.push(\n    ...normalAttackMulti({\n      hits: normalHits,\n      element,\n      params: params.slice(0, normalHits.length),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...chargedAttackHeavy({\n      params: params.slice(normalHits.length, normalHits.length + 2),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...plungeAttackDefault({\n      element,\n      params: params.slice(normalHits.length + 2 + 2),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentValues;\n}\n\n// Used for all debault bow aim shots (include charged shots)\nfunction aimShotDefault({ chargedElement, params, stats, modifier }) {\n  let talentValues = [];\n\n  let damage = calculateTotalDamage({\n    stats,\n    multiplier: params[0],\n    element: 'physical',\n    attackType: 'normal',\n    modifier,\n  });\n  talentValues.push({\n    description: 'aimShotDmg',\n    damage: [damage],\n  });\n\n  damage = calculateTotalDamage({\n    stats,\n    multiplier: params[1],\n    element: chargedElement,\n    attackType: 'charged',\n    modifier,\n  });\n  talentValues.push({\n    description: 'chargedAimShotDmg',\n    damage: [damage],\n  });\n\n  return talentValues;\n}\n\n// Used for all default bow attacks\nfunction attackBowDefault({\n  normalHits,\n  chargedElement,\n  params,\n  stats,\n  modifier,\n}) {\n  let talentValues = [];\n\n  talentValues.push(\n    ...normalAttackDefault({\n      hits: normalHits,\n      element: 'physical',\n      params: params.slice(0, normalHits),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...aimShotDefault({\n      chargedElement,\n      params: params.slice(normalHits, normalHits + 2),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...plungeAttackDefault({\n      element: 'physical',\n      params: params.slice(normalHits + 2),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentValues;\n}\n\n// Base function for all damage skills. Returns an object representing a single line to be displayed.\n// The returned object should always be added into an array to construct the list of talent damage.\nfunction skillBase({ description, element, multiplier, stats, modifier }) {\n  let damage = calculateTotalDamage({\n    element,\n    multiplier,\n    attackType: 'skill',\n    stats,\n    modifier,\n  });\n\n  return {\n    description,\n    damage: [damage],\n  };\n}\n\n// Used for all default skill that only does 1-hit elemental dmg\nfunction skillDefault({ element, params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'skillDmg',\n      element,\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Base function for damage skills with multiple damage instances\nfunction skillMultiBase({\n  description,\n  hits,\n  element,\n  params,\n  stats,\n  modifier,\n}) {\n  let damages = [];\n\n  for (let i = 0; i < hits; i++) {\n    damages.push(\n      calculateTotalDamage({\n        element,\n        multiplier: params[i],\n        attackType: 'skill',\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  return {\n    description,\n    damage: damages,\n  };\n}\n\n// Base function for all damage bursts. Returns an object representing a single line to be displayed.\n// The returned object should always be added into an array to construct the list of talent damage.\nfunction burstBase({ description, element, multiplier, stats, modifier }) {\n  let damage = calculateTotalDamage({\n    element,\n    multiplier,\n    attackType: 'burst',\n    stats,\n    modifier,\n  });\n\n  return {\n    description,\n    damage: [damage],\n  };\n}\n\n// Used for all default burst that only does 1-hit elemental dmg\nfunction burstDefault({ element, params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'burstDmg',\n      element,\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Base function for bursts with multiple damage instances\nfunction burstMultiBase({\n  description,\n  hits,\n  element,\n  params,\n  stats,\n  modifier,\n}) {\n  let damages = [];\n\n  for (let i = 0; i < hits; i++) {\n    damages.push(\n      calculateTotalDamage({\n        element,\n        multiplier: params[i],\n        attackType: 'burst',\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  return {\n    description,\n    damage: damages,\n  };\n}\n\n// Base function for all healing skills. Returns an object representing a single line to be displayed.\n// The returned object should always be added into an array to construct the list of talent damage.\nfunction healingSkillBase({\n  description,\n  scalingType = 'hp',\n  params,\n  stats,\n  modifier,\n}) {\n  let damage = calculateHealing({\n    stats,\n    multiplier: params[0],\n    flatHealing: params[1],\n    scalingType,\n  });\n\n  return {\n    description,\n    damage: [damage],\n  };\n}\n\n// Base function for all shields/summon HP\nfunction hpBase({\n  description,\n  multiplier,\n  flatBonus,\n  scalingType = 'hp',\n  stats,\n  modifier,\n}) {\n  let hp = calculateHp({\n    stats,\n    multiplier,\n    flatBonus,\n    scalingType,\n  });\n\n  return {\n    description,\n    damage: [hp],\n  };\n}\n\nfunction shieldBase({\n  description,\n  multiplier,\n  flatBonus,\n  element,\n  scalingType = 'hp',\n  stats,\n  modifier,\n}) {\n  let dmgAbsorption = calculateDmgAbsorption({\n    stats,\n    multiplier,\n    flatBonus,\n    element,\n    scalingType,\n    modifier,\n  });\n\n  return {\n    description,\n    damage: [dmgAbsorption],\n  };\n}\n\n// Public functions\n// Access using talent[characterId + type]\n\n// Lisa\nexport function lisaAttack({ params, stats, modifier }) {\n  return attackLightDefault({\n    normalHits: 4,\n    element: 'electro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function lisaSkill({ params, stats, modifier }) {\n  let talentDmg = [];\n\n  talentDmg.push(\n    skillBase({\n      description: 'pressDmg',\n      element: 'electro',\n      multiplier: params[5],\n      stats,\n      modifier,\n    })\n  );\n\n  for (let i = 0; i <= 3; i++) {\n    talentDmg.push(\n      skillBase({\n        description: `holdDmgStack${i}`,\n        element: 'electro',\n        multiplier: params[i],\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  return talentDmg;\n}\n\nexport function lisaBurst({ params, stats, modifier }) {\n  return burstDefault({\n    element: 'electro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\n// Barbara\nexport function barbaraAttack({ params, stats, modifier }) {\n  return attackLightDefault({\n    normalHits: 4,\n    element: 'hydro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function barbaraSkill({ params, stats, modifier }) {\n  let talentDmg = [\n    healingSkillBase({\n      description: 'hpRegenContinuous',\n      params: params.slice(0, 2),\n      stats,\n      modifier,\n    }),\n\n    healingSkillBase({\n      description: 'hpRegenOnHit',\n      params: params.slice(2, 4),\n      stats,\n      modifier,\n    }),\n\n    skillBase({\n      description: 'dropletDmg',\n      element: 'hydro',\n      multiplier: params[4],\n      stats,\n      modifier,\n    }),\n  ];\n\n  return talentDmg;\n}\n\nexport function barbaraBurst({ params, stats, modifier }) {\n  return [\n    healingSkillBase({\n      description: 'hpRegen',\n      params,\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Kaeya\nexport function kaeyaAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 1, 1, 1],\n    chargedHits: 2,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function kaeyaSkill({ params, stats, modifier }) {\n  return skillDefault({\n    element: 'cryo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function kaeyaBurst({ params, stats, modifier }) {\n  return burstDefault({\n    element: 'cryo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\n// Diluc\nexport function dilucAttack({ params, stats, modifier }) {\n  const element = modifier.infusion ?? 'physical';\n  return attackHeavyDefault({\n    normalHits: 4,\n    element,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function dilucSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n  for (let i = 0; i < 3; i++) {\n    talentDamage.push(\n      skillBase({\n        description: `${i + 1}HitDmg`,\n        element: 'pyro',\n        multiplier: params[i],\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  return talentDamage;\n}\n\nexport function dilucBurst({ params, stats, modifier }) {\n  let descriptions = ['slashingDmg', 'dot', 'explosionDmg'];\n  let talentDamage = descriptions.map((description, i) => {\n    return burstBase({\n      description,\n      element: 'pyro',\n      multiplier: params[i],\n      stats,\n      modifier,\n    });\n  });\n\n  return talentDamage;\n}\n\n// Razor\nexport function razorAttack({ params, stats, modifier }) {\n  return attackHeavyDefault({\n    normalHits: 4,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function razorSkill({ params, stats, modifier }) {\n  let descriptions = ['pressDmg', 'holdDmg'];\n  return descriptions.map((description, i) => {\n    return skillBase({\n      description,\n      element: 'electro',\n      multiplier: params[i],\n      stats,\n      modifier,\n    });\n  });\n}\n\nexport function razorBurst({ params, stats, modifier }) {\n  let talentDamage = burstDefault({\n    element: 'electro',\n    params,\n    stats,\n    modifier,\n  });\n\n  let attackParams = getTalentStatsAt(\n    'attack',\n    modifier.talentAttackLevel,\n    getTalentData('razor')\n  );\n\n  for (let i = 0; i < 4; i++) {\n    talentDamage.push(\n      burstBase({\n        description: `${i + 1}HitDmgSoulCompanion`,\n        element: 'electro',\n        multiplier: params[1] * attackParams[i],\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  return talentDamage;\n}\n\n// Amber\nexport function amberAttack({ params, stats, modifier }) {\n  return attackBowDefault({\n    normalHits: 5,\n    chargedElement: 'pyro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function amberSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    skillBase({\n      description: 'explosionDmg',\n      element: 'electro',\n      multiplier: params[1],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    hpBase({\n      description: 'baronBunnyHp',\n      multiplier: params[0],\n      flatBonus: 0,\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function amberBurst({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    burstBase({\n      description: 'dmgPerWave',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push({\n    description: 'totalDmg',\n    damage: [talentDamage[0].damage[0] * 18],\n  });\n\n  return talentDamage;\n}\n\n// Venti\nexport function ventiAttack({ params, stats, modifier }) {\n  return attackBowDefault({\n    normalHits: 6,\n    chargedElement: 'anemo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function ventiSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'pressDmg',\n      element: 'anemo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    skillBase({\n      description: 'holdDmg',\n      element: 'anemo',\n      multiplier: params[2],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function ventiBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'dot',\n      element: 'anemo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    // Not sure how the elemental absorption dmg is calculated\n    burstBase({\n      description: 'dotElementalAbsorption',\n      element: 'none',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Xiangling\nexport function xianglingAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 2, 4, 1],\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function xianglingSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'guobaDmg',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function xianglingBurst({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  for (let i = 0; i < 3; i++) {\n    talentDamage.push(\n      burstBase({\n        description: `swing${i + 1}HitDmg`,\n        element: 'pyro',\n        multiplier: params[i],\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  talentDamage.push(\n    burstBase({\n      description: 'pyronadoDmg',\n      element: 'pyro',\n      multiplier: params[3],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\n// Beidou\nexport function beidouAttack({ params, stats, modifier }) {\n  return attackHeavyDefault({\n    normalHits: 5,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function beidouSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    shieldBase({\n      description: 'shieldHp',\n      multiplier: params[0],\n      flatBonus: params[1],\n      element: 'electro',\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    skillBase({\n      description: 'baseDmg',\n      element: 'electro',\n      multiplier: params[2],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    skillBase({\n      description: 'dmgBonusOnHitTaken',\n      element: 'electro',\n      multiplier: params[3],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function beidouBurst({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    burstBase({\n      description: 'skillDmg',\n      element: 'electro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    burstBase({\n      description: 'lightningDmg',\n      element: 'electro',\n      multiplier: params[1],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\n// Xingqiu\nexport function xingqiuAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 2, 1, 2],\n    chargedHits: 2,\n    params: params\n      .slice(0, 3)\n      .concat(params.slice(4, 6))\n      .concat(params.slice(7)),\n    stats,\n    modifier,\n  });\n}\n\nexport function xingqiuSkill({ params, stats, modifier }) {\n  return [\n    skillMultiBase({\n      description: 'skillDmg',\n      hits: 2,\n      element: 'hydro',\n      params,\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function xingqiuBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'swordRainDmg',\n      element: 'hydro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Xiao\nexport function xiaoAttack({ params, stats, modifier }) {\n  const element = modifier.infusion ?? 'physical';\n\n  return attackLightMulti({\n    normalHits: [2, 1, 1, 2, 1, 1],\n    element,\n    params: params.slice(1, 5).concat(params.slice(6)),\n    stats,\n    modifier,\n  });\n}\n\nexport function xiaoSkill({ params, stats, modifier }) {\n  return skillDefault({\n    element: 'anemo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function xiaoBurst({ params, stats, modifier }) {\n  return defaultTalent();\n}\n\n// Ningguang\nexport function ningguangAttack({ params, stats, modifier }) {\n  let talentDmg = [];\n\n  // Ningguang's normal attack has no combo\n  let normalAtkDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[0],\n    element: 'geo',\n    attackType: 'normal',\n    modifier,\n  });\n  talentDmg.push({\n    description: 'normalAtkDmg',\n    damage: [normalAtkDmg],\n  });\n\n  talentDmg.push(\n    ...chargedAttackDefault({\n      element: 'geo',\n      params: params.slice(1, 2),\n      stats,\n      modifier,\n    })\n  );\n\n  // Ningguang's charged attack dmg per star jade\n  let starJadeDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[2],\n    element: 'geo',\n    attackType: 'charged',\n    modifier,\n  });\n  talentDmg.push({\n    description: 'starJadeDmg',\n    damage: [starJadeDmg],\n  });\n\n  talentDmg.push(\n    ...plungeAttackDefault({\n      element: 'geo',\n      params: params.slice(4),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDmg;\n}\n\nexport function ningguangSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    skillBase({\n      description: 'skillDmg',\n      element: 'geo',\n      multiplier: params[1],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    hpBase({\n      description: 'jadeScreenHp',\n      multiplier: params[2],\n      flatBonus: 0,\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function ningguangBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'dmgPerGem',\n      element: 'geo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Klee\nexport function kleeAttack({ params, stats, modifier }) {\n  return attackLightDefault({\n    normalHits: 3,\n    element: 'pyro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function kleeSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'jumpyDumptyDmg',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    skillBase({\n      description: 'mineDmg',\n      element: 'pyro',\n      multiplier: params[3],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function kleeBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'sparksNSplashDmg',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Zhongli\nexport function zhongliAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 1, 1, 4, 1],\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function zhongliSkill({ params, stats, modifier }) {\n  let descriptions = ['stoneSteeleDmg', 'resonanceDmg'];\n\n  let talentDamage = descriptions.map((description, i) => {\n    return skillBase({\n      description,\n      element: 'geo',\n      multiplier: params[i],\n      stats,\n      modifier,\n    });\n  });\n\n  talentDamage.push(\n    skillBase({\n      description: 'holdDmg',\n      element: 'geo',\n      multiplier: params[3],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    shieldBase({\n      description: 'shieldHp',\n      multiplier: params[5],\n      flatBonus: params[4],\n      element: 'geo',\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function zhongliBurst({ params, stats, modifier }) {\n  return burstDefault({\n    element: 'geo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\n// Fischl\nexport function fischlAttack({ params, stats, modifier }) {\n  return attackBowDefault({\n    normalHits: 5,\n    chargedElement: 'electro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function fischlSkill({ params, stats, modifier }) {\n  let descriptions = ['ozDmg', 'summoningDmg'];\n  return descriptions.map((description, i) =>\n    skillBase({\n      description,\n      element: 'electro',\n      multiplier: params[i],\n      stats,\n      modifier,\n    })\n  );\n}\n\nexport function fischlBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'fallingThunderDmg',\n      element: 'electro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Bennett\nexport function bennettAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 1, 1, 1],\n    chargedHits: 2,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function bennettSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'pressDmg',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    skillMultiBase({\n      description: 'chargeLevel1Dmg',\n      hits: 2,\n      element: 'pyro',\n      params: params.slice(1, 3),\n      stats,\n      modifier,\n    }),\n\n    skillMultiBase({\n      description: 'chargeLevel2Dmg',\n      hits: 2,\n      element: 'pyro',\n      params: params.slice(3, 5),\n      stats,\n      modifier,\n    }),\n\n    skillBase({\n      description: 'explosionDmg',\n      element: 'pyro',\n      multiplier: params[5],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function bennettBurst({ params, stats, modifier }) {\n  let talentDamage = [\n    burstBase({\n      description: 'burstDmg',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    healingSkillBase({\n      description: 'hpRegenContinuousPerSecond',\n      params: params.slice(1, 3),\n      stats,\n      modifier,\n    }),\n  ];\n\n  // ATK Bonus\n  let atkBonus = stats.baseAtk * params[3];\n  talentDamage.push({\n    description: 'atkBonus',\n    damage: [atkBonus],\n  });\n\n  return talentDamage;\n}\n\n// Tartaglia\nexport function tartagliaAttack({ params, stats, modifier }) {\n  let talentDamage = attackBowDefault({\n    normalHits: 6,\n    chargedElement: 'hydro',\n    params: params.slice(0, 8).concat(params.slice(10)),\n    stats,\n    modifier,\n  });\n\n  let riptideFlashDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[8],\n    element: 'hydro',\n    attackType: 'normal',\n    modifier,\n  });\n  talentDamage.push({\n    description: 'riptideFlashDmg',\n    damage: [riptideFlashDmg],\n  });\n\n  let riptideBurstDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[9],\n    element: 'hydro',\n    attackType: 'normal',\n    modifier,\n  });\n  talentDamage.push({\n    description: 'riptideBurstDmg',\n    damage: [riptideBurstDmg],\n  });\n\n  return talentDamage;\n}\n\nexport function tartagliaSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    skillBase({\n      description: 'stanceChangeDmg',\n      element: 'hydro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    ...normalAttackMulti({\n      hits: [1, 1, 1, 1, 1, 2],\n      element: 'hydro',\n      params: params.slice(1, 8),\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    ...chargedAttackMulti({\n      hits: 2,\n      element: 'hydro',\n      params: params.slice(8, 10),\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    skillBase({\n      description: 'riptideSlashDmg',\n      element: 'hydro',\n      multiplier: params[10],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function tartagliaBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'burstDmgMelee',\n      element: 'hydro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'burstDmgRanged',\n      element: 'hydro',\n      multiplier: params[2],\n      stats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'riptideBlastDmg',\n      element: 'hydro',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Noelle\nexport function noelleAttack({ params, stats, modifier }) {\n  const element = modifier.infusion ?? 'physical';\n\n  return attackHeavyDefault({\n    normalHits: 4,\n    element,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function noelleSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  let skillDamage = calculateTotalDamage({\n    stats,\n    multiplier: params[5],\n    element: 'geo',\n    scalingType: 'defense',\n    attackType: 'skill',\n    modifier,\n  });\n  talentDamage.push({\n    description: 'skillDmg',\n    damage: [skillDamage],\n  });\n\n  talentDamage.push(\n    shieldBase({\n      description: 'shieldHp',\n      multiplier: params[0],\n      flatBonus: params[6],\n      element: 'geo',\n      scalingType: 'defense',\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    healingSkillBase({\n      description: 'healing',\n      params: [params[1], params[7]],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function noelleBurst({ params, stats, modifier }) {\n  let modifiedStats = {\n    ...stats,\n    flatAtk: stats.flatAtk + stats.flatDef * params[2],\n  };\n\n  return [\n    burstBase({\n      description: 'burstInitDmg',\n      element: 'geo',\n      multiplier: params[0],\n      stats: modifiedStats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'firstSwingDmg',\n      element: 'geo',\n      multiplier: params[1],\n      stats: modifiedStats,\n      modifier,\n    }),\n  ];\n}\n\n// Qiqi\nexport function qiqiAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 2, 2, 1],\n    chargedHits: 2,\n    params: params.slice(0, 6).concat(params[5]).concat(params.slice(6)),\n    stats,\n    modifier,\n  });\n}\n\nexport function qiqiSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'skillDmg',\n      element: 'cryo',\n      multiplier: params[7],\n      stats,\n      modifier,\n    }),\n\n    skillBase({\n      description: 'heraldOfFrostDmg',\n      element: 'cryo',\n      multiplier: params[4],\n      stats,\n      modifier,\n    }),\n\n    healingSkillBase({\n      description: 'hpRegenOnHit',\n      scalingType: 'attack',\n      params: params.slice(0, 2),\n      stats,\n      modifier,\n    }),\n\n    healingSkillBase({\n      description: 'hpRegenContinuous',\n      scalingType: 'attack',\n      params: params.slice(2, 4),\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function qiqiBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'burstDmg',\n      element: 'cryo',\n      multiplier: params[2],\n      stats,\n      modifier,\n    }),\n\n    healingSkillBase({\n      description: 'healing',\n      scalingType: 'attack',\n      params,\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Chongyun\nexport function chongyunAttack({ params, stats, modifier }) {\n  const element = modifier.infusion ?? 'physical';\n  return attackHeavyDefault({\n    normalHits: 4,\n    element,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function chongyunSkill({ params, stats, modifier }) {\n  return skillDefault({\n    element: 'cryo',\n    params: params,\n    stats,\n    modifier,\n  });\n}\n\nexport function chongyunBurst({ params, stats, modifier }) {\n  return burstDefault({\n    element: 'cryo',\n    params: params,\n    stats,\n    modifier,\n  });\n}\n\n// Ganyu\nexport function ganyuAttack({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  // Normal attack\n  talentDamage.push(\n    ...normalAttackDefault({\n      hits: 6,\n      element: 'physical',\n      params,\n      stats,\n      modifier,\n    })\n  );\n\n  // Charged attack\n  let aimedShotDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[6],\n    element: 'physical',\n    attackType: 'normal',\n    modifier,\n  });\n  talentDamage.push({\n    description: 'aimShotDmg',\n    damage: [aimedShotDmg],\n  });\n\n  let chargedDescriptions = [\n    'aimShotChargeLevel1',\n    'frostflakeArrowDmg',\n    'frostflakeArrowBloomDmg',\n  ];\n  let chargedDmg = chargedDescriptions.map((description, i) => {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i + 7],\n      element: 'cryo',\n      attackType: 'charged',\n      modifier,\n    });\n\n    return {\n      description,\n      damage: [damage],\n    };\n  });\n  talentDamage.push(...chargedDmg);\n\n  talentDamage.push(\n    ...plungeAttackDefault({\n      element: 'physical',\n      params: params.slice(10),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function ganyuSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'skillDmg',\n      element: 'cryo',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n\n    hpBase({\n      description: 'iceLotusHp',\n      multiplier: params[0],\n      flatBonus: 0,\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function ganyuBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'iceShardDmg',\n      element: 'cryo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Albedo\nexport function albedoAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 1, 1, 1],\n    chargedHits: 2,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function albedoSkill({ params, stats, modifier }) {\n  let talentDmg = [];\n\n  talentDmg.push(\n    skillBase({\n      description: 'skillDmg',\n      element: 'geo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    })\n  );\n\n  let transientBlossomDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[1],\n    element: 'geo',\n    scalingType: 'defense',\n    attackType: 'skill',\n    modifier,\n  });\n  talentDmg.push({\n    description: 'transientBlossomDmg',\n    damage: [transientBlossomDmg],\n  });\n\n  return talentDmg;\n}\n\nexport function albedoBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'burstDmg',\n      element: 'geo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'fatalBlossomDmg',\n      element: 'geo',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Diona\nexport function dionaAttack({ params, stats, modifier }) {\n  return attackBowDefault({\n    normalHits: 5,\n    chargedElement: 'cryo',\n    params: params.slice(0, 5).concat(params.slice(6)),\n    stats,\n    modifier,\n  });\n}\n\nexport function dionaSkill({ params, stats, modifier }) {\n  let holdModifier = {\n    ...modifier,\n    dionaHoldSkill: true,\n  };\n\n  return [\n    skillBase({\n      description: 'icyPawDmgPerPaw',\n      element: 'cryo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    shieldBase({\n      description: 'shieldHpPress',\n      multiplier: params[1],\n      flatBonus: params[2],\n      element: 'cryo',\n      stats,\n      modifier,\n    }),\n\n    shieldBase({\n      description: 'shieldHpHold',\n      multiplier: params[1],\n      flatBonus: params[2],\n      element: 'cryo',\n      stats,\n      modifier: holdModifier,\n    }),\n  ];\n}\n\nexport function dionaBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'burstDmg',\n      element: 'cryo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'continuousFieldDmg',\n      element: 'cryo',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n\n    healingSkillBase({\n      description: 'hpRegenContinuousTime',\n      params: params.slice(2),\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Mona\nexport function monaAttack({ params, stats, modifier }) {\n  return attackLightDefault({\n    normalHits: 4,\n    element: 'hyrdo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function monaSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'dot',\n      element: 'hydro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    skillBase({\n      description: 'explosionDmg',\n      element: 'hydro',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function monaBurst({ params, stats, modifier }) {\n  let modifiedStats = { ...stats };\n  if (modifiedStats.dmgBonus !== undefined) {\n    modifiedStats.dmgBonus += params[9];\n  } else {\n    modifiedStats.dmgBonus = params[9];\n  }\n\n  return [\n    burstBase({\n      description: 'explosionDmg',\n      element: 'hydro',\n      multiplier: params[1],\n      stats: modifiedStats,\n      modifier,\n    }),\n  ];\n}\n\n// Keqing\nexport function keqingAttack({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  // Normal attack\n  for (let i = 0; i < 3; i++) {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i],\n      element: 'physical',\n      attackType: 'normal',\n      modifier,\n    });\n    talentDamage.push({\n      description: `${i + 1}HitDmg`,\n      damage: [damage],\n    });\n  }\n\n  let hit4Dmg = [];\n  for (let i = 3; i < 5; i++) {\n    hit4Dmg.push(\n      calculateTotalDamage({\n        stats,\n        multiplier: params[i],\n        element: 'physical',\n        attackType: 'normal',\n        modifier,\n      })\n    );\n  }\n  talentDamage.push({\n    description: '4HitDmg',\n    damage: hit4Dmg,\n  });\n\n  let hit5Dmg = [\n    calculateTotalDamage({\n      stats,\n      multiplier: params[5],\n      element: 'physical',\n      attackType: 'normal',\n      modifier,\n    }),\n  ];\n  talentDamage.push({\n    description: `5HitDmg`,\n    damage: hit5Dmg,\n  });\n\n  // Charged attack\n  talentDamage.push(\n    ...chargedAttackMulti({\n      hits: 2,\n      element: 'physical',\n      params: params.slice(6, 8),\n      stats,\n      modifier,\n    })\n  );\n\n  // Plunge attack\n  talentDamage.push(\n    ...plungeAttackDefault({\n      element: 'physical',\n      params: params.slice(9, 12),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function keqingSkill({ params, stats, modifier }) {\n  let descriptions = ['lightningStilettoDmg', 'slashingDmg'];\n  let talentDamage = descriptions.map((description, i) => {\n    return skillBase({\n      description,\n      element: 'electro',\n      multiplier: params[i],\n      stats,\n      modifier,\n    });\n  });\n\n  talentDamage.push(\n    skillMultiBase({\n      description: 'thunderclapSlashDmg',\n      hits: 2,\n      element: 'electro',\n      params: [params[2], params[2]],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function keqingBurst({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    burstBase({\n      description: 'burstInitDmg',\n      element: 'electro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    })\n  );\n\n  let consecutiveSlashDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[1],\n    element: 'electro',\n    attackType: 'burst',\n    modifier,\n  });\n  talentDamage.push({\n    description: 'consecutiveSlashDmg',\n    damage: Array(8).fill(consecutiveSlashDmg),\n  });\n\n  talentDamage.push(\n    burstBase({\n      description: 'lastAttackDmg',\n      element: 'electro',\n      multiplier: params[2],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\n// Sucrose\nexport function sucroseAttack({ params, stats, modifier }) {\n  return attackLightDefault({\n    normalHits: 4,\n    element: 'anemo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function sucroseSkill({ params, stats, modifier }) {\n  return skillDefault({\n    element: 'anemo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function sucroseBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'dot',\n      element: 'anemo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    // Not sure how the elemental absorption dmg is calculated\n    burstBase({\n      description: 'dotElementalAbsorption',\n      element: 'none',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Xinyan\nexport function xinyanAttack({ params, stats, modifier }) {\n  return attackHeavyDefault({\n    normalHits: 4,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function xinyanSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    skillBase({\n      description: 'swingDmg',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    })\n  );\n\n  // Shields\n  for (let i = 0; i < 3; i++) {\n    talentDamage.push(\n      shieldBase({\n        description: `shieldHpLevel${i + 1}`,\n        multiplier: params[2 * i + 1],\n        flatBonus: params[2 * i + 2],\n        element: 'pyro',\n        scalingType: 'defense',\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  talentDamage.push(\n    skillBase({\n      description: 'dot',\n      element: 'pyro',\n      multiplier: params[7],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function xinyanBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'burstDmg',\n      element: 'physical',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'pyroDot',\n      element: 'pyro',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Rosaria\nexport function rosariaAttack({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  // Normal attack\n  talentDamage.push(\n    ...normalAttackMulti({\n      hits: [1, 1, 2, 1],\n      element: 'physical',\n      params,\n      stats,\n      modifier,\n    })\n  );\n\n  let hit5Dmg = [];\n  for (let i = 4; i < 6; i++) {\n    hit5Dmg.push(\n      calculateTotalDamage({\n        stats,\n        multiplier: params[i],\n        element: 'physical',\n        attackType: 'normal',\n        modifier,\n      })\n    );\n  }\n  talentDamage.push({\n    description: '5HitDmg',\n    damage: hit5Dmg,\n  });\n\n  // Charged attack\n  talentDamage.push(\n    ...chargedAttackDefault({\n      element: 'physical',\n      params: params.slice(6, 7),\n      stats,\n      modifier,\n    })\n  );\n\n  // Plunge attack\n  talentDamage.push(\n    ...plungeAttackDefault({\n      element: 'physical',\n      params: params.slice(8, 11),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function rosariaSkill({ params, stats, modifier }) {\n  return [\n    skillMultiBase({\n      description: 'skillDmg',\n      hits: 2,\n      element: 'cryo',\n      params,\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function rosariaBurst({ params, stats, modifier }) {\n  return [\n    burstMultiBase({\n      description: 'burstDmg',\n      hits: 2,\n      element: 'cryo',\n      params,\n      stats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'iceLanceDot',\n      element: 'cyro',\n      multiplier: params[2],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Hu Tao\nexport function hutaoAttack({ params, stats, modifier }) {\n  const element = modifier.infusion ?? 'physical';\n\n  let talentDamage = [];\n\n  // Normal attack\n  talentDamage.push(\n    ...normalAttackDefault({\n      hits: 4,\n      element,\n      params,\n      stats,\n      modifier,\n    })\n  );\n\n  let hit5Dmg = [];\n  for (let i = 4; i < 6; i++) {\n    hit5Dmg.push(\n      calculateTotalDamage({\n        stats,\n        multiplier: params[i],\n        element,\n        attackType: 'normal',\n        modifier,\n      })\n    );\n  }\n  talentDamage.push({\n    description: '5HitDmg',\n    damage: hit5Dmg,\n  });\n\n  let hit6Dmg = [\n    calculateTotalDamage({\n      stats,\n      multiplier: params[6],\n      element,\n      attackType: 'normal',\n      modifier,\n    }),\n  ];\n  talentDamage.push({\n    description: '6HitDmg',\n    damage: hit6Dmg,\n  });\n\n  // Charged attack\n  talentDamage.push(\n    ...chargedAttackDefault({\n      element,\n      params: params.slice(7, 8),\n      stats,\n      modifier,\n    })\n  );\n\n  // Plunge attack\n  talentDamage.push(\n    ...plungeAttackDefault({\n      element,\n      params: params.slice(9, 12),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function hutaoSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'bloodBlossomDmg',\n      element: 'pyro',\n      multiplier: params[2],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function hutaoBurst({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  let dmgDescriptions = ['burstDmg', 'burstDmgLowHp'];\n  dmgDescriptions.forEach((description, i) => {\n    talentDamage.push(\n      burstBase({\n        description,\n        element: 'pyro',\n        multiplier: params[i],\n        stats,\n        modifier,\n      })\n    );\n  });\n\n  let regenDescriptions = ['hpRegen', 'hpRegenLowHp'];\n  regenDescriptions.forEach((description, i) => {\n    talentDamage.push(\n      healingSkillBase({\n        description,\n        params: [params[i + 2], 0],\n        stats,\n        modifier,\n      })\n    );\n  });\n\n  return talentDamage;\n}\n\n// Yanfei\nexport function yanfeiAttack({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  // Normal attack\n  talentDamage.push(\n    ...normalAttackDefault({\n      hits: 3,\n      element: 'pyro',\n      params,\n      stats,\n      modifier,\n    })\n  );\n\n  // Charged attack\n  for (let i = 0; i < 5; i++) {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i + 3],\n      element: 'pyro',\n      attackType: 'charged',\n      modifier,\n    });\n    talentDamage.push({\n      description: `chargedDmgSeal${i}`,\n      damage: [damage],\n    });\n  }\n\n  // Plunge attack\n  talentDamage.push(\n    ...plungeAttackDefault({\n      element: 'pyro',\n      params: params.slice(15, 18),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function yanfeiSkill({ stats, params, modifier }) {\n  return skillDefault({\n    element: 'pyro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function yanfeiBurst({ stats, params, modifier }) {\n  return burstDefault({\n    element: 'pyro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\n// Eula\nexport function eulaAttack({ params, stats, modifier }) {\n  return attackHeavyMulti({\n    normalHits: [1, 1, 2, 1, 2],\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function eulaSkill({ params, stats, modifier }) {\n  let descriptions = ['pressDmg', 'holdDmg', 'icewhirlBrandDmg'];\n  return descriptions.map((description, i) => {\n    return skillBase({\n      description,\n      element: 'cryo',\n      multiplier: params[i],\n      stats,\n      modifier,\n    });\n  });\n}\n\nexport function eulaBurst({ params, stats, modifier }) {\n  let talentDmg = [];\n  talentDmg.push(\n    ...burstDefault({\n      element: 'cryo',\n      params,\n      stats,\n      modifier,\n    })\n  );\n\n  let descriptions = ['lightfallSwordBaseDmg', 'lightfallSwordStackDmg'];\n  let lightfallSwordParams = params.slice(1, 3);\n  let lightfallSwordTalent = descriptions.map((description, i) => {\n    return burstBase({\n      description,\n      element: 'physical',\n      multiplier: lightfallSwordParams[i],\n      stats,\n      modifier,\n    });\n  });\n\n  talentDmg.push(...lightfallSwordTalent);\n\n  return talentDmg;\n}\n","export default class Option {\n  // Currently handled types: boolean\n  constructor({\n    id,\n    type,\n    initialValue,\n    choices = [],\n\n    // Applies the Option onto stats\n    // Mutates stats directly\n    applyOnStats = (stats, value) => {},\n\n    // Applies the Option onto modifier\n    // Mutates modifier directly\n    applyOnModifier = (modifier, value) => {},\n  }) {\n    this.id = id;\n    this.type = type;\n    this.value = initialValue;\n    this.choices = choices;\n    this._applyOnStats = applyOnStats;\n    this._applyOnModifier = applyOnModifier;\n  }\n\n  applyOnStats(stats) {\n    this._applyOnStats(stats, this.value);\n    return stats;\n  }\n\n  applyOnModifier(modifier) {\n    this._applyOnModifier(modifier, this.value);\n    return modifier;\n  }\n\n  // Returns a new Option (or child class) with the new value\n  withValue(value) {\n    return new this.constructor({\n      id: this.id,\n      type: this.type,\n      initialValue: value,\n      choices: this.choices,\n      applyOnStats: this._applyOnStats,\n      applyOnModifier: this._applyOnModifier,\n    });\n  }\n}\n","import Option from '../Option';\n\nexport default class CharacterOption extends Option {\n  constructor({\n    id,\n    type,\n    initialValue,\n    choices = [],\n\n    // Applies the Option onto stats\n    // Mutates stats directly\n    applyOnStats = (\n      stats,\n      value,\n      { talentAttackLevel, talentSkillLevel, talentBurstLevel }\n    ) => {},\n\n    // Applies the Option onto modifier\n    // Mutates modifier directly\n    applyOnModifier = (modifier, value) => {},\n  }) {\n    super({ id, type, initialValue, choices, applyOnStats, applyOnModifier });\n  }\n\n  applyOnStats(stats, talentAttackLevel, talentSkillLevel, talentBurstLevel) {\n    this._applyOnStats(stats, this.value, {\n      talentAttackLevel,\n      talentSkillLevel,\n      talentBurstLevel,\n    });\n    return stats;\n  }\n}\n","import CharacterOption from './CharacterOption.js';\n\nconst dilucOptionInfusion = new CharacterOption({\n  id: 'infusionPyro',\n  type: 'boolean',\n  initialValue: false,\n\n  applyOnModifier: (modifier, value) => {\n    if (value === true) {\n      modifier.infusion = 'pyro';\n    }\n  },\n});\n\nexport default [dilucOptionInfusion];\n","import CharacterOption from './CharacterOption.js';\nimport { getTalentStatsAt, getTalentData } from '../../Data.js';\n\nconst xiaoOptionBurst = new CharacterOption({\n  id: 'xiaoBurst',\n  type: 'boolean',\n  initialValue: false,\n\n  applyOnStats: (stats, value, { talentBurstLevel }) => {\n    if (value === true) {\n      let burstParams = getTalentStatsAt(\n        'burst',\n        talentBurstLevel,\n        getTalentData('xiao')\n      );\n\n      stats.normalDmgBonus = burstParams[0] + (stats.normalDmgBonus ?? 0);\n      stats.chargedDmgBonus = burstParams[0] + (stats.chargedDmgBonus ?? 0);\n      stats.plungeDmgBonus = burstParams[0] + (stats.plungeDmgBonus ?? 0);\n    }\n  },\n\n  applyOnModifier: (modifier, value) => {\n    if (value === true) {\n      modifier.infusion = 'anemo';\n    }\n  },\n});\n\nexport default [xiaoOptionBurst];\n","import CharacterOption from './CharacterOption.js';\nimport { getTalentStatsAt, getTalentData } from '../../Data.js';\n\nconst noelleOptionBurst = new CharacterOption({\n  id: 'noelleBurst',\n  type: 'boolean',\n  initialValue: false,\n\n  applyOnStats: (stats, value, { talentBurstLevel }) => {\n    if (value === true) {\n      let burstParams = getTalentStatsAt(\n        'burst',\n        talentBurstLevel,\n        getTalentData('noelle')\n      );\n\n      stats.flatAtk = stats.flatAtk + stats.flatDef * burstParams[2];\n    }\n  },\n\n  applyOnModifier: (modifier, value) => {\n    if (value === true) {\n      modifier.infusion = 'geo';\n    }\n  },\n});\n\nexport default [noelleOptionBurst];\n","import CharacterOption from './CharacterOption.js';\n\nconst chongyunOptionInfusion = new CharacterOption({\n  id: 'infusionCryo',\n  type: 'boolean',\n  initialValue: false,\n\n  applyOnModifier: (modifier, value) => {\n    if (value === true) {\n      modifier.infusion = 'cryo';\n    }\n  },\n});\n\nexport default [chongyunOptionInfusion];\n","import CharacterOption from './CharacterOption.js';\nimport { getTalentStatsAt, getTalentData } from '../../Data.js';\n\nconst hutaoOptionSkill = new CharacterOption({\n  id: 'paramitaPapilioState',\n  type: 'boolean',\n  initialValue: false,\n\n  applyOnStats: (stats, value, { talentSkillLevel }) => {\n    if (value === true) {\n      let skillParams = getTalentStatsAt(\n        'skill',\n        talentSkillLevel,\n        getTalentData('hutao')\n      );\n      stats.flatAtk += skillParams[1] * stats.flatHp;\n    }\n  },\n\n  applyOnModifier: (modifier, value) => {\n    if (value === true) {\n      modifier.infusion = 'pyro';\n    }\n  },\n});\n\nexport default [hutaoOptionSkill];\n","import CharacterOption from './CharacterOption.js';\nimport { getTalentStatsAt, getTalentData } from '../../Data.js';\n\nconst yanfeiOptionBurst = new CharacterOption({\n  id: 'brilliance',\n  type: 'boolean',\n  initialValue: false,\n\n  applyOnStats: (stats, value, { talentBurstLevel }) => {\n    if (value === true) {\n      const burstParams = getTalentStatsAt(\n        'burst',\n        talentBurstLevel,\n        getTalentData('yanfei')\n      );\n      stats.chargedDmgBonus = burstParams[1] + (stats.chargedDmgBonus ?? 0);\n    }\n  },\n});\n\nexport default [yanfeiOptionBurst];\n","import Option from '../Option.js';\n\nexport default class ArtifactSetOption extends Option {\n  constructor({\n    id,\n    type,\n    initialValue,\n    choices = [],\n    threshold,\n\n    // Applies the Option onto stats\n    // Mutates stats directly\n    applyOnStats = (stats, value) => {},\n\n    // Applies the Option onto modifier\n    // Mutates modifier directly\n    applyOnModifier = (modifier, value) => {},\n  }) {\n    super({ id, type, initialValue, choices, applyOnStats, applyOnModifier });\n    this.threshold = threshold;\n  }\n\n  // Returns a new Option with the new value\n  withValue(value) {\n    return new this.constructor({\n      id: this.id,\n      type: this.type,\n      initialValue: value,\n      choices: this.choices,\n      threshold: this.threshold,\n      applyOnStats: this._applyOnStats,\n      applyOnModifier: this._applyOnModifier,\n    });\n  }\n}\n","import ArtifactSetOption from './ArtifactSetOption.js';\nimport { getArtifactSetBonusParams } from '../../Data.js';\n\nconst braveHeart4PcOption = new ArtifactSetOption({\n  id: 'braveHeart4Pc',\n  type: 'boolean',\n  initialValue: true,\n  threshold: 4,\n\n  applyOnStats: (stats, value) => {\n    if (value === true) {\n      const params = getArtifactSetBonusParams('braveheart', 4);\n      stats.dmgBonus = params[0] + (stats.dmgBonus ?? 0);\n    }\n  },\n});\n\nexport default [braveHeart4PcOption];\n","import ArtifactSetOption from './ArtifactSetOption.js';\nimport { getArtifactSetBonusParams } from '../../Data.js';\n\nconst berserker4PcOption = new ArtifactSetOption({\n  id: 'berserker4Pc',\n  type: 'boolean',\n  initialValue: true,\n  threshold: 4,\n\n  applyOnStats: (stats, value) => {\n    if (value === true) {\n      const params = getArtifactSetBonusParams('berserker', 4);\n      stats.critRate = params[0] + (stats.critRate ?? 0);\n    }\n  },\n});\n\nexport default [berserker4PcOption];\n","import ArtifactSetOption from './ArtifactSetOption.js';\nimport { getArtifactSetBonusParams } from '../../Data.js';\n\nconst martialArtist4PcOption = new ArtifactSetOption({\n  id: 'martialArtist4Pc',\n  type: 'boolean',\n  initialValue: true,\n  threshold: 4,\n\n  applyOnStats: (stats, value) => {\n    if (value === true) {\n      const params = getArtifactSetBonusParams('martialartist', 4);\n      stats.normalDmgBonus = params[2] + (stats.normalDmgBonus ?? 0);\n      stats.chargedDmgBonus = params[2] + (stats.chargedDmgBonus ?? 0);\n    }\n  },\n});\n\nexport default [martialArtist4PcOption];\n","import ArtifactSetOption from './ArtifactSetOption.js';\nimport { getArtifactSetBonusParams } from '../../Data.js';\n\nconst instructor4PcOption = new ArtifactSetOption({\n  id: 'instructor4Pc',\n  type: 'boolean',\n  initialValue: true,\n  threshold: 4,\n\n  applyOnStats: (stats, value) => {\n    if (value === true) {\n      const params = getArtifactSetBonusParams('instructor', 4);\n      stats.elementalMastery = params[1] + (stats.elementalMastery ?? 0);\n    }\n  },\n});\n\nexport default [instructor4PcOption];\n","import ArtifactSetOption from './ArtifactSetOption.js';\nimport { getArtifactSetBonusParams } from '../../Data.js';\n\nconst blizzardStrayer4PcCryoOption = new ArtifactSetOption({\n  id: 'blizzardStrayer4PcCryo',\n  type: 'boolean',\n  initialValue: true,\n  threshold: 4,\n\n  applyOnStats: (stats, value) => {\n    if (value === true) {\n      const params = getArtifactSetBonusParams('blizzardstrayer', 4);\n      stats.critRate = params[0] + (stats.critRate ?? 0);\n    }\n  },\n});\n\nconst blizzardStrayer4PcFrozenOption = new ArtifactSetOption({\n  id: 'blizzardStrayer4PcFrozen',\n  type: 'boolean',\n  initialValue: true,\n  threshold: 4,\n\n  applyOnStats: (stats, value) => {\n    if (value === true) {\n      const params = getArtifactSetBonusParams('blizzardstrayer', 4);\n      stats.critRate = params[1] + (stats.critRate ?? 0);\n    }\n  },\n});\n\nexport default [blizzardStrayer4PcCryoOption, blizzardStrayer4PcFrozenOption];\n","import ArtifactSetOption from './ArtifactSetOption.js';\nimport { getArtifactSetBonusParams } from '../../Data.js';\n\nconst thundersoother4PcOption = new ArtifactSetOption({\n  id: 'thundersoother4Pc',\n  type: 'boolean',\n  initialValue: true,\n  threshold: 4,\n\n  applyOnStats: (stats, value) => {\n    if (value === true) {\n      const params = getArtifactSetBonusParams('thundersoother', 4);\n      stats.dmgBonus = params[0] + (stats.dmgBonus ?? 0);\n    }\n  },\n});\n\nexport default [thundersoother4PcOption];\n","import ArtifactSetOption from './ArtifactSetOption.js';\nimport { getArtifactSetBonusParams } from '../../Data.js';\n\nconst lavawalker4PcOption = new ArtifactSetOption({\n  id: 'lavawalker4Pc',\n  type: 'boolean',\n  initialValue: true,\n  threshold: 4,\n\n  applyOnStats: (stats, value) => {\n    if (value === true) {\n      const params = getArtifactSetBonusParams('lavawalker', 4);\n      stats.dmgBonus = params[0] + (stats.dmgBonus ?? 0);\n    }\n  },\n});\n\nexport default [lavawalker4PcOption];\n","import ArtifactSetOption from './ArtifactSetOption.js';\nimport { getArtifactSetBonusParams } from '../../Data.js';\n\nconst maidenBeloved4PcOption = new ArtifactSetOption({\n  id: 'maidenBeloved4Pc',\n  type: 'boolean',\n  initialValue: true,\n  threshold: 4,\n\n  applyOnStats: (stats, value) => {\n    if (value === true) {\n      const params = getArtifactSetBonusParams('maidenbeloved', 4);\n      stats.healedBonus = params[0] + (stats.healedBonus ?? 0);\n    }\n  },\n});\n\nexport default [maidenBeloved4PcOption];\n","import ArtifactSetOption from './ArtifactSetOption.js';\nimport { getArtifactSetBonusParams } from '../../Data.js';\n\nconst viridescentVenerer4PcOption = new ArtifactSetOption({\n  id: 'viridescentVenerer4Pc',\n  type: 'picker',\n  initialValue: true,\n  choices: ['cryo', 'electro', 'hydro', 'pyro'],\n  threshold: 4,\n\n  applyOnModifier: (modifier, value) => {\n    const params = getArtifactSetBonusParams('viridescentvenerer', 4);\n    modifier.enemyResReduction.add(value, params[1]);\n  },\n});\n\nexport default [viridescentVenerer4PcOption];\n","import * as characterOptions from './characterOptions';\nimport * as artifactSetOptions from './artifactSetOptions';\n\nconst defaultOptions = [];\n\n// Type can be character, weapon, or artifact\nexport function getOptions(type, id) {\n  switch (type) {\n    case 'character':\n      return characterOptions[id] ?? defaultOptions;\n    case 'artifactSet':\n      return artifactSetOptions[id] ?? defaultOptions;\n    default:\n      return defaultOptions;\n  }\n}\n","import {\n  getCharacterData as getData,\n  getCharacterAscensionBonusData as getAscensionBonusData,\n  getCharacterStatCurveAt as getStatCurveAt,\n  getAscensionBonusAt,\n  getTalentData,\n  getTalentStatsAt,\n} from './Data.js';\n\nimport * as talents from './Talent.js';\nimport { getOptions } from './option';\n\nexport default class Character {\n  constructor(id) {\n    this.id = id;\n\n    const data = getData(id);\n    this.name = data.name;\n    this.baseStats = data.baseStats;\n    this.statCurveMapping = data.statCurves;\n    this.ascensionBonuses = getAscensionBonusData(id);\n\n    this.talents = getTalentData(id);\n  }\n\n  // Returns an Object containing the character's innate total HP, Atk and Def, taking into account only their level and ascension\n  getInnateStatsAt(level, hasAscended) {\n    if (isNaN(level) || level < 1 || level > 90) {\n      // Return nulls if level is invalid\n      let innateStats;\n      if (this.innateStats !== undefined) {\n        // Copy all of innateStats' properties to a new object and initialize them to null\n        innateStats = Object.keys(this.innateStats).reduce((obj, stat) => {\n          obj[stat] = null;\n          return obj;\n        }, {});\n      } else {\n        innateStats = {};\n      }\n\n      this.innateStats = innateStats;\n      this.level = level;\n      this.hasAscended = hasAscended;\n\n      return innateStats;\n    }\n    // If getStatsAt has not been called before, this.level, this.hasAscended, and this.stats will be undefined\n    else if (level === this.level && hasAscended === this.hasAscended) {\n      // Don't recalculate stats if it has been calculated with the same parameters before\n      return this.innateStats;\n    } else {\n      // Initialize stats with character level 1 base stats\n      let innateStats = { ...this.baseStats };\n\n      let charStatCurves = getStatCurveAt(level);\n\n      // Calculate stats from character level\n      Object.entries(this.statCurveMapping).forEach(([stat, curve]) => {\n        let multiplier = charStatCurves[curve];\n        innateStats[stat] *= multiplier;\n      });\n\n      // Calculate stats from character ascension\n      let ascensionLevel;\n      if (level > 80 || (level == 80 && hasAscended)) {\n        ascensionLevel = 6;\n      } else if (level > 70 || (level == 70 && hasAscended)) {\n        ascensionLevel = 5;\n      } else if (level > 60 || (level == 60 && hasAscended)) {\n        ascensionLevel = 4;\n      } else if (level > 50 || (level == 50 && hasAscended)) {\n        ascensionLevel = 3;\n      } else if (level > 40 || (level == 40 && hasAscended)) {\n        ascensionLevel = 2;\n      } else if (level > 20 || (level == 20 && hasAscended)) {\n        ascensionLevel = 1;\n      } else {\n        ascensionLevel = 0;\n      }\n      let ascensionBonuses = getAscensionBonusAt(\n        ascensionLevel,\n        this.ascensionBonuses\n      );\n\n      if (ascensionBonuses !== undefined) {\n        Object.entries(ascensionBonuses).forEach(([stat, bonus]) => {\n          if (stat in innateStats) {\n            innateStats[stat] += bonus;\n          } else {\n            innateStats[stat] = bonus;\n          }\n        });\n      }\n\n      this.innateStats = innateStats;\n      this.level = level;\n      this.hasAscended = hasAscended;\n\n      return innateStats;\n    }\n  }\n\n  // Return an Object with description and damage properties\n  getTalentDamageAt({ type, talentLevel, totalStats, modifier }) {\n    const params = getTalentStatsAt(\n      type.toLowerCase(),\n      talentLevel,\n      this.talents\n    );\n\n    let damageFn = talents[this.id + type];\n    if (damageFn === undefined) {\n      damageFn = talents['defaultTalent'];\n    }\n\n    let damage = damageFn({\n      params,\n      stats: totalStats,\n      modifier,\n    });\n\n    return damage;\n  }\n\n  getOptions() {\n    return getOptions('character', this.id);\n  }\n}\n","import {\n  getWeaponData as getData,\n  getWeaponAscensionBonusData as getAscensionBonusData,\n  getWeaponStatCurveAt as getStatCurveAt,\n  getAscensionBonusAt,\n} from './Data.js';\n\nexport default class Weapon {\n  constructor(id) {\n    this.id = id;\n\n    const data = getData(id);\n    this.name = data.name;\n    this.type = data.type;\n    this.rank = data.rank;\n    this.baseStats = data.baseStats;\n    this.statCurveMapping = data.statCurves;\n    this.ascensionBonuses = getAscensionBonusData(id);\n  }\n\n  // Returns an Object containing the weapons's HP, Atk and Def, taking into account only its level and ascension\n  getStatsAt(weaponLevel, hasAscended) {\n    if (\n      isNaN(weaponLevel) ||\n      weaponLevel < 1 ||\n      (this.rank <= 2 && weaponLevel > 70) ||\n      weaponLevel > 90\n    ) {\n      // Return nulls if weapon level is invalid\n      let weaponStats;\n      if (this.stats !== undefined) {\n        // Copy all of stats' properties to a new object and initialize them to null\n        weaponStats = Object.keys(this.stats).reduce((obj, stat) => {\n          obj[stat] = null;\n          return obj;\n        }, {});\n      } else {\n        weaponStats = {};\n      }\n\n      this.stats = weaponStats;\n      this.weaponLevel = weaponLevel;\n      this.hasAscended = hasAscended;\n\n      return weaponStats;\n    }\n    // If getStatsAt has not been called before, this.weaponLevel, this.hasAscended, and this.stats will be undefined\n    else if (\n      weaponLevel === this.weaponLevel &&\n      hasAscended === this.hasAscended\n    ) {\n      // Don't recalculate stats if it has been calculated with the same parameters before\n      return this.stats;\n    } else {\n      // Level 1 weapon stats\n      let weaponStats = { ...this.baseStats };\n\n      let weaponStatCurves = getStatCurveAt(weaponLevel);\n\n      // Calculate stats from weapon level\n      Object.entries(this.statCurveMapping).forEach(([stat, curve]) => {\n        let multiplier = weaponStatCurves[curve];\n        weaponStats[stat] *= multiplier;\n      });\n\n      // Calculate stats from weapon ascension\n      let ascensionLevel;\n      // Only 3-star and above weapons can be ascended beyond level 70\n      if (\n        this.rank > 2 &&\n        (weaponLevel > 80 || (weaponLevel == 80 && hasAscended))\n      ) {\n        ascensionLevel = 6;\n      } else if (\n        this.rank > 2 &&\n        (weaponLevel > 70 || (weaponLevel == 70 && hasAscended))\n      ) {\n        ascensionLevel = 5;\n      } else if (weaponLevel > 60 || (weaponLevel == 60 && hasAscended)) {\n        ascensionLevel = 4;\n      } else if (weaponLevel > 50 || (weaponLevel == 50 && hasAscended)) {\n        ascensionLevel = 3;\n      } else if (weaponLevel > 40 || (weaponLevel == 40 && hasAscended)) {\n        ascensionLevel = 2;\n      } else if (weaponLevel > 20 || (weaponLevel == 20 && hasAscended)) {\n        ascensionLevel = 1;\n      } else {\n        ascensionLevel = 0;\n      }\n      let ascensionBonuses = getAscensionBonusAt(\n        ascensionLevel,\n        this.ascensionBonuses\n      );\n\n      if (ascensionBonuses !== undefined) {\n        Object.entries(ascensionBonuses).forEach(([stat, bonus]) => {\n          if (stat in weaponStats) {\n            weaponStats[stat] += bonus;\n          } else {\n            weaponStats[stat] = bonus;\n          }\n        });\n      }\n\n      this.stats = weaponStats;\n      this.weaponLevel = weaponLevel;\n      this.hasAscended = hasAscended;\n\n      return weaponStats;\n    }\n  }\n}\n","import { talentDescMapping, optionMapping } from './Data.js';\n\n// Returns the string to display as the value of a stat\nexport function getStatDisplayValue(value, isPercentage) {\n  if (value != null) {\n    if (isPercentage) {\n      return (value * 100).toFixed(1) + '%';\n    } else {\n      return Math.round(value);\n    }\n  } else {\n    return '-';\n  }\n}\n\n// Returns the string to display as the talent damage\nexport function getDamageDisplayValue(values) {\n  let str = '';\n\n  if (values.length === 0) {\n    return str;\n  }\n\n  if (isNaN(values[0])) {\n    return '-';\n  } else {\n    str += Math.round(values[0]);\n  }\n\n  if (values.length >= 3 && values.every((value) => value === values[0])) {\n    // All elements are the same, simplify to ${damage} x${count}\n    str += ' x ' + values.length;\n  } else {\n    // Less than 3 elements, or elements are different\n    values.slice(1).forEach((value) => {\n      if (isNaN(value)) {\n        return '-';\n      } else {\n        str += ' + ' + Math.round(value);\n      }\n    });\n  }\n\n  return str;\n}\n\n// Returns the display name of a talent option\nexport function getOptionName(id) {\n  return optionMapping[id];\n}\n\n// Returns a Number representing the inputed value of a stat\n// Returns null if the input is not a valid stat value\nexport function convertStatValue(value, isPercentage) {\n  if (isPercentage) {\n    return value / 100;\n  } else {\n    return value;\n  }\n}\n\nexport function getTalentDescription(desc) {\n  return talentDescMapping[desc];\n}\n\n// Returns object containing base stats of character with the passed weapon\n// Base stats = character innate stats + weapon stats\nfunction getBaseStatsAt(\n  weapon,\n  weaponLevel,\n  weaponHasAscended,\n  character,\n  characterLevel,\n  characterHasAscended\n) {\n  let weaponStats;\n  if (weapon !== undefined) {\n    weaponStats = weapon.getStatsAt(weaponLevel, weaponHasAscended);\n  } else {\n    weaponStats = {};\n  }\n\n  let characterStats;\n  if (character !== undefined) {\n    characterStats = character.getInnateStatsAt(\n      characterLevel,\n      characterHasAscended\n    );\n  } else {\n    characterStats = {};\n  }\n\n  // Merges weaponStats and innateStats into a new baseStats object\n  let baseStats = { ...weaponStats };\n  Object.entries(characterStats).map(([stat, value]) => {\n    if (baseStats[stat] === undefined) {\n      baseStats[stat] = value;\n    } else {\n      baseStats[stat] += value;\n    }\n  });\n\n  return baseStats;\n}\n\n// Returns object containing the total stats of the character, weapon and artifacts\n// Ignores any of [character, weapon] that are undefined\nexport function getTotalStatsAt(\n  weapon,\n  weaponLevel,\n  weaponHasAscended,\n  character,\n  characterLevel,\n  characterHasAscended,\n  artifactSetBonuses,\n  artifacts,\n  characterOptions,\n  talentAttackLevel,\n  talentSkillLevel,\n  talentBurstLevel\n) {\n  let baseStats = getBaseStatsAt(\n    weapon,\n    weaponLevel,\n    weaponHasAscended,\n    character,\n    characterLevel,\n    characterHasAscended\n  );\n  let combinedStats = { ...baseStats };\n\n  // Merge base stats and artifact set bonuses\n  if (artifactSetBonuses !== undefined) {\n    Object.entries(artifactSetBonuses).forEach(([stat, value]) => {\n      if (combinedStats[stat] === undefined) {\n        combinedStats[stat] = value;\n      } else {\n        combinedStats[stat] += value;\n      }\n    });\n  }\n\n  // Merge artifact bonuses into separate object\n  let artifactStats = {};\n  artifacts.forEach((artifact) => {\n    Object.entries(artifact.getStats()).forEach(([stat, value]) => {\n      if (artifactStats[stat] === undefined) {\n        artifactStats[stat] = value;\n      } else {\n        artifactStats[stat] += value;\n      }\n    });\n  });\n\n  // Merge base stats and artifact bonuses\n  Object.entries(artifactStats).forEach(([stat, value]) => {\n    if (combinedStats[stat] === undefined) {\n      combinedStats[stat] = value;\n    } else {\n      combinedStats[stat] += value;\n    }\n  });\n\n  // Calculate total stats\n  let totalStats = {};\n\n  totalStats.baseAtk = combinedStats.baseAtk ? combinedStats.baseAtk : 0;\n\n  totalStats.flatAtk =\n    (combinedStats.baseAtk ? combinedStats.baseAtk : 0) *\n      (1 + (combinedStats.atkBonus ? combinedStats.atkBonus : 0)) +\n    (combinedStats.flatAtk ? combinedStats.flatAtk : 0);\n  totalStats.flatDef =\n    (combinedStats.baseDef ? combinedStats.baseDef : 0) *\n      (1 + (combinedStats.defBonus ? combinedStats.defBonus : 0)) +\n    (combinedStats.flatDef ? combinedStats.flatDef : 0);\n  totalStats.flatHp =\n    (combinedStats.baseHp ? combinedStats.baseHp : 0) *\n      (1 + (combinedStats.hpBonus ? combinedStats.hpBonus : 0)) +\n    (combinedStats.flatHp ? combinedStats.flatHp : 0);\n  totalStats.critRate = combinedStats.critRate ? combinedStats.critRate : 0;\n  totalStats.critDmg = combinedStats.critDmg ? combinedStats.critDmg : 0;\n  totalStats.elementalMastery = combinedStats.elementalMastery\n    ? combinedStats.elementalMastery\n    : 0;\n  totalStats.energyRecharge =\n    1 + (combinedStats.energyRecharge ? combinedStats.energyRecharge : 0);\n\n  combinedStats.anemoDmgBonus\n    ? (totalStats.anemoDmgBonus = combinedStats.anemoDmgBonus)\n    : null;\n  combinedStats.cryoDmgBonus\n    ? (totalStats.cryoDmgBonus = combinedStats.cryoDmgBonus)\n    : null;\n  combinedStats.electroDmgBonus\n    ? (totalStats.electroDmgBonus = combinedStats.electroDmgBonus)\n    : null;\n  combinedStats.geoDmgBonus\n    ? (totalStats.geoDmgBonus = combinedStats.geoDmgBonus)\n    : null;\n  combinedStats.hydroDmgBonus\n    ? (totalStats.hydroDmgBonus = combinedStats.hydroDmgBonus)\n    : null;\n  combinedStats.pyroDmgBonus\n    ? (totalStats.pyroDmgBonus = combinedStats.pyroDmgBonus)\n    : null;\n  combinedStats.physicalDmgBonus\n    ? (totalStats.physicalDmgBonus = combinedStats.physicalDmgBonus)\n    : null;\n\n  combinedStats.anemoRes\n    ? (totalStats.anemoRes = combinedStats.anemoRes)\n    : null;\n  combinedStats.cryoRes ? (totalStats.cryoRes = combinedStats.cryoRes) : null;\n  combinedStats.electroRes\n    ? (totalStats.electroRes = combinedStats.electroRes)\n    : null;\n  combinedStats.geoRes ? (totalStats.geoRes = combinedStats.geoRes) : null;\n  combinedStats.hydroRes\n    ? (totalStats.hydroRes = combinedStats.hydroRes)\n    : null;\n  combinedStats.pyroRes ? (totalStats.pyroRes = combinedStats.pyroRes) : null;\n  combinedStats.physicalRes\n    ? (totalStats.physicalRes = combinedStats.physicalRes)\n    : null;\n\n  combinedStats.healingBonus\n    ? (totalStats.healingBonus = combinedStats.healingBonus)\n    : null;\n\n  combinedStats.shieldStrength\n    ? (totalStats.shieldStrength = combinedStats.shieldStrength)\n    : null;\n  combinedStats.dmgBonus\n    ? (totalStats.dmgBonus = combinedStats.dmgBonus)\n    : null;\n  combinedStats.normalDmgBonus\n    ? (totalStats.normalDmgBonus = combinedStats.normalDmgBonus)\n    : null;\n  combinedStats.chargedDmgBonus\n    ? (totalStats.chargedDmgBonus = combinedStats.chargedDmgBonus)\n    : null;\n  combinedStats.plungeDmgBonus\n    ? (totalStats.plungeDmgBonus = combinedStats.plungeDmgBonus)\n    : null;\n  combinedStats.skillDmgBonus\n    ? (totalStats.skillDmgBonus = combinedStats.skillDmgBonus)\n    : null;\n  combinedStats.burstDmgBonus\n    ? (totalStats.burstDmgBonus = combinedStats.burstDmgBonus)\n    : null;\n  combinedStats.chargedCritRate\n    ? (totalStats.chargedCritRate = combinedStats.chargedCritRate)\n    : null;\n\n  // Apply character options (only)\n  characterOptions.forEach((option) => {\n    option.applyOnStats(\n      totalStats,\n      talentAttackLevel,\n      talentSkillLevel,\n      talentBurstLevel\n    );\n  });\n\n  return totalStats;\n}\n\nexport function capitalize(str) {\n  return str[0].toUpperCase().concat(str.slice(1));\n}\n","import * as statUtils from './Stat.js';\n\nexport default class Artifact {\n  mainStat = {\n    stat: 0,\n    rawValue: NaN,\n    value: NaN,\n  };\n\n  subStats = [\n    {\n      stat: 0,\n      rawValue: NaN,\n      value: NaN,\n    },\n    {\n      stat: 0,\n      rawValue: NaN,\n      value: NaN,\n    },\n    {\n      stat: 0,\n      rawValue: NaN,\n      value: NaN,\n    },\n    {\n      stat: 0,\n      rawValue: NaN,\n      value: NaN,\n    },\n  ];\n\n  constructor(type) {\n    this.type = type;\n  }\n\n  // Can be called with one of the two of stat and value (the other will be undefined)\n  setStat(statObj, stat, value, isPercentage = false) {\n    if (stat == undefined && value != undefined) {\n      statObj.rawValue = value;\n      statObj.value = statUtils.convertStatValue(value, isPercentage);\n    } else if (stat != undefined && value == undefined) {\n      statObj.stat = stat;\n      statObj.value = statUtils.convertStatValue(\n        statObj.rawValue,\n        isPercentage\n      );\n    } else if (stat != undefined && value != undefined) {\n      statObj.stat = stat;\n      statObj.rawValue = value;\n      statObj.value = statUtils.convertStatValue(value, isPercentage);\n    }\n  }\n\n  /*\n    setMainStat(stat, value, isPercentage = false) {\n        this.setStat(this.mainStat, stat, value, isPercentage);\n    }\n\n    // Set substat in a spefiic position\n    setSubStat(pos, stat, value, isPercentage = false) {\n        this.setStat(this.subStats[pos], stat, value, isPercentage);\n    }\n    */\n\n  // Returns object containing stat: value mapping, including both main stat and substats\n  getStats() {\n    let stats = {};\n\n    if (this.mainStat.stat != 0) {\n      if (!isNaN(this.mainStat.value)) {\n        stats[this.mainStat.stat] = this.mainStat.value;\n      } else {\n        stats[this.mainStat.stat] = null;\n      }\n    }\n\n    this.subStats.forEach((subStat) => {\n      if (subStat.stat != 0) {\n        if (!isNaN(subStat.value)) {\n          stats[subStat.stat] = subStat.value;\n        } else {\n          stats[subStat.stat] = null;\n        }\n      }\n    });\n\n    return stats;\n  }\n}\n\nexport const mainStatProps = {\n  Flower: ['flatHp'],\n\n  Feather: ['flatAtk'],\n\n  Sands: [\n    'hpBonus',\n    'atkBonus',\n    'defBonus',\n    'elementalMastery',\n    'energyRecharge',\n  ],\n\n  Goblet: [\n    'hpBonus',\n    'atkBonus',\n    'defBonus',\n    'elementalMastery',\n    'anemoDmgBonus',\n    'cryoDmgBonus',\n    'electroDmgBonus',\n    'geoDmgBonus',\n    'hydroDmgBonus',\n    'pyroDmgBonus',\n    'physicalDmgBonus',\n  ],\n\n  Circlet: [\n    'hpBonus',\n    'atkBonus',\n    'defBonus',\n    'elementalMastery',\n    'critRate',\n    'critDmg',\n    'healingBonus',\n  ],\n};\n\nexport const subStatProps = [\n  'flatHp',\n  'flatAtk',\n  'flatDef',\n  'hpBonus',\n  'atkBonus',\n  'defBonus',\n  'elementalMastery',\n  'energyRecharge',\n  'critRate',\n  'critDmg',\n];\n","// Placeholder function\nexport function defaultSetBonus() {\n  return [];\n}\n\nexport function Relic_ExtraAtkCritUp(params) {\n  return [\n    {\n      stat: 'chargedCritRate',\n      value: params[0],\n    },\n  ];\n}\n\nexport function Relic_GiantKiller() {\n  // Handled through Options\n  return defaultSetBonus();\n}\n\nexport function Relic_AbsorbTeamElemResist() {\n  // Not yet implemented. Low priority.\n  // Requires info about team composition\n  return defaultSetBonus();\n}\n\nexport function Relic_AllElemResistUp(params) {\n  const elements = ['anemo', 'cryo', 'electro', 'geo', 'hydro', 'pyro'];\n  return elements.map((element) => {\n    return {\n      stat: `${element}Res`,\n      value: params[0],\n    };\n  });\n}\n\nexport function Relic_ElemDmgEnhanceElemResist() {\n  // Not yet implemented. Low priority.\n  // Probably can be implemented with a dropdown option for prev received elem dmg\n  return defaultSetBonus();\n}\n\nexport function Relic_LowHPGainExtraCritRate() {\n  // Handled through Options\n  return defaultSetBonus();\n}\n\nexport function Relic_AtkAndExtraAtkUp(params) {\n  return [\n    {\n      stat: 'normalDmgBonus',\n      value: params[0],\n    },\n    {\n      stat: 'chargedDmgBonus',\n      value: params[0],\n    },\n  ];\n}\n\nexport function Relic_SkillEnhanceNormalAtkAndExtraAtk() {\n  // Handled through Options\n  return defaultSetBonus();\n}\n\nexport function Relic_ReactionGainExtraElemMasteryForTeam() {\n  // Handled through Options\n  return defaultSetBonus();\n}\n\nexport function Relic_SkillDamageUp(params) {\n  return [\n    {\n      stat: 'skillDmgBonus',\n      value: params[0],\n    },\n  ];\n}\n\nexport function Relic_KillingRefreshSkill() {\n  // Not implemented. CD reduction effect.\n  return defaultSetBonus();\n}\n\nexport function Relic_UltGainEnergyForTeam() {\n  // Not implemented. Energy effect.\n  return defaultSetBonus();\n}\n\nexport function Relic_ChestHealSelf() {\n  // Not implemented. Healing effect when opening chests.\n  return defaultSetBonus();\n}\n\nexport function Relic_CoinHealSelf() {\n  // Not implemented. Healing effect when getting Mora.\n  return defaultSetBonus();\n}\n\nexport function Relic_RestoreEnergyGainExtraEnergyForTeam() {\n  // Not implemented. Energy effect.\n  return defaultSetBonus();\n}\n\nexport function Relic_UltHealSelf() {\n  // Not implemented. Healing effect when burst.\n  return defaultSetBonus();\n}\n\nexport function Relic_CriticUpAgainstIceAndFrozen() {\n  // Handled through Options\n  return defaultSetBonus();\n}\n\nexport function Relic_DamageUpAgainstElectric() {\n  // Handled through Options\n  return defaultSetBonus();\n}\n\nexport function Relic_DamageUpAgainstFireAndBurning() {\n  // Handled through Options\n  return defaultSetBonus();\n}\n\nexport function Relic_SkillEnhanceCured() {\n  // Handled through Options\n  return defaultSetBonus();\n}\n\nexport function Relic_MeleeAttackUp(params) {\n  // Only for sword, polearm, claymore characters\n  // Did not make this an Option because this would likely not want to be disabled\n  return [\n    {\n      stat: 'normalDmgBonus',\n      value: params[0],\n    },\n  ];\n}\n\nexport function Relic_ReactionWindEnhance() {\n  // Swirl Dmg up not yet implemented. Medium priority.\n  // Requires reaction dmg to be implemented first.\n\n  // Elemental Res shred implemented through Options\n  return defaultSetBonus();\n}\n","import { getArtifactSetData, getArtifactSetBonusData } from './Data.js';\nimport * as extraBonuses from './ArtifactSetBonus.js';\nimport { getOptions } from './option/';\n\nexport default class ArtifactSet {\n  constructor(id) {\n    this.id = id;\n\n    const data = getArtifactSetData(id);\n    this.name = data.name;\n    this.bonusThresholds = data.bonusThresholds;\n\n    this.setBonuses = getArtifactSetBonusData(id);\n  }\n\n  getSetBonusesAt(pieces) {\n    return this.bonusThresholds\n      .filter((threshold) => pieces >= threshold)\n      .map((threshold) => this.setBonuses[threshold]);\n  }\n\n  getStatsAt(pieces, options) {\n    let stats = {};\n\n    let setBonuses = this.getSetBonusesAt(pieces);\n    setBonuses.forEach((setBonus) => {\n      // Normal stat bonuses\n      setBonus.bonuses.forEach((statBonus) => {\n        if (stats[statBonus.stat] !== undefined) {\n          stats[statBonus.stat] += statBonus.value;\n        } else {\n          stats[statBonus.stat] = statBonus.value;\n        }\n      });\n\n      // Special bonuses, has to be handled individually\n      let extraBonus = setBonus.bonusExtra;\n      if (extraBonus.type !== '') {\n        let bonusFn = extraBonuses[extraBonus.type];\n        if (bonusFn === undefined) {\n          bonusFn = extraBonuses['defaultSetBonus'];\n        }\n\n        let params = extraBonus.params;\n\n        let statBonuses = bonusFn(params);\n\n        statBonuses.forEach((statBonus) => {\n          if (stats[statBonus.stat] !== undefined) {\n            stats[statBonus.stat] += statBonus.value;\n          } else {\n            stats[statBonus.stat] = statBonus.value;\n          }\n        });\n      }\n    });\n\n    options.forEach((option) => {\n      option.applyOnStats(stats);\n    });\n\n    return stats;\n  }\n\n  getOptions(pieces) {\n    const options = getOptions('artifactSet', this.id);\n    return options.filter(({ threshold }) => pieces >= threshold);\n  }\n}\n","import Resistance from './Resistance';\n\nexport default class DamageModifier {\n  constructor({\n    characterLevel,\n    enemyLevel = 1,\n    enemyDefReduction = 0,\n    enemyRes = new Resistance({}),\n    enemyResReduction = new Resistance({}),\n    modifiers = {},\n    critType = 'none',\n    flatDmg = 0,\n    reaction = 'none',\n    talentAttackLevel,\n    talentSkillLevel,\n    talentBurstLevel,\n    options = [],\n  }) {\n    this.characterLevel = characterLevel;\n    this.enemyLevel = enemyLevel;\n    this.enemyDefReduction = enemyDefReduction;\n    this.enemyRes = enemyRes;\n    this.enemyResReduction = enemyResReduction;\n    this.modifiers = modifiers;\n    this.critType = critType;\n    this.flatDmg = flatDmg;\n    this.reaction = reaction;\n    this.talentAttackLevel = talentAttackLevel;\n    this.talentSkillLevel = talentSkillLevel;\n    this.talentBurstLevel = talentBurstLevel;\n\n    options.forEach((option) => {\n      option.applyOnModifier(this);\n    });\n  }\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'stretch',\n\n    fontSize: 14,\n\n    height: '100%',\n\n    backgroundColor: '#fff',\n  },\n\n  inputColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    padding: '1%',\n\n    borderRightWidth: 1,\n\n    backgroundColor: '#ccc',\n  },\n\n  inputRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n\n    marginVertical: '0.25em',\n  },\n\n  levelInput: {\n    width: '2em',\n  },\n\n  statInput: {\n    width: '3em',\n  },\n\n  buttonGroupContainer: {\n    height: 'initial',\n\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: 0,\n    marginRight: 0,\n\n    borderRadius: 2,\n    borderColor: '#000',\n\n    backgroundColor: '#ccc',\n  },\n\n  buttonGroupButtonContainer: {\n    borderRightColor: '#000',\n    width: '4em',\n  },\n\n  buttonGroupText: {\n    fontSize: '1em',\n    fontWeight: 400,\n    color: '#000',\n  },\n\n  buttonGroupSelectedButton: {\n    backgroundColor: '#eee',\n  },\n\n  buttonGroupSelectedText: {\n    color: '#000',\n  },\n\n  resultColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    borderRightWidth: 1,\n\n    backgroundColor: '#eee',\n  },\n\n  resultBlockNoBorder: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    padding: '0.8em',\n  },\n\n  resultBlock: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    padding: '0.8em',\n    borderBottomWidth: 1,\n  },\n\n  artifactBlockNoBorder: {\n    display: 'flex',\n    flexDirection: 'column',\n    paddingTop: '0.5em',\n    paddingBottom: '0.7em',\n  },\n\n  artifactBlock: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    paddingTop: '0.5em',\n    paddingBottom: '0.7em',\n\n    borderStyle: 'dashed',\n    borderBottomWidth: 1,\n  },\n\n  characterImage: {\n    marginVertical: '0.25em',\n  },\n\n  titleText: {\n    fontSize: '1.5em',\n    fontWeight: '200',\n\n    marginVertical: '0.17em',\n  },\n\n  artifactType: {\n    fontSize: '1.2em',\n    fontWeight: '200',\n\n    marginVertical: '0.21em',\n  },\n\n  artifactStatType: {\n    marginVertical: '0.25em',\n  },\n\n  resultText: {\n    marginVertical: '0.25em',\n  },\n\n  fillerColumn: {\n    flexGrow: 1,\n\n    backgroundColor: '#eee',\n  },\n});\n","import { Picker } from '@react-native-picker/picker';\nimport Checkbox from 'expo-checkbox';\nimport { ButtonGroup } from 'react-native-elements';\nimport React, { Component } from 'react';\nimport { FlatList, Image, Text, TextInput, View } from 'react-native';\n\nimport Character from './js/Character.js';\nimport Weapon from './js/Weapon.js';\nimport Artifact, { mainStatProps, subStatProps } from './js/Artifact.js';\nimport ArtifactSet from './js/ArtifactSet.js';\nimport DamageModifier from './js/DamageModifer.js';\nimport Resistance from './js/Resistance.js';\nimport * as statUtils from './js/Stat.js';\nimport * as data from './js/Data.js';\n\nimport styles from './js/Styles.js';\n\nexport default class App extends Component {\n  // Constants\n  elements = ['anemo', 'cryo', 'electro', 'geo', 'hydro', 'pyro', 'physical'];\n\n  // Class properties\n  character;\n  weapon;\n  artifactSetStats;\n  artifactFlower;\n  artifactFeather;\n  artifactSands;\n  artifactGoblet;\n  artifactCirclet;\n\n  constructor() {\n    super();\n\n    // Initialize sorted list of characters and weapons\n    this.characters = data.getSortedCharacterList();\n    this.weapons = data.getSortedWeaponList();\n    this.artifacts = data.getSortedArtifactSetList();\n\n    this.artifactFlower = new Artifact('Flower');\n    this.artifactFeather = new Artifact('Feather');\n    this.artifactSands = new Artifact('Sands');\n    this.artifactGoblet = new Artifact('Goblet');\n    this.artifactCirclet = new Artifact('Circlet');\n\n    this.artifactSets = [0, 0, 0];\n\n    this.state = {\n      characterId: undefined,\n      characterLevel: 1,\n      isCharacterAscended: false,\n\n      weaponId: undefined,\n      weaponLevel: 1,\n      isWeaponAscended: false,\n\n      artifactSet1Id: undefined,\n      artifactSet1Pc: undefined,\n      artifactSet2Id: undefined,\n      artifactSet2Pc: undefined,\n      artifactSet3Id: undefined,\n      artifactSet3Pc: undefined,\n\n      talentAttackLevel: 1,\n      talentSkillLevel: 1,\n      talentBurstLevel: 1,\n\n      critType: 'none',\n      enemyLevel: 1,\n      enemyRes: new Resistance({}),\n\n      characterStats: undefined,\n      weaponStats: undefined,\n      totalStats: undefined,\n\n      talentAttackDamage: undefined,\n      talentSkillDamage: undefined,\n      talentBurstDamage: undefined,\n\n      characterOptions: [],\n      artifactSet1Options: [],\n      artifactSet2Options: [],\n      artifactSet3Options: [],\n    };\n  }\n\n  renderInputColumn = () => {\n    return (\n      <View>\n        {this.renderCharacterList()}\n\n        <View style={styles.inputRow}>\n          <Text>Level: </Text>\n          <TextInput\n            style={styles.levelInput}\n            defaultValue={this.state.characterLevel}\n            onChangeText={(text) => {\n              this.setState(\n                { characterLevel: parseInt(text) },\n                this.setCharacterState\n              );\n            }}\n          />\n        </View>\n\n        <View style={styles.inputRow}>\n          <Text>Ascended? </Text>\n          <Checkbox\n            onValueChange={(value) =>\n              this.setState(\n                { isCharacterAscended: value },\n                this.setCharacterState\n              )\n            }\n            value={this.state.isCharacterAscended}\n          />\n        </View>\n\n        <Text> </Text>\n\n        {this.renderWeaponList()}\n\n        <View style={styles.inputRow}>\n          <Text>Level: </Text>\n          <TextInput\n            style={styles.levelInput}\n            defaultValue={this.state.weaponLevel}\n            onChangeText={(text) => {\n              this.setState(\n                { weaponLevel: parseInt(text) },\n                this.setWeaponState\n              );\n            }}\n          />\n        </View>\n\n        <View style={styles.inputRow}>\n          <Text>Ascended? </Text>\n          <Checkbox\n            onValueChange={(value) =>\n              this.setState({ isWeaponAscended: value }, this.setWeaponState)\n            }\n            value={this.state.isWeaponAscended}\n          />\n        </View>\n\n        <Text> </Text>\n\n        <Text>Artifact Sets</Text>\n        {this.artifactSets.map((_, i) => this.renderArtifactSetInput(i))}\n\n        <Text> </Text>\n\n        <View style={styles.inputRow}>\n          <Text>Attack Talent Level: </Text>\n          <TextInput\n            style={styles.levelInput}\n            defaultValue={this.state.talentAttackLevel}\n            onChangeText={(text) => {\n              this.setState(\n                { talentAttackLevel: parseInt(text) },\n                this.setStatTalentState\n              );\n            }}\n          />\n        </View>\n\n        <View style={styles.inputRow}>\n          <Text>Skill Talent Level: </Text>\n          <TextInput\n            style={styles.levelInput}\n            defaultValue={this.state.talentSkillLevel}\n            onChangeText={(text) => {\n              this.setState(\n                { talentSkillLevel: parseInt(text) },\n                this.setStatTalentState\n              );\n            }}\n          />\n        </View>\n\n        <View style={styles.inputRow}>\n          <Text>Burst Talent Level: </Text>\n          <TextInput\n            style={styles.levelInput}\n            defaultValue={this.state.talentBurstLevel}\n            onChangeText={(text) => {\n              this.setState(\n                { talentBurstLevel: parseInt(text) },\n                this.setStatTalentState\n              );\n            }}\n          />\n        </View>\n\n        <Text> </Text>\n\n        <View style={styles.inputRow}>\n          <Text>Crit: </Text>\n          <ButtonGroup\n            buttons={['None', 'Crit', 'Average']}\n            containerStyle={styles.buttonGroupContainer}\n            buttonContainerStyle={styles.buttonGroupButtonContainer}\n            textStyle={styles.buttonGroupText}\n            selectedButtonStyle={styles.buttonGroupSelectedButton}\n            selectedTextStyle={styles.buttonGroupSelectedText}\n            selectedIndex={(() => {\n              if (this.state.critType === 'crit') {\n                return 1;\n              } else if (this.state.critType === 'average') {\n                return 2;\n              } else {\n                return 0;\n              }\n            })()}\n            onPress={(selectedIndex) => {\n              if (selectedIndex === 1) {\n                this.setState({ critType: 'crit' }, this.setAllTalentState);\n              } else if (selectedIndex === 2) {\n                this.setState({ critType: 'average' }, this.setAllTalentState);\n              } else {\n                this.setState({ critType: 'none' }, this.setAllTalentState);\n              }\n            }}\n          />\n        </View>\n\n        <View style={styles.inputRow}>\n          <Text>Enemy Level: </Text>\n          <TextInput\n            style={styles.levelInput}\n            defaultValue={this.state.enemyLevel}\n            onChangeText={(text) => {\n              this.setState(\n                { enemyLevel: parseInt(text) },\n                this.setAllTalentState\n              );\n            }}\n          />\n        </View>\n\n        {this.elements.map((element) => {\n          return (\n            <View style={styles.inputRow} key={element}>\n              <Text>Enemy {statUtils.capitalize(element)} RES: </Text>\n              <TextInput\n                style={styles.levelInput}\n                defaultValue={this.state.enemyRes[element]}\n                onChangeText={(text) => {\n                  this.state.enemyRes.set(element, parseFloat(text) / 100);\n                  let enemyRes = this.state.enemyRes;\n                  this.setState({ enemyRes }, this.setAllTalentState);\n                }}\n              />\n              <Text>%</Text>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderCharacterList = () => {\n    return (\n      <View style={styles.inputRow}>\n        <Text>Character: </Text>\n        <Picker\n          style={styles.characterSelect}\n          selectedValue={this.state.characterId}\n          onValueChange={(value, _) => {\n            if (value != 0) {\n              this.character = new Character(value);\n              this.setState(\n                {\n                  characterId: value,\n                  characterOptions: this.character.getOptions(),\n                },\n                this.setCharacterState\n              );\n            }\n          }}\n        >\n          <Picker.Item label='' value={0} />\n          {this.characters.map((id) => (\n            <Picker.Item\n              label={data.getCharacterData(id).name}\n              value={id}\n              key={id}\n            />\n          ))}\n        </Picker>\n      </View>\n    );\n  };\n\n  renderWeaponList = () => {\n    return (\n      <View style={styles.inputRow}>\n        <Text>Weapon: </Text>\n        <Picker\n          style={styles.characterSelect}\n          selectedValue={this.state.weaponId}\n          onValueChange={(value, _) => {\n            if (value != 0) {\n              this.weapon = new Weapon(value);\n              this.setState({ weaponId: value }, this.setWeaponState);\n            }\n          }}\n        >\n          <Picker.Item label='' value={0} />\n          {this.weapons.map((id) => (\n            <Picker.Item\n              label={data.getWeaponData(id).name}\n              value={id}\n              key={id}\n            />\n          ))}\n        </Picker>\n      </View>\n    );\n  };\n\n  renderArtifactSetInput = (i) => {\n    return (\n      <View style={styles.inputRow} key={i}>\n        <Picker\n          style={styles.characterSelect}\n          selectedValue={this.state[`artifactSet${i + 1}Id`]}\n          onValueChange={(value, _) => {\n            if (value != 0) {\n              this.artifactSets[i] = new ArtifactSet(value);\n\n              // Update options too\n              let options = this.artifactSets[i].getOptions(\n                this.state[`artifactSet${i + 1}Pc`]\n              );\n\n              this.setState(\n                {\n                  [`artifactSet${i + 1}Id`]: value,\n                  [`artifactSet${i + 1}Options`]: options,\n                },\n                this.setArtifactSetState\n              );\n            }\n          }}\n        >\n          <Picker.Item label='' value={0} />\n          {this.artifacts.map((id) => (\n            <Picker.Item\n              label={data.getArtifactSetData(id).name}\n              value={id}\n              key={id}\n            />\n          ))}\n        </Picker>\n\n        <Text> : </Text>\n\n        <TextInput\n          style={styles.levelInput}\n          defaultValue={this.state[`artifactSet${i + 1}Pc`]}\n          onChangeText={(text) => {\n            const pieces = parseInt(text);\n\n            let options = [];\n            if (this.state[`artifactSet${i + 1}Id`] !== undefined) {\n              // Update options too\n              options = [...this.state[`artifactSet${i + 1}Options`]];\n              if (\n                !this.state[`artifactSet${i + 1}Pc`] ||\n                pieces > this.state[`artifactSet${i + 1}Pc`]\n              ) {\n                // Add any additional bonuses that have not been added previously\n                options.push(\n                  ...this.artifactSets[i]\n                    .getOptions(parseInt(text))\n                    .filter(\n                      ({ threshold }) =>\n                        threshold > (this.state[`artifactSet${i + 1}Pc`] || 0)\n                    )\n                );\n              } else {\n                options = options.filter(({ threshold }) => pieces > threshold);\n              }\n            }\n\n            this.setState(\n              {\n                [`artifactSet${i + 1}Pc`]: parseInt(text),\n                [`artifactSet${i + 1}Options`]: options,\n              },\n              this.setArtifactSetState\n            );\n          }}\n        />\n\n        <Text>pc</Text>\n      </View>\n    );\n  };\n\n  renderCharacterImage = () => {\n    let imageUrl = `https://rerollcdn.com/GENSHIN/Characters/${this.character.name}.png`;\n    return (\n      <Image\n        style={styles.characterImage}\n        source={{ uri: imageUrl, width: 70, height: 70 }}\n      />\n    );\n  };\n\n  getAllOptions = () => {\n    return [\n      ...this.state.characterOptions,\n      ...this.state.artifactSet1Options,\n      ...this.state.artifactSet2Options,\n      ...this.state.artifactSet3Options,\n    ];\n  };\n\n  getDamageModifier = () => {\n    let modifier = new DamageModifier({\n      characterLevel: this.state.characterLevel,\n      critType: this.state.critType,\n      enemyLevel: this.state.enemyLevel,\n      enemyRes: this.state.enemyRes,\n      talentAttackLevel: this.state.talentAttackLevel,\n      talentSkillLevel: this.state.talentSkillLevel,\n      talentBurstLevel: this.state.talentBurstLevel,\n      options: this.getAllOptions(),\n    });\n\n    return modifier;\n  };\n\n  setCharacterState = () => {\n    if (this.character !== undefined) {\n      let stats = this.character.getInnateStatsAt(\n        this.state.characterLevel,\n        this.state.isCharacterAscended\n      );\n      let totalStats = this.getTotalStats();\n      let modifier = this.getDamageModifier();\n\n      let talentAttackDamage = this.character.getTalentDamageAt({\n        type: 'Attack',\n        talentLevel: this.state.talentAttackLevel,\n        totalStats,\n        modifier,\n      });\n\n      let talentSkillDamage = this.character.getTalentDamageAt({\n        type: 'Skill',\n        talentLevel: this.state.talentSkillLevel,\n        totalStats,\n        modifier,\n      });\n\n      let talentBurstDamage = this.character.getTalentDamageAt({\n        type: 'Burst',\n        talentLevel: this.state.talentBurstLevel,\n        totalStats,\n        modifier,\n      });\n\n      this.setState({\n        characterStats: stats,\n        totalStats: totalStats,\n        talentAttackDamage: talentAttackDamage,\n        talentSkillDamage: talentSkillDamage,\n        talentBurstDamage: talentBurstDamage,\n      });\n    }\n  };\n\n  setWeaponState = () => {\n    if (this.weapon !== undefined) {\n      let stats = this.weapon.getStatsAt(\n        this.state.weaponLevel,\n        this.state.isweaponAscended\n      );\n      let totalStats = this.getTotalStats();\n      let modifier = this.getDamageModifier();\n\n      let talentAttackDamage, talentSkillDamage, talentBurstDamage;\n      if (this.character !== undefined) {\n        talentAttackDamage = this.character.getTalentDamageAt({\n          type: 'Attack',\n          talentLevel: this.state.talentAttackLevel,\n          totalStats,\n          modifier,\n        });\n\n        talentSkillDamage = this.character.getTalentDamageAt({\n          type: 'Skill',\n          talentLevel: this.state.talentSkillLevel,\n          totalStats,\n          modifier,\n        });\n\n        talentBurstDamage = this.character.getTalentDamageAt({\n          type: 'Burst',\n          talentLevel: this.state.talentBurstLevel,\n          totalStats,\n          modifier,\n        });\n      }\n\n      this.setState({\n        weaponStats: stats,\n        totalStats: totalStats,\n        talentAttackDamage: talentAttackDamage,\n        talentSkillDamage: talentSkillDamage,\n        talentBurstDamage: talentBurstDamage,\n      });\n    }\n  };\n\n  setArtifactSetState = () => {\n    if (!this.artifactSets.every((value) => value === 0)) {\n      this.artifactSetStats = this.artifactSets.reduce((acc, set, i) => {\n        if (set !== 0) {\n          let setStats = set.getStatsAt(\n            this.state[`artifactSet${i + 1}Pc`],\n            this.state[`artifactSet${i + 1}Options`]\n          );\n          Object.entries(setStats).forEach(([stat, value]) => {\n            if (acc[stat] !== undefined) {\n              acc[stat] += value;\n            } else {\n              acc[stat] = value;\n            }\n          });\n          return acc;\n        } else {\n          return acc;\n        }\n      }, {});\n\n      this.setStatTalentState();\n    }\n  };\n\n  setStatTalentState = (type) => {\n    let totalStats = this.getTotalStats();\n    let modifier = this.getDamageModifier();\n\n    let talentAttackDamage, talentSkillDamage, talentBurstDamage;\n    if (this.character !== undefined) {\n      talentAttackDamage = this.character.getTalentDamageAt({\n        type: 'Attack',\n        talentLevel: this.state.talentAttackLevel,\n        totalStats,\n        modifier,\n      });\n\n      talentSkillDamage = this.character.getTalentDamageAt({\n        type: 'Skill',\n        talentLevel: this.state.talentSkillLevel,\n        totalStats,\n        modifier,\n      });\n\n      talentBurstDamage = this.character.getTalentDamageAt({\n        type: 'Burst',\n        talentLevel: this.state.talentBurstLevel,\n        totalStats,\n        modifier,\n      });\n    }\n\n    this.setState({\n      totalStats: totalStats,\n      talentAttackDamage: talentAttackDamage,\n      talentSkillDamage: talentSkillDamage,\n      talentBurstDamage: talentBurstDamage,\n    });\n  };\n\n  setTalentState = (type) => {\n    if (this.character !== undefined) {\n      let talentDmg = this.character.getTalentDamageAt({\n        type,\n        talentLevel: this.state[`talent${type}Level`],\n        totalStats: this.state.totalStats,\n        modifier: this.getDamageModifier(),\n      });\n\n      this.setState({ [`talent${type}Damage`]: talentDmg });\n    }\n  };\n\n  // Not used in setCharacterState, setWeaponState, or setArtifactState to reduce number of setState calls\n  // Does not call setTalentState to reduce number of setState calls\n  setAllTalentState = () => {\n    if (this.character !== undefined) {\n      let talentAttackDamage = this.character.getTalentDamageAt({\n        type: 'Attack',\n        talentLevel: this.state.talentAttackLevel,\n        totalStats: this.state.totalStats,\n        modifier: this.getDamageModifier(),\n      });\n\n      let talentSkillDamage = this.character.getTalentDamageAt({\n        type: 'Skill',\n        talentLevel: this.state.talentSkillLevel,\n        totalStats: this.state.totalStats,\n        modifier: this.getDamageModifier(),\n      });\n\n      let talentBurstDamage = this.character.getTalentDamageAt({\n        type: 'Burst',\n        talentLevel: this.state.talentBurstLevel,\n        totalStats: this.state.totalStats,\n        modifier: this.getDamageModifier(),\n      });\n\n      this.setState({\n        talentAttackDamage: talentAttackDamage,\n        talentSkillDamage: talentSkillDamage,\n        talentBurstDamage: talentBurstDamage,\n      });\n    }\n  };\n\n  getTotalStats = () => {\n    let artifacts = [\n      this.artifactFlower,\n      this.artifactFeather,\n      this.artifactSands,\n      this.artifactGoblet,\n      this.artifactCirclet,\n    ];\n\n    let stats = statUtils.getTotalStatsAt(\n      this.weapon,\n      this.state.weaponLevel,\n      this.state.isWeaponAscended,\n      this.character,\n      this.state.characterLevel,\n      this.state.isCharacterAscended,\n      this.artifactSetStats,\n      artifacts,\n      this.state.characterOptions,\n      this.state.talentAttackLevel,\n      this.state.talentSkillLevel,\n      this.state.talentBurstLevel\n    );\n\n    return stats;\n  };\n\n  renderCharacterStats = () => {\n    return this.character ? (\n      <View style={styles.resultBlock}>\n        <Text style={styles.titleText}>Character</Text>\n        {this.renderCharacterImage()}\n        <Text style={styles.resultText}>\n          {this.character ? this.character.name : ''}\n        </Text>\n        {this.state.characterStats\n          ? Object.entries(this.state.characterStats).map(([stat, value]) => {\n              return (\n                <Text style={styles.resultText} key={stat}>\n                  {data.propMapping[stat].name}:{' '}\n                  {statUtils.getStatDisplayValue(\n                    value,\n                    data.propMapping[stat].isPercentage\n                  )}\n                </Text>\n              );\n            })\n          : null}\n      </View>\n    ) : null;\n  };\n\n  renderWeaponStats = () => {\n    return this.weapon ? (\n      <View style={styles.resultBlock}>\n        <Text style={styles.titleText}>Weapon</Text>\n        <Text style={styles.resultText}>\n          {this.weapon ? this.weapon.name : ''}\n        </Text>\n        {this.state.weaponStats\n          ? Object.entries(this.state.weaponStats).map(([stat, value]) => {\n              return (\n                <Text style={styles.resultText} key={stat}>\n                  {data.propMapping[stat].name}:{' '}\n                  {statUtils.getStatDisplayValue(\n                    value,\n                    data.propMapping[stat].isPercentage\n                  )}\n                </Text>\n              );\n            })\n          : null}\n      </View>\n    ) : null;\n  };\n\n  renderArtifactSetStats = () => {\n    let stats = this.artifactSetStats;\n\n    return stats ? (\n      <View style={styles.resultBlock}>\n        <Text style={styles.titleText}>Artifact Sets</Text>\n        {Object.entries(stats).map(([stat, value]) => {\n          return (\n            <Text style={styles.resultText} key={stat}>\n              {data.propMapping[stat].name}:{' '}\n              {statUtils.getStatDisplayValue(\n                value,\n                data.propMapping[stat].isPercentage\n              )}\n            </Text>\n          );\n        })}\n      </View>\n    ) : null;\n  };\n\n  renderArtifactMainStat = (type) => {\n    return (\n      <View style={styles.inputRow}>\n        <Picker\n          selectedValue={this['artifact' + type].mainStat.stat}\n          onValueChange={(stat, _) => {\n            if (stat != 0) {\n              let mainStat = this['artifact' + type].mainStat;\n              this['artifact' + type].setStat(\n                mainStat,\n                stat,\n                undefined,\n                data.propMapping[stat].isPercentage\n              );\n              // Update total stats\n              this.setStatTalentState(type);\n            }\n          }}\n        >\n          <Picker.Item label='' value={0} />\n          {mainStatProps[type].map((prop) => (\n            <Picker.Item\n              label={data.propMapping[prop].name}\n              value={prop}\n              key={prop}\n            />\n          ))}\n        </Picker>\n\n        <Text> : </Text>\n\n        <TextInput\n          style={styles.statInput}\n          onChangeText={(text) => {\n            let mainStat = this['artifact' + type].mainStat;\n            if (mainStat.stat) {\n              this['artifact' + type].setStat(\n                mainStat,\n                undefined,\n                parseFloat(text),\n                data.propMapping[mainStat.stat].isPercentage\n              );\n            } else {\n              // If stat type is not yet set\n              this['artifact' + type].setStat(\n                mainStat,\n                undefined,\n                parseFloat(text),\n                false\n              );\n            }\n\n            // Update total stats\n            this.setStatTalentState(type);\n          }}\n        />\n      </View>\n    );\n  };\n\n  renderArtifactSubStats = (type) => {\n    return (\n      <View>\n        {this['artifact' + type].subStats.map((subStat, index) => {\n          return (\n            <View style={styles.inputRow} key={index}>\n              <Picker\n                selectedValue={subStat.stat}\n                onValueChange={(stat, _) => {\n                  if (stat != 0) {\n                    this['artifact' + type].setStat(\n                      subStat,\n                      stat,\n                      undefined,\n                      data.propMapping[stat].isPercentage\n                    );\n                    // Update total stats\n                    this.setStatTalentState(type);\n                  }\n                }}\n              >\n                <Picker.Item label='' value={0} />\n                {subStatProps.map((prop) => (\n                  <Picker.Item\n                    label={data.propMapping[prop].name}\n                    value={prop}\n                    key={prop}\n                  />\n                ))}\n              </Picker>\n\n              <Text> : </Text>\n\n              <TextInput\n                style={styles.statInput}\n                onChangeText={(text) => {\n                  let stat = subStat.stat;\n                  if (stat) {\n                    this['artifact' + type].setStat(\n                      subStat,\n                      undefined,\n                      parseFloat(text),\n                      data.propMapping[stat].isPercentage\n                    );\n                  } else {\n                    // If stat type is not yet set\n                    this['artifact' + type].setStat(\n                      subStat,\n                      undefined,\n                      parseFloat(text),\n                      false\n                    );\n                  }\n                  // Update total stats\n                  this.setStatTalentState(type);\n                }}\n              />\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderArtifactStat = (type, isLast = false) => {\n    return (\n      <View\n        style={isLast ? styles.artifactBlockNoBorder : styles.artifactBlock}\n      >\n        <Text style={styles.artifactType}>{type}</Text>\n\n        <Text style={styles.artifactStatType}>Main Stat</Text>\n        {this.renderArtifactMainStat(type)}\n\n        <Text style={styles.artifactStatType}>Substats</Text>\n        {this.renderArtifactSubStats(type)}\n      </View>\n    );\n  };\n\n  renderAllArtifactStats = () => {\n    return (\n      <View style={styles.resultBlockNoBorder}>\n        <Text style={styles.titleText}>Artifacts</Text>\n        {this.renderArtifactStat('Flower')}\n        {this.renderArtifactStat('Feather')}\n        {this.renderArtifactStat('Sands')}\n        {this.renderArtifactStat('Goblet')}\n        {this.renderArtifactStat('Circlet', true)}\n      </View>\n    );\n  };\n\n  renderTotalStats = () => {\n    return (\n      <View style={styles.resultBlockNoBorder}>\n        <Text style={styles.titleText}>Stat Total</Text>\n        {this.state.totalStats\n          ? Object.entries(this.state.totalStats).map(([stat, value]) => {\n              if (stat != 'baseAtk') {\n                return (\n                  <Text style={styles.resultText} key={stat}>\n                    {data.propMapping[stat].name}:{' '}\n                    {statUtils.getStatDisplayValue(\n                      value,\n                      data.propMapping[stat].isPercentage\n                    )}\n                  </Text>\n                );\n              } else {\n                return null;\n              }\n            })\n          : null}\n      </View>\n    );\n  };\n\n  renderTalentDamage = (type, isLast = false) => {\n    return (\n      <View\n        style={isLast ? styles.artifactBlockNoBorder : styles.artifactBlock}\n      >\n        <Text style={styles.artifactType}>{type}</Text>\n        {this.state['talent' + type + 'Damage']\n          ? this.state['talent' + type + 'Damage'].map(\n              ({ description, damage }, index) => {\n                return (\n                  <Text style={styles.resultText} key={index}>\n                    {statUtils.getTalentDescription(description)}:{' '}\n                    {statUtils.getDamageDisplayValue(damage)}\n                  </Text>\n                );\n              }\n            )\n          : null}\n      </View>\n    );\n  };\n\n  renderOptions = (options, onValueChange = (index) => (value) => {}) => {\n    return (\n      <FlatList\n        data={options}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item, index }) => {\n          switch (item.type) {\n            case 'boolean':\n              return (\n                <View style={styles.inputRow}>\n                  <Text>{statUtils.getOptionName(item.id)}: </Text>\n                  <Checkbox\n                    onValueChange={onValueChange(index)}\n                    value={item.value}\n                  />\n                </View>\n              );\n\n            case 'number':\n              return (\n                <View style={styles.inputRow}>\n                  <Text>{statUtils.getOptionName(item.id)}: </Text>\n                  <TextInput\n                    style={styles.levelInput}\n                    onChangeText={onValueChange(index)}\n                    value={item.value}\n                  />\n                </View>\n              );\n\n            case 'picker':\n              return (\n                <View style={styles.inputRow}>\n                  <Text>{statUtils.getOptionName(item.id)}: </Text>\n                  <Picker\n                    style={styles.characterSelect}\n                    selectedValue={item.value}\n                    onValueChange={onValueChange(index)}\n                  >\n                    {item.choices.map((choice) => (\n                      <Picker.Item\n                        label={statUtils.capitalize(choice)}\n                        value={choice}\n                        key={choice}\n                      />\n                    ))}\n                  </Picker>\n                </View>\n              );\n\n            default:\n              return null;\n          }\n        }}\n      />\n    );\n  };\n\n  renderCharacterOptions = () =>\n    this.renderOptions(this.state.characterOptions, (index) => (value) => {\n      let options = [...this.state.characterOptions];\n      options[index] = options[index].withValue(value);\n      this.setState({ characterOptions: options }, this.setStatTalentState);\n    });\n\n  renderArtifactSetOptions = (i) =>\n    this.renderOptions(\n      this.state[`artifactSet${i + 1}Options`],\n      (index) => (value) => {\n        let options = [...this.state[`artifactSet${i + 1}Options`]];\n        options[index] = options[index].withValue(value);\n        this.setState(\n          { [`artifactSet${i + 1}Options`]: options },\n          this.setArtifactSetState\n        );\n      }\n    );\n\n  renderAllTalentDamage = () => {\n    return (\n      <View style={styles.resultBlockNoBorder}>\n        <Text style={styles.titleText}>Talents</Text>\n\n        {this.renderTalentDamage('Attack')}\n        {this.renderTalentDamage('Skill')}\n        {this.renderTalentDamage('Burst', true)}\n        {this.renderCharacterOptions()}\n        {this.renderArtifactSetOptions(0)}\n        {this.renderArtifactSetOptions(1)}\n        {this.renderArtifactSetOptions(2)}\n      </View>\n    );\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.inputColumn}>{this.renderInputColumn()}</View>\n\n        <View style={styles.resultColumn}>\n          {this.renderCharacterStats()}\n          {this.renderWeaponStats()}\n          {this.renderArtifactSetStats()}\n          {this.renderAllArtifactStats()}\n        </View>\n\n        <View style={styles.resultColumn}>{this.renderTotalStats()}</View>\n\n        <View style={styles.resultColumn}>{this.renderAllTalentDamage()}</View>\n\n        <View style={styles.fillerColumn}></View>\n      </View>\n    );\n  }\n}\n"],"sourceRoot":""}