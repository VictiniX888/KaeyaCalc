{"version":3,"sources":["js/Data.js","js/Resistance.js","js/Talent.js","js/option/Option.js","js/option/characterOptions/DilucOption.js","js/option/characterOptions/XiaoOption.js","js/option/characterOptions/NoelleOption.js","js/option/characterOptions/ChongyunOption.js","js/option/characterOptions/HuTaoOption.js","js/option/characterOptions/YanfeiOption.js","js/option/OptionUtils.js","js/Character.js","js/Weapon.js","js/Stat.js","js/Artifact.js","js/ArtifactSetBonus.js","js/ArtifactSet.js","js/DamageModifer.js","js/Styles.js","App.js"],"names":["sortedCharacterList","sortedWeaponList","sortedArtifactSetList","characterData","characterDataRaw","reduce","acc","charData","id","characterAscensionBonusData","rawData","characterId","ascensionBonusSet","map","bonusData","ascensionBonuses","processCharacterAscensionBonusData","characterAscensionBonusDataRaw","characterStatCurveData","curveData","level","statCurves","processCharacterStatCurveData","characterStatCurveDataRaw","weaponData","processWeaponData","weaponDataRaw","weaponAscensionBonusData","weaponId","processWeaponAscensionBonusData","weaponAscensionBonusDataRaw","weaponStatCurveData","processWeaponStatCurveData","weaponStatCurveDataRaw","talentData","talentDataRaw","talents","attack","curveAcc","params","skill","burst","processTalentData","artifactSetData","setData","processArtifactSetData","artifactSetDataRaw","artifactSetBonusData","setId","setBonusSet","bonusAcc","bonusThreshold","processArtifactSetBonusData","artifactSetBonusDataRaw","getData","dataObj","getAscensionBonusData","getStatCurveAt","getCharacterData","getWeaponData","getAscensionBonusAt","getTalentData","emptyTalentParams","Array","fill","NaN","getTalentStatsAt","type","talentStats","undefined","getArtifactSetData","Resistance","anemo","cryo","electro","geo","hydro","pyro","physical","this","value","isNaN","defaultTalent","calculateBaseDamage","stats","multiplier","scalingType","flatDmg","flatAtk","flatDef","flatHp","calculateTotalDamage","element","attackType","modifier","baseDmg","dmgBonus","normalDmgBonus","chargedDmgBonus","plungeDmgBonus","getDamageBonus","crit","critType","critDmg","Math","min","critRate","characterLevel","enemyLevel","enemyDefReduction","res","resReduction","totalRes","calculateResMultiplier","enemyRes","enemyResReduction","calculateHp","flatBonus","normalAttackDefault","hits","talentValues","i","damage","push","description","normalAttackMulti","hitCount","damages","hit","chargedAttackDefault","chargedAttackMulti","chargedAttackHeavy","plungeAttackDefault","attackLightDefault","normalHits","slice","attackLightMulti","chargedHits","length","attackHeavyDefault","attackBowDefault","chargedElement","aimShotDefault","skillBase","skillDefault","skillMultiBase","burstBase","burstDefault","burstMultiBase","healingSkillBase","flatHealing","calculateHealing","hpBase","shieldBase","dmgAbsorption","shieldStrength","dionaHoldSkill","calculateDmgAbsorption","lisaAttack","lisaSkill","talentDmg","lisaBurst","barbaraAttack","barbaraSkill","barbaraBurst","kaeyaAttack","kaeyaSkill","kaeyaBurst","dilucAttack","infusion","dilucSkill","talentDamage","dilucBurst","razorAttack","razorSkill","razorBurst","attackParams","talentAttackLevel","amberAttack","amberSkill","amberBurst","ventiAttack","ventiSkill","ventiBurst","xianglingAttack","xianglingSkill","xianglingBurst","beidouAttack","beidouSkill","beidouBurst","xingqiuAttack","concat","xingqiuSkill","xingqiuBurst","xiaoAttack","xiaoSkill","xiaoBurst","ningguangAttack","normalAtkDmg","starJadeDmg","ningguangSkill","ningguangBurst","kleeAttack","kleeSkill","kleeBurst","zhongliAttack","zhongliSkill","zhongliBurst","fischlAttack","fischlSkill","fischlBurst","bennettAttack","bennettSkill","bennettBurst","atkBonus","baseAtk","tartagliaAttack","riptideFlashDmg","riptideBurstDmg","tartagliaSkill","tartagliaBurst","noelleAttack","noelleSkill","skillDamage","noelleBurst","modifiedStats","qiqiAttack","qiqiSkill","qiqiBurst","chongyunAttack","chongyunSkill","chongyunBurst","ganyuAttack","aimedShotDmg","chargedDmg","ganyuSkill","ganyuBurst","albedoAttack","albedoSkill","transientBlossomDmg","albedoBurst","dionaAttack","dionaSkill","holdModifier","dionaBurst","monaAttack","monaSkill","monaBurst","keqingAttack","hit4Dmg","hit5Dmg","keqingSkill","keqingBurst","consecutiveSlashDmg","sucroseAttack","sucroseSkill","sucroseBurst","xinyanAttack","xinyanSkill","xinyanBurst","rosariaAttack","rosariaSkill","rosariaBurst","hutaoAttack","hit6Dmg","hutaoSkill","hutaoBurst","forEach","yanfeiAttack","yanfeiSkill","yanfeiBurst","eulaAttack","attackHeavyMulti","eulaSkill","eulaBurst","lightfallSwordParams","lightfallSwordTalent","Option","initialValue","applyOnStats","talentSkillLevel","talentBurstLevel","applyOnModifier","_applyOnStats","_applyOnModifier","burstParams","skillParams","defaultOptions","Character","data","name","baseStats","statCurveMapping","hasAscended","innateStats","Object","keys","obj","stat","charStatCurves","entries","curve","bonus","talentLevel","totalStats","toLowerCase","damageFn","characterOptions","getOptions","Weapon","rank","weaponLevel","weaponStats","weaponStatCurves","getStatDisplayValue","isPercentage","toFixed","round","getDamageDisplayValue","values","str","every","convertStatValue","getTalentDescription","desc","talentDescMapping","getTotalStatsAt","weapon","weaponHasAscended","character","characterHasAscended","artifactSetBonuses","artifacts","options","characterStats","getStatsAt","getInnateStatsAt","getBaseStatsAt","combinedStats","artifactStats","artifact","getStats","baseDef","defBonus","baseHp","hpBonus","elementalMastery","energyRecharge","anemoDmgBonus","cryoDmgBonus","electroDmgBonus","geoDmgBonus","hydroDmgBonus","pyroDmgBonus","physicalDmgBonus","anemoRes","cryoRes","electroRes","geoRes","hydroRes","pyroRes","physicalRes","healingBonus","option","Artifact","mainStat","rawValue","subStats","statObj","statUtils","subStat","mainStatProps","Flower","Feather","Sands","Goblet","Circlet","subStatProps","defaultSetBonus","ArtifactSet","bonusThresholds","setBonuses","getArtifactSetBonusData","pieces","filter","threshold","getSetBonusesAt","setBonus","bonuses","statBonus","extraBonus","bonusExtra","bonusFn","extraBonuses","DamageModifier","modifiers","reaction","StyleSheet","create","container","display","flexDirection","alignItems","fontSize","height","backgroundColor","inputColumn","padding","borderRightWidth","inputRow","marginVertical","levelInput","width","statInput","buttonGroupContainer","marginTop","marginBottom","marginLeft","marginRight","borderRadius","borderColor","buttonGroupButtonContainer","borderRightColor","buttonGroupText","fontWeight","color","buttonGroupSelectedButton","buttonGroupSelectedText","resultColumn","resultBlockNoBorder","resultBlock","borderBottomWidth","artifactBlockNoBorder","paddingTop","paddingBottom","artifactBlock","borderStyle","characterImage","titleText","artifactType","artifactStatType","resultText","fillerColumn","flexGrow","App","elements","renderInputColumn","View","renderCharacterList","style","styles","Text","TextInput","defaultValue","state","onChangeText","text","setState","parseInt","setCharacterState","Checkbox","onValueChange","isCharacterAscended","renderWeaponList","setWeaponState","isWeaponAscended","artifactSets","_","renderArtifactSetInput","setStatTalentState","buttons","containerStyle","buttonContainerStyle","textStyle","selectedButtonStyle","selectedTextStyle","selectedIndex","onPress","setAllTalentState","key","toUpperCase","set","parseFloat","characterSelect","selectedValue","Item","label","characters","weapons","setArtifactSetState","renderCharacterImage","imageUrl","Image","source","uri","getDamageModifier","getTotalStats","talentAttackDamage","getTalentDamageAt","talentSkillDamage","talentBurstDamage","isweaponAscended","artifactSetStats","setStats","setTalentState","artifactFlower","artifactFeather","artifactSands","artifactGoblet","artifactCirclet","renderCharacterStats","renderWeaponStats","renderArtifactSetStats","renderArtifactMainStat","setStat","prop","renderArtifactSubStats","index","renderArtifactStat","isLast","renderAllArtifactStats","renderTotalStats","renderTalentDamage","renderOptions","FlatList","keyExtractor","item","renderItem","optionMapping","withValue","renderAllTalentDamage","sort","name1","name2","localeCompare","artifactSet1Id","artifactSet1Pc","artifactSet2Id","artifactSet2Pc","artifactSet3Id","artifactSet3Pc","Component"],"mappings":"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","file":"static/js/app.95bb7dfd.chunk.js","sourcesContent":["import characterDataRaw from '../data/characterdata.json';\nimport characterAscensionBonusDataRaw from '../data/characterascensionbonusdata.json';\nimport characterStatCurveDataRaw from '../data/characterstatcurvedata.json';\nimport weaponDataRaw from '../data/weapondata.json';\nimport weaponAscensionBonusDataRaw from '../data/weaponascensionbonusdata.json';\nimport weaponStatCurveDataRaw from '../data/weaponstatcurvedata.json';\nimport talentDataRaw from '../data/talentdata.json';\nimport artifactSetDataRaw from '../data/artifactsetdata.json';\nimport artifactSetBonusDataRaw from '../data/artifactsetbonusdata.json';\nexport { default as propMapping } from '../data/propmapping.json';\nexport { default as talentDescMapping } from '../data/talentdescmapping.json';\nexport { default as optionMapping } from '../data/optionmapping.json';\n\n// Pre-processed data, coverting from arrays to objects (map-like) for faster lookup\nconst characterData = processCharacterData(characterDataRaw);\nconst characterAscensionBonusData = processCharacterAscensionBonusData(\n  characterAscensionBonusDataRaw\n);\nconst characterStatCurveData = processCharacterStatCurveData(\n  characterStatCurveDataRaw\n);\nconst weaponData = processWeaponData(weaponDataRaw);\nconst weaponAscensionBonusData = processWeaponAscensionBonusData(\n  weaponAscensionBonusDataRaw\n);\nconst weaponStatCurveData = processWeaponStatCurveData(weaponStatCurveDataRaw);\nconst talentData = processTalentData(talentDataRaw);\nconst artifactSetData = processArtifactSetData(artifactSetDataRaw);\nconst artifactSetBonusData = processArtifactSetBonusData(\n  artifactSetBonusDataRaw\n);\n\n// Pre-processed data, lists\nlet sortedCharacterList; // lazy loading implemented with getSortedCharacterList()\nlet sortedWeaponList; // lazy loading implemented with getSortedWeaponList()\nlet sortedArtifactSetList; // lazy loading implemented with getSortedArtifactSetList()\n\n// Functions for pre-processing data\nfunction processCharacterData(rawData) {\n  return rawData.reduce((acc, charData) => {\n    acc[charData.id] = charData;\n    return acc;\n  }, {});\n}\n\nfunction processCharacterAscensionBonusData(rawData) {\n  return rawData.reduce((acc, charData) => {\n    acc[charData.characterId] = charData.ascensionBonusSet.map(\n      (bonusData) => bonusData.ascensionBonuses\n    );\n    return acc;\n  }, {});\n}\n\nfunction processCharacterStatCurveData(rawData) {\n  return rawData.reduce((acc, curveData) => {\n    acc[curveData.level] = curveData.statCurves;\n    return acc;\n  }, {});\n}\n\nfunction processWeaponData(rawData) {\n  return rawData.reduce((acc, weaponData) => {\n    acc[weaponData.id] = weaponData;\n    return acc;\n  }, {});\n}\n\nfunction processWeaponAscensionBonusData(rawData) {\n  return rawData.reduce((acc, weaponData) => {\n    acc[weaponData.weaponId] = weaponData.ascensionBonusSet.map(\n      (bonusData) => bonusData.ascensionBonuses\n    );\n    return acc;\n  }, {});\n}\n\nfunction processWeaponStatCurveData(rawData) {\n  return rawData.reduce((acc, curveData) => {\n    acc[curveData.level] = curveData.statCurves;\n    return acc;\n  }, {});\n}\n\nfunction processTalentData(rawData) {\n  return rawData.reduce((acc, talentDataRaw) => {\n    let talentData = { ...talentDataRaw.talents };\n\n    talentData.attack = talentData.attack.reduce((curveAcc, curveData) => {\n      curveAcc[curveData.level] = curveData.params;\n      return curveAcc;\n    }, {});\n    talentData.skill = talentData.skill.reduce((curveAcc, curveData) => {\n      curveAcc[curveData.level] = curveData.params;\n      return curveAcc;\n    }, {});\n    talentData.burst = talentData.burst.reduce((curveAcc, curveData) => {\n      curveAcc[curveData.level] = curveData.params;\n      return curveAcc;\n    }, {});\n\n    acc[talentDataRaw.characterId] = talentData;\n    return acc;\n  }, {});\n}\n\nfunction processArtifactSetData(rawData) {\n  return rawData.reduce((acc, setData) => {\n    acc[setData.id] = setData;\n    return acc;\n  }, {});\n}\n\nfunction processArtifactSetBonusData(rawData) {\n  return rawData.reduce((acc, setData) => {\n    acc[setData.setId] = setData.setBonusSet.reduce((bonusAcc, bonusData) => {\n      bonusAcc[bonusData.bonusThreshold] = bonusData;\n      return bonusAcc;\n    }, {});\n    return acc;\n  }, {});\n}\n\n// Helper functions for accessing data properties\nfunction getData(id, dataObj) {\n  return dataObj[id];\n}\n\nfunction getAscensionBonusData(id, dataObj) {\n  return dataObj[id];\n}\n\nfunction getStatCurveAt(level, statCurves) {\n  return statCurves[level];\n}\n\n// \"Public\" functions for accessing data properties\nexport function getCharacterData(id) {\n  return getData(id, characterData);\n}\n\nexport function getCharacterAscensionBonusData(id) {\n  return getAscensionBonusData(id, characterAscensionBonusData);\n}\n\nexport function getCharacterStatCurveAt(level) {\n  return getStatCurveAt(level, characterStatCurveData);\n}\n\nexport function getWeaponData(id) {\n  return getData(id, weaponData);\n}\n\nexport function getWeaponAscensionBonusData(id) {\n  return getAscensionBonusData(id, weaponAscensionBonusData);\n}\n\nexport function getWeaponStatCurveAt(level) {\n  return getStatCurveAt(level, weaponStatCurveData);\n}\n\nexport function getAscensionBonusAt(level, ascensionBonuses) {\n  return ascensionBonuses[level];\n}\n\nexport function getTalentData(id) {\n  return talentData[id];\n}\n\nconst emptyTalentParams = Array(19).fill(NaN);\n\nexport function getTalentStatsAt(type, level, talents) {\n  const talentStats = talents[type][level];\n  if (talentStats !== undefined) {\n    return talentStats;\n  } else {\n    return emptyTalentParams;\n  }\n}\n\nexport function getArtifactSetData(id) {\n  return getData(id, artifactSetData);\n}\n\nexport function getArtifactSetBonusData(id) {\n  return getData(id, artifactSetBonusData);\n}\n\n// \"Public\" functions for getting data collections\nexport function getSortedCharacterList() {\n  if (sortedCharacterList === undefined) {\n    sortedCharacterList = Object.entries(characterData)\n      .sort(([_1, { name: name1 }], [_2, { name: name2 }]) =>\n        name1.localeCompare(name2)\n      )\n      .map(([id, _]) => id);\n  }\n\n  return sortedCharacterList;\n}\n\nexport function getSortedWeaponList() {\n  if (sortedWeaponList === undefined) {\n    sortedWeaponList = Object.entries(weaponData)\n      .sort(([_1, { name: name1 }], [_2, { name: name2 }]) =>\n        name1.localeCompare(name2)\n      )\n      .map(([id, _]) => id);\n  }\n\n  return sortedWeaponList;\n}\n\nexport function getSortedArtifactSetList() {\n  if (sortedArtifactSetList === undefined) {\n    sortedArtifactSetList = Object.entries(artifactSetData)\n      .sort(([_1, { name: name1 }], [_2, { name: name2 }]) =>\n        name1.localeCompare(name2)\n      )\n      .map(([id, _]) => id);\n  }\n\n  return sortedArtifactSetList;\n}\n","export default class Resistance {\n  constructor({\n    anemo = 0,\n    cryo = 0,\n    electro = 0,\n    geo = 0,\n    hydro = 0,\n    pyro = 0,\n    physical = 0,\n  }) {\n    this.anemo = anemo / 100;\n    this.cryo = cryo / 100;\n    this.electro = electro / 100;\n    this.geo = geo / 100;\n    this.hydro = hydro / 100;\n    this.pyro = pyro / 100;\n    this.physical = physical / 100;\n  }\n\n  set(type, value) {\n    if (!isNaN(value)) {\n      this[type] = value / 100;\n    } else {\n      this[type] = 0;\n    }\n  }\n\n  add(type, value) {\n    if (!isNaN(value)) {\n      this[type] += value / 100;\n    }\n  }\n}\n","import { getTalentData, getTalentStatsAt } from './Data.js';\nimport Resistance from './Resistance.js';\n\n// Placeholder function\nexport function defaultTalent() {\n  return [];\n}\n\n// Internal functions\n\nfunction getDamageBonus({ stats, element, attackType }) {\n  let dmgBonus = 1;\n  dmgBonus += stats[`${element}DmgBonus`] ?? 0;\n  if (attackType === 'normal') {\n    dmgBonus += stats.normalDmgBonus ?? 0;\n  } else if (attackType === 'charged') {\n    dmgBonus += stats.chargedDmgBonus ?? 0;\n  } else if (attackType === 'plunge') {\n    dmgBonus += stats.plungeDmgBonus ?? 0;\n  }\n\n  return dmgBonus;\n}\n\nfunction calculateBaseDamage({ stats, multiplier, scalingType, flatDmg = 0 }) {\n  if (scalingType == 'attack') {\n    return stats.flatAtk * multiplier + flatDmg;\n  } else if (scalingType == 'defense') {\n    return stats.flatDef * multiplier + flatDmg;\n  } else if (scalingType == 'hp') {\n    return stats.flatHp * multiplier + flatDmg;\n  } else {\n    return NaN;\n  }\n}\n\nfunction calculateResMultiplier({\n  element,\n  res = new Resistance({}),\n  resReduction = new Resistance({}),\n}) {\n  let totalRes = res[element] - resReduction[element];\n\n  if (totalRes < 0) {\n    return 1 - totalRes / 2;\n  } else if (totalRes < 0.75) {\n    return 1 - totalRes;\n  } else {\n    return 1 / (4 * totalRes + 1);\n  }\n}\n\nfunction calculateTotalDamage({\n  stats,\n  multiplier,\n  element,\n  scalingType = 'attack',\n  attackType = 'none',\n  modifier,\n}) {\n  let baseDmg = calculateBaseDamage({\n    stats,\n    multiplier,\n    scalingType,\n    flatDmg: modifier.flatDmg,\n  });\n  let dmgBonus = getDamageBonus({ stats, element, attackType });\n\n  let crit = 1;\n  if (modifier.critType === 'crit') {\n    crit += stats.critDmg;\n  } else if (modifier.critType === 'average') {\n    crit += Math.min(1, stats.critRate) * stats.critDmg;\n  }\n\n  let enemyDefMultiplier =\n    (modifier.characterLevel + 100) /\n    (modifier.characterLevel +\n      100 +\n      (modifier.enemyLevel + 100) * (1 - modifier.enemyDefReduction));\n  let enemyResMultiplier = calculateResMultiplier({\n    element,\n    res: modifier.enemyRes,\n    resReduction: modifier.enemyResReduction,\n  });\n\n  // TODO: reactionBonus\n\n  return baseDmg * dmgBonus * crit * enemyDefMultiplier * enemyResMultiplier;\n}\n\nfunction calculateHealing({\n  stats,\n  multiplier,\n  flatHealing,\n  scalingType = 'hp',\n}) {\n  // TODO: Add healing bonus\n  return calculateBaseDamage({\n    stats,\n    multiplier,\n    scalingType,\n    flatDmg: flatHealing,\n  });\n}\n\n// Used for calculting hp of summons/shield\nfunction calculateHp({ stats, multiplier, flatBonus, scalingType = 'hp' }) {\n  if (scalingType == 'attack') {\n    return stats.flatAtk * multiplier + flatBonus;\n  } else if (scalingType == 'defense') {\n    return stats.flatDef * multiplier + flatBonus;\n  } else if (scalingType == 'hp') {\n    return stats.flatHp * multiplier + flatBonus;\n  } else {\n    return NaN;\n  }\n}\n\n// Used for calculating total shield strength\nfunction calculateDmgAbsorption({\n  stats,\n  multiplier,\n  flatBonus,\n  element,\n  scalingType = 'hp',\n  modifier,\n}) {\n  let dmgAbsorption = calculateHp({\n    stats,\n    multiplier,\n    flatBonus,\n    scalingType,\n  });\n\n  // Geo Shields\n  if (element === 'geo') dmgAbsorption *= 1.5;\n\n  // Shield bonus from external sources\n  if (stats.shieldStrength !== undefined)\n    dmgAbsorption *= 1 + stats.shieldStrength;\n\n  // Character-specific bonuses\n\n  // Diona Hold Skill\n  if (modifier.dionaHoldSkill) dmgAbsorption *= 1.75;\n\n  return dmgAbsorption;\n}\n\n// Used for all default normal attacks\nfunction normalAttackDefault({ hits, element, params, stats, modifier }) {\n  let talentValues = [];\n  for (let i = 0; i < hits; i++) {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i],\n      element,\n      attackType: 'normal',\n      modifier,\n    });\n\n    talentValues.push({\n      description: `${i + 1}HitDmg`,\n      damage: [damage],\n    });\n  }\n\n  return talentValues;\n}\n\n// Used for all normal attacks with multiple damage instances in 1 hit e.g. polearms\nfunction normalAttackMulti({ hits = [], element, params, stats, modifier }) {\n  let talentValues = hits.map((hitCount, i) => {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i],\n      element,\n      attackType: 'normal',\n      modifier,\n    });\n\n    let damages = [];\n    for (let hit = 0; hit < hitCount; hit++) {\n      damages.push(damage);\n    }\n\n    return {\n      description: `${i + 1}HitDmg`,\n      damage: damages,\n    };\n  });\n\n  return talentValues;\n}\n\n// Used for all 1-hit charged attacks\nfunction chargedAttackDefault({ element, params, stats, modifier }) {\n  let damage = calculateTotalDamage({\n    stats,\n    multiplier: params[0],\n    element,\n    attackType: 'charged',\n    modifier,\n  });\n\n  return [\n    {\n      description: 'chargedDmg',\n      damage: [damage],\n    },\n  ];\n}\n\n// Used for multi-hit charged attacks\nfunction chargedAttackMulti({ hits, element, params, stats, modifier }) {\n  let damages = [];\n  for (let i = 0; i < hits; i++) {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i],\n      element,\n      attackType: 'charged',\n      modifier,\n    });\n    damages.push(damage);\n  }\n\n  return [\n    {\n      description: `chargedDmg`,\n      damage: damages,\n    },\n  ];\n}\n\n// Used for all default claymore charged attacks\nfunction chargedAttackHeavy({ element = 'physical', params, stats, modifier }) {\n  let descriptions = ['chargedSpinDmg', 'chargedFinalDmg'];\n  return descriptions.map((description, i) => {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i],\n      element,\n      attackType: 'charged',\n      modifier,\n    });\n\n    return {\n      description: description,\n      damage: [damage],\n    };\n  });\n}\n\n// Used for all default plunge attacks\nfunction plungeAttackDefault({ element, params, stats, modifier }) {\n  let descriptions = ['plungeDmg', 'lowPlungeDmg', 'highPlungeDmg'];\n  return descriptions.map((description, i) => {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i],\n      element,\n      attackType: 'plunge',\n      modifier,\n    });\n\n    return {\n      description: description,\n      damage: [damage],\n    };\n  });\n}\n\n// Used for all default sword/polearm/catalyst attacks\nfunction attackLightDefault({\n  normalHits,\n  element = 'physical',\n  params,\n  stats,\n  modifier,\n}) {\n  let talentValues = [];\n\n  talentValues.push(\n    ...normalAttackDefault({\n      hits: normalHits,\n      element,\n      params: params.slice(0, normalHits),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...chargedAttackDefault({\n      element,\n      params: params.slice(normalHits, normalHits + 1),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...plungeAttackDefault({\n      element,\n      params: params.slice(normalHits + 1 + 1),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentValues;\n}\n\n// Used for all default sword/polearm attacks with multi damage instances\nfunction attackLightMulti({\n  normalHits = [],\n  chargedHits = 1,\n  element = 'physical',\n  params,\n  stats,\n  modifier,\n}) {\n  let talentValues = [];\n\n  talentValues.push(\n    ...normalAttackMulti({\n      hits: normalHits,\n      element,\n      params: params.slice(0, normalHits.length),\n      stats,\n      modifier,\n    })\n  );\n\n  if (chargedHits === 1) {\n    talentValues.push(\n      ...chargedAttackDefault({\n        element,\n        params: params.slice(normalHits.length, normalHits.length + 1),\n        stats,\n        modifier,\n      })\n    );\n  } else {\n    talentValues.push(\n      ...chargedAttackMulti({\n        hits: chargedHits,\n        element,\n        params: params.slice(\n          normalHits.length,\n          normalHits.length + chargedHits\n        ),\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  talentValues.push(\n    ...plungeAttackDefault({\n      element,\n      params: params.slice(normalHits.length + chargedHits + 1),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentValues;\n}\n\n// Used for all default claymore attacks\nfunction attackHeavyDefault({\n  normalHits,\n  element = 'physical',\n  params,\n  stats,\n  modifier,\n}) {\n  let talentValues = [];\n\n  talentValues.push(\n    ...normalAttackDefault({\n      hits: normalHits,\n      element,\n      params: params.slice(0, normalHits),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...chargedAttackHeavy({\n      element,\n      params: params.slice(normalHits, normalHits + 2),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...plungeAttackDefault({\n      element,\n      params: params.slice(normalHits + 2 + 2),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentValues;\n}\n\n// Used for all claymore attacks with multi damage instances\nfunction attackHeavyMulti({\n  normalHits = [],\n  element = 'physical',\n  params,\n  stats,\n  modifier,\n}) {\n  let talentValues = [];\n\n  talentValues.push(\n    ...normalAttackMulti({\n      hits: normalHits,\n      element,\n      params: params.slice(0, normalHits.length),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...chargedAttackHeavy({\n      params: params.slice(normalHits.length, normalHits.length + 2),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...plungeAttackDefault({\n      element,\n      params: params.slice(normalHits.length + 2 + 2),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentValues;\n}\n\n// Used for all debault bow aim shots (include charged shots)\nfunction aimShotDefault({ chargedElement, params, stats, modifier }) {\n  let talentValues = [];\n\n  let damage = calculateTotalDamage({\n    stats,\n    multiplier: params[0],\n    element: 'physical',\n    attackType: 'normal',\n    modifier,\n  });\n  talentValues.push({\n    description: 'aimShotDmg',\n    damage: [damage],\n  });\n\n  damage = calculateTotalDamage({\n    stats,\n    multiplier: params[1],\n    element: chargedElement,\n    attackType: 'charged',\n    modifier,\n  });\n  talentValues.push({\n    description: 'chargedAimShotDmg',\n    damage: [damage],\n  });\n\n  return talentValues;\n}\n\n// Used for all default bow attacks\nfunction attackBowDefault({\n  normalHits,\n  chargedElement,\n  params,\n  stats,\n  modifier,\n}) {\n  let talentValues = [];\n\n  talentValues.push(\n    ...normalAttackDefault({\n      hits: normalHits,\n      element: 'physical',\n      params: params.slice(0, normalHits),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...aimShotDefault({\n      chargedElement,\n      params: params.slice(normalHits, normalHits + 2),\n      stats,\n      modifier,\n    })\n  );\n\n  talentValues.push(\n    ...plungeAttackDefault({\n      element: 'physical',\n      params: params.slice(normalHits + 2),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentValues;\n}\n\n// Base function for all damage skills. Returns an object representing a single line to be displayed.\n// The returned object should always be added into an array to construct the list of talent damage.\nfunction skillBase({ description, element, multiplier, stats, modifier }) {\n  let damage = calculateTotalDamage({\n    element,\n    multiplier,\n    attackType: 'skill',\n    stats,\n    modifier,\n  });\n\n  return {\n    description,\n    damage: [damage],\n  };\n}\n\n// Used for all default skill that only does 1-hit elemental dmg\nfunction skillDefault({ element, params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'skillDmg',\n      element,\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Base function for damage skills with multiple damage instances\nfunction skillMultiBase({\n  description,\n  hits,\n  element,\n  params,\n  stats,\n  modifier,\n}) {\n  let damages = [];\n\n  for (let i = 0; i < hits; i++) {\n    damages.push(\n      calculateTotalDamage({\n        element,\n        multiplier: params[i],\n        attackType: 'skill',\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  return {\n    description,\n    damage: damages,\n  };\n}\n\n// Base function for all damage bursts. Returns an object representing a single line to be displayed.\n// The returned object should always be added into an array to construct the list of talent damage.\nfunction burstBase({ description, element, multiplier, stats, modifier }) {\n  let damage = calculateTotalDamage({\n    element,\n    multiplier,\n    attackType: 'burst',\n    stats,\n    modifier,\n  });\n\n  return {\n    description,\n    damage: [damage],\n  };\n}\n\n// Used for all default burst that only does 1-hit elemental dmg\nfunction burstDefault({ element, params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'burstDmg',\n      element,\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Base function for bursts with multiple damage instances\nfunction burstMultiBase({\n  description,\n  hits,\n  element,\n  params,\n  stats,\n  modifier,\n}) {\n  let damages = [];\n\n  for (let i = 0; i < hits; i++) {\n    damages.push(\n      calculateTotalDamage({\n        element,\n        multiplier: params[i],\n        attackType: 'burst',\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  return {\n    description,\n    damage: damages,\n  };\n}\n\n// Base function for all healing skills. Returns an object representing a single line to be displayed.\n// The returned object should always be added into an array to construct the list of talent damage.\nfunction healingSkillBase({\n  description,\n  scalingType = 'hp',\n  params,\n  stats,\n  modifier,\n}) {\n  let damage = calculateHealing({\n    stats,\n    multiplier: params[0],\n    flatHealing: params[1],\n    scalingType,\n  });\n\n  return {\n    description,\n    damage: [damage],\n  };\n}\n\n// Base function for all shields/summon HP\nfunction hpBase({\n  description,\n  multiplier,\n  flatBonus,\n  scalingType = 'hp',\n  stats,\n  modifier,\n}) {\n  let hp = calculateHp({\n    stats,\n    multiplier,\n    flatBonus,\n    scalingType,\n  });\n\n  return {\n    description,\n    damage: [hp],\n  };\n}\n\nfunction shieldBase({\n  description,\n  multiplier,\n  flatBonus,\n  element,\n  scalingType = 'hp',\n  stats,\n  modifier,\n}) {\n  let dmgAbsorption = calculateDmgAbsorption({\n    stats,\n    multiplier,\n    flatBonus,\n    element,\n    scalingType,\n    modifier,\n  });\n\n  return {\n    description,\n    damage: [dmgAbsorption],\n  };\n}\n\n// Public functions\n// Access using talent[characterId + type]\n\n// Lisa\nexport function lisaAttack({ params, stats, modifier }) {\n  return attackLightDefault({\n    normalHits: 4,\n    element: 'electro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function lisaSkill({ params, stats, modifier }) {\n  let talentDmg = [];\n\n  talentDmg.push(\n    skillBase({\n      description: 'pressDmg',\n      element: 'electro',\n      multiplier: params[5],\n      stats,\n      modifier,\n    })\n  );\n\n  for (let i = 0; i <= 3; i++) {\n    talentDmg.push(\n      skillBase({\n        description: `holdDmgStack${i}`,\n        element: 'electro',\n        multiplier: params[i],\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  return talentDmg;\n}\n\nexport function lisaBurst({ params, stats, modifier }) {\n  return burstDefault({\n    element: 'electro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\n// Barbara\nexport function barbaraAttack({ params, stats, modifier }) {\n  return attackLightDefault({\n    normalHits: 4,\n    element: 'hydro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function barbaraSkill({ params, stats, modifier }) {\n  let talentDmg = [\n    healingSkillBase({\n      description: 'hpRegenContinuous',\n      params: params.slice(0, 2),\n      stats,\n      modifier,\n    }),\n\n    healingSkillBase({\n      description: 'hpRegenOnHit',\n      params: params.slice(2, 4),\n      stats,\n      modifier,\n    }),\n\n    skillBase({\n      description: 'dropletDmg',\n      element: 'hydro',\n      multiplier: params[4],\n      stats,\n      modifier,\n    }),\n  ];\n\n  return talentDmg;\n}\n\nexport function barbaraBurst({ params, stats, modifier }) {\n  return [\n    healingSkillBase({\n      description: 'hpRegen',\n      params,\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Kaeya\nexport function kaeyaAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 1, 1, 1],\n    chargedHits: 2,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function kaeyaSkill({ params, stats, modifier }) {\n  return skillDefault({\n    element: 'cryo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function kaeyaBurst({ params, stats, modifier }) {\n  return burstDefault({\n    element: 'cryo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\n// Diluc\nexport function dilucAttack({ params, stats, modifier }) {\n  const element = modifier.infusion ?? 'physical';\n  return attackHeavyDefault({\n    normalHits: 4,\n    element,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function dilucSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n  for (let i = 0; i < 3; i++) {\n    talentDamage.push(\n      skillBase({\n        description: `${i + 1}HitDmg`,\n        element: 'pyro',\n        multiplier: params[i],\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  return talentDamage;\n}\n\nexport function dilucBurst({ params, stats, modifier }) {\n  let descriptions = ['slashingDmg', 'dot', 'explosionDmg'];\n  let talentDamage = descriptions.map((description, i) => {\n    return burstBase({\n      description,\n      element: 'pyro',\n      multiplier: params[i],\n      stats,\n      modifier,\n    });\n  });\n\n  return talentDamage;\n}\n\n// Razor\nexport function razorAttack({ params, stats, modifier }) {\n  return attackHeavyDefault({\n    normalHits: 4,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function razorSkill({ params, stats, modifier }) {\n  let descriptions = ['pressDmg', 'holdDmg'];\n  return descriptions.map((description, i) => {\n    return skillBase({\n      description,\n      element: 'electro',\n      multiplier: params[i],\n      stats,\n      modifier,\n    });\n  });\n}\n\nexport function razorBurst({ params, stats, modifier }) {\n  let talentDamage = burstDefault({\n    element: 'electro',\n    params,\n    stats,\n    modifier,\n  });\n\n  let attackParams = getTalentStatsAt(\n    'attack',\n    modifier.talentAttackLevel,\n    getTalentData('razor')\n  );\n\n  for (let i = 0; i < 4; i++) {\n    talentDamage.push(\n      burstBase({\n        description: `${i + 1}HitDmgSoulCompanion`,\n        element: 'electro',\n        multiplier: params[1] * attackParams[i],\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  return talentDamage;\n}\n\n// Amber\nexport function amberAttack({ params, stats, modifier }) {\n  return attackBowDefault({\n    normalHits: 5,\n    chargedElement: 'pyro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function amberSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    skillBase({\n      description: 'explosionDmg',\n      element: 'electro',\n      multiplier: params[1],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    hpBase({\n      description: 'baronBunnyHp',\n      multiplier: params[0],\n      flatBonus: 0,\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function amberBurst({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    burstBase({\n      description: 'dmgPerWave',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push({\n    description: 'totalDmg',\n    damage: [talentDamage[0].damage[0] * 18],\n  });\n\n  return talentDamage;\n}\n\n// Venti\nexport function ventiAttack({ params, stats, modifier }) {\n  return attackBowDefault({\n    normalHits: 6,\n    chargedElement: 'anemo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function ventiSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'pressDmg',\n      element: 'anemo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    skillBase({\n      description: 'holdDmg',\n      element: 'anemo',\n      multiplier: params[2],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function ventiBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'dot',\n      element: 'anemo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    // Not sure how the elemental absorption dmg is calculated\n    burstBase({\n      description: 'dotElementalAbsorption',\n      element: 'none',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Xiangling\nexport function xianglingAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 2, 4, 1],\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function xianglingSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'guobaDmg',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function xianglingBurst({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  for (let i = 0; i < 3; i++) {\n    talentDamage.push(\n      burstBase({\n        description: `swing${i + 1}HitDmg`,\n        element: 'pyro',\n        multiplier: params[i],\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  talentDamage.push(\n    burstBase({\n      description: 'pyronadoDmg',\n      element: 'pyro',\n      multiplier: params[3],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\n// Beidou\nexport function beidouAttack({ params, stats, modifier }) {\n  return attackHeavyDefault({\n    normalHits: 5,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function beidouSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    shieldBase({\n      description: 'shieldHp',\n      multiplier: params[0],\n      flatBonus: params[1],\n      element: 'electro',\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    skillBase({\n      description: 'baseDmg',\n      element: 'electro',\n      multiplier: params[2],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    skillBase({\n      description: 'dmgBonusOnHitTaken',\n      element: 'electro',\n      multiplier: params[3],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function beidouBurst({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    burstBase({\n      description: 'skillDmg',\n      element: 'electro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    burstBase({\n      description: 'lightningDmg',\n      element: 'electro',\n      multiplier: params[1],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\n// Xingqiu\nexport function xingqiuAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 2, 1, 2],\n    chargedHits: 2,\n    params: params\n      .slice(0, 3)\n      .concat(params.slice(4, 6))\n      .concat(params.slice(7)),\n    stats,\n    modifier,\n  });\n}\n\nexport function xingqiuSkill({ params, stats, modifier }) {\n  return [\n    skillMultiBase({\n      description: 'skillDmg',\n      hits: 2,\n      element: 'hydro',\n      params,\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function xingqiuBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'swordRainDmg',\n      element: 'hydro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Xiao\nexport function xiaoAttack({ params, stats, modifier }) {\n  const element = modifier.infusion ?? 'physical';\n\n  return attackLightMulti({\n    normalHits: [2, 1, 1, 2, 1, 1],\n    element,\n    params: params.slice(1, 5).concat(params.slice(6)),\n    stats,\n    modifier,\n  });\n}\n\nexport function xiaoSkill({ params, stats, modifier }) {\n  return skillDefault({\n    element: 'anemo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function xiaoBurst({ params, stats, modifier }) {\n  return defaultTalent();\n}\n\n// Ningguang\nexport function ningguangAttack({ params, stats, modifier }) {\n  let talentDmg = [];\n\n  // Ningguang's normal attack has no combo\n  let normalAtkDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[0],\n    element: 'geo',\n    attackType: 'normal',\n    modifier,\n  });\n  talentDmg.push({\n    description: 'normalAtkDmg',\n    damage: [normalAtkDmg],\n  });\n\n  talentDmg.push(\n    ...chargedAttackDefault({\n      element: 'geo',\n      params: params.slice(1, 2),\n      stats,\n      modifier,\n    })\n  );\n\n  // Ningguang's charged attack dmg per star jade\n  let starJadeDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[2],\n    element: 'geo',\n    attackType: 'charged',\n    modifier,\n  });\n  talentDmg.push({\n    description: 'starJadeDmg',\n    damage: [starJadeDmg],\n  });\n\n  talentDmg.push(\n    ...plungeAttackDefault({\n      element: 'geo',\n      params: params.slice(4),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDmg;\n}\n\nexport function ningguangSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    skillBase({\n      description: 'skillDmg',\n      element: 'geo',\n      multiplier: params[1],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    hpBase({\n      description: 'jadeScreenHp',\n      multiplier: params[2],\n      flatBonus: 0,\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function ningguangBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'dmgPerGem',\n      element: 'geo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Klee\nexport function kleeAttack({ params, stats, modifier }) {\n  return attackLightDefault({\n    normalHits: 3,\n    element: 'pyro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function kleeSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'jumpyDumptyDmg',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    skillBase({\n      description: 'mineDmg',\n      element: 'pyro',\n      multiplier: params[3],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function kleeBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'sparksNSplashDmg',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Zhongli\nexport function zhongliAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 1, 1, 4, 1],\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function zhongliSkill({ params, stats, modifier }) {\n  let descriptions = ['stoneSteeleDmg', 'resonanceDmg'];\n\n  let talentDamage = descriptions.map((description, i) => {\n    return skillBase({\n      description,\n      element: 'geo',\n      multiplier: params[i],\n      stats,\n      modifier,\n    });\n  });\n\n  talentDamage.push(\n    skillBase({\n      description: 'holdDmg',\n      element: 'geo',\n      multiplier: params[3],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    shieldBase({\n      description: 'shieldHp',\n      multiplier: params[5],\n      flatBonus: params[4],\n      element: 'geo',\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function zhongliBurst({ params, stats, modifier }) {\n  return burstDefault({\n    element: 'geo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\n// Fischl\nexport function fischlAttack({ params, stats, modifier }) {\n  return attackBowDefault({\n    normalHits: 5,\n    chargedElement: 'electro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function fischlSkill({ params, stats, modifier }) {\n  let descriptions = ['ozDmg', 'summoningDmg'];\n  return descriptions.map((description, i) =>\n    skillBase({\n      description,\n      element: 'electro',\n      multiplier: params[i],\n      stats,\n      modifier,\n    })\n  );\n}\n\nexport function fischlBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'fallingThunderDmg',\n      element: 'electro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Bennett\nexport function bennettAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 1, 1, 1],\n    chargedHits: 2,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function bennettSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'pressDmg',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    skillMultiBase({\n      description: 'chargeLevel1Dmg',\n      hits: 2,\n      element: 'pyro',\n      params: params.slice(1, 3),\n      stats,\n      modifier,\n    }),\n\n    skillMultiBase({\n      description: 'chargeLevel2Dmg',\n      hits: 2,\n      element: 'pyro',\n      params: params.slice(3, 5),\n      stats,\n      modifier,\n    }),\n\n    skillBase({\n      description: 'explosionDmg',\n      element: 'pyro',\n      multiplier: params[5],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function bennettBurst({ params, stats, modifier }) {\n  let talentDamage = [\n    burstBase({\n      description: 'burstDmg',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    healingSkillBase({\n      description: 'hpRegenContinuousPerSecond',\n      params: params.slice(1, 3),\n      stats,\n      modifier,\n    }),\n  ];\n\n  // ATK Bonus\n  let atkBonus = stats.baseAtk * params[3];\n  talentDamage.push({\n    description: 'atkBonus',\n    damage: [atkBonus],\n  });\n\n  return talentDamage;\n}\n\n// Tartaglia\nexport function tartagliaAttack({ params, stats, modifier }) {\n  let talentDamage = attackBowDefault({\n    normalHits: 6,\n    chargedElement: 'hydro',\n    params: params.slice(0, 8).concat(params.slice(10)),\n    stats,\n    modifier,\n  });\n\n  let riptideFlashDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[8],\n    element: 'hydro',\n    attackType: 'normal',\n    modifier,\n  });\n  talentDamage.push({\n    description: 'riptideFlashDmg',\n    damage: [riptideFlashDmg],\n  });\n\n  let riptideBurstDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[9],\n    element: 'hydro',\n    attackType: 'normal',\n    modifier,\n  });\n  talentDamage.push({\n    description: 'riptideBurstDmg',\n    damage: [riptideBurstDmg],\n  });\n\n  return talentDamage;\n}\n\nexport function tartagliaSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    skillBase({\n      description: 'stanceChangeDmg',\n      element: 'hydro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    ...normalAttackMulti({\n      hits: [1, 1, 1, 1, 1, 2],\n      element: 'hydro',\n      params: params.slice(1, 8),\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    ...chargedAttackMulti({\n      hits: 2,\n      element: 'hydro',\n      params: params.slice(8, 10),\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    skillBase({\n      description: 'riptideSlashDmg',\n      element: 'hydro',\n      multiplier: params[10],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function tartagliaBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'burstDmgMelee',\n      element: 'hydro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'burstDmgRanged',\n      element: 'hydro',\n      multiplier: params[2],\n      stats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'riptideBlastDmg',\n      element: 'hydro',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Noelle\nexport function noelleAttack({ params, stats, modifier }) {\n  const element = modifier.infusion ?? 'physical';\n\n  return attackHeavyDefault({\n    normalHits: 4,\n    element,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function noelleSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  let skillDamage = calculateTotalDamage({\n    stats,\n    multiplier: params[5],\n    element: 'geo',\n    scalingType: 'defense',\n    attackType: 'skill',\n    modifier,\n  });\n  talentDamage.push({\n    description: 'skillDmg',\n    damage: [skillDamage],\n  });\n\n  talentDamage.push(\n    shieldBase({\n      description: 'shieldHp',\n      multiplier: params[0],\n      flatBonus: params[6],\n      element: 'geo',\n      scalingType: 'defense',\n      stats,\n      modifier,\n    })\n  );\n\n  talentDamage.push(\n    healingSkillBase({\n      description: 'healing',\n      params: [params[1], params[7]],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function noelleBurst({ params, stats, modifier }) {\n  let modifiedStats = {\n    ...stats,\n    flatAtk: stats.flatAtk + stats.flatDef * params[2],\n  };\n\n  return [\n    burstBase({\n      description: 'burstInitDmg',\n      element: 'geo',\n      multiplier: params[0],\n      stats: modifiedStats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'firstSwingDmg',\n      element: 'geo',\n      multiplier: params[1],\n      stats: modifiedStats,\n      modifier,\n    }),\n  ];\n}\n\n// Qiqi\nexport function qiqiAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 2, 2, 1],\n    chargedHits: 2,\n    params: params.slice(0, 6).concat(params[5]).concat(params.slice(6)),\n    stats,\n    modifier,\n  });\n}\n\nexport function qiqiSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'skillDmg',\n      element: 'cryo',\n      multiplier: params[7],\n      stats,\n      modifier,\n    }),\n\n    skillBase({\n      description: 'heraldOfFrostDmg',\n      element: 'cryo',\n      multiplier: params[4],\n      stats,\n      modifier,\n    }),\n\n    healingSkillBase({\n      description: 'hpRegenOnHit',\n      scalingType: 'attack',\n      params: params.slice(0, 2),\n      stats,\n      modifier,\n    }),\n\n    healingSkillBase({\n      description: 'hpRegenContinuous',\n      scalingType: 'attack',\n      params: params.slice(2, 4),\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function qiqiBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'burstDmg',\n      element: 'cryo',\n      multiplier: params[2],\n      stats,\n      modifier,\n    }),\n\n    healingSkillBase({\n      description: 'healing',\n      scalingType: 'attack',\n      params,\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Chongyun\nexport function chongyunAttack({ params, stats, modifier }) {\n  const element = modifier.infusion ?? 'physical';\n  return attackHeavyDefault({\n    normalHits: 4,\n    element,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function chongyunSkill({ params, stats, modifier }) {\n  return skillDefault({\n    element: 'cryo',\n    params: params,\n    stats,\n    modifier,\n  });\n}\n\nexport function chongyunBurst({ params, stats, modifier }) {\n  return burstDefault({\n    element: 'cryo',\n    params: params,\n    stats,\n    modifier,\n  });\n}\n\n// Ganyu\nexport function ganyuAttack({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  // Normal attack\n  talentDamage.push(\n    ...normalAttackDefault({\n      hits: 6,\n      element: 'physical',\n      params,\n      stats,\n      modifier,\n    })\n  );\n\n  // Charged attack\n  let aimedShotDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[6],\n    element: 'physical',\n    attackType: 'normal',\n    modifier,\n  });\n  talentDamage.push({\n    description: 'aimShotDmg',\n    damage: [aimedShotDmg],\n  });\n\n  let chargedDescriptions = [\n    'aimShotChargeLevel1',\n    'frostflakeArrowDmg',\n    'frostflakeArrowBloomDmg',\n  ];\n  let chargedDmg = chargedDescriptions.map((description, i) => {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i + 7],\n      element: 'cryo',\n      attackType: 'charged',\n      modifier,\n    });\n\n    return {\n      description,\n      damage: [damage],\n    };\n  });\n  talentDamage.push(...chargedDmg);\n\n  talentDamage.push(\n    ...plungeAttackDefault({\n      element: 'physical',\n      params: params.slice(10),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function ganyuSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'skillDmg',\n      element: 'cryo',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n\n    hpBase({\n      description: 'iceLotusHp',\n      multiplier: params[0],\n      flatBonus: 0,\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function ganyuBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'iceShardDmg',\n      element: 'cryo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Albedo\nexport function albedoAttack({ params, stats, modifier }) {\n  return attackLightMulti({\n    normalHits: [1, 1, 1, 1, 1],\n    chargedHits: 2,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function albedoSkill({ params, stats, modifier }) {\n  let talentDmg = [];\n\n  talentDmg.push(\n    skillBase({\n      description: 'skillDmg',\n      element: 'geo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    })\n  );\n\n  let transientBlossomDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[1],\n    element: 'geo',\n    scalingType: 'defense',\n    attackType: 'skill',\n    modifier,\n  });\n  talentDmg.push({\n    description: 'transientBlossomDmg',\n    damage: [transientBlossomDmg],\n  });\n\n  return talentDmg;\n}\n\nexport function albedoBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'burstDmg',\n      element: 'geo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'fatalBlossomDmg',\n      element: 'geo',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Diona\nexport function dionaAttack({ params, stats, modifier }) {\n  return attackBowDefault({\n    normalHits: 5,\n    chargedElement: 'cryo',\n    params: params.slice(0, 5).concat(params.slice(6)),\n    stats,\n    modifier,\n  });\n}\n\nexport function dionaSkill({ params, stats, modifier }) {\n  let holdModifier = {\n    ...modifier,\n    dionaHoldSkill: true,\n  };\n\n  return [\n    skillBase({\n      description: 'icyPawDmgPerPaw',\n      element: 'cryo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    shieldBase({\n      description: 'shieldHpPress',\n      multiplier: params[1],\n      flatBonus: params[2],\n      element: 'cryo',\n      stats,\n      modifier,\n    }),\n\n    shieldBase({\n      description: 'shieldHpHold',\n      multiplier: params[1],\n      flatBonus: params[2],\n      element: 'cryo',\n      stats,\n      modifier: holdModifier,\n    }),\n  ];\n}\n\nexport function dionaBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'burstDmg',\n      element: 'cryo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'continuousFieldDmg',\n      element: 'cryo',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n\n    healingSkillBase({\n      description: 'hpRegenContinuousTime',\n      params: params.slice(2),\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Mona\nexport function monaAttack({ params, stats, modifier }) {\n  return attackLightDefault({\n    normalHits: 4,\n    element: 'hyrdo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function monaSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'dot',\n      element: 'hydro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    skillBase({\n      description: 'explosionDmg',\n      element: 'hydro',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function monaBurst({ params, stats, modifier }) {\n  let modifiedStats = { ...stats };\n  if (modifiedStats.dmgBonus !== undefined) {\n    modifiedStats.dmgBonus += params[9];\n  } else {\n    modifiedStats.dmgBonus = params[9];\n  }\n\n  return [\n    burstBase({\n      description: 'explosionDmg',\n      element: 'hydro',\n      multiplier: params[1],\n      stats: modifiedStats,\n      modifier,\n    }),\n  ];\n}\n\n// Keqing\nexport function keqingAttack({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  // Normal attack\n  for (let i = 0; i < 3; i++) {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i],\n      element: 'physical',\n      attackType: 'normal',\n      modifier,\n    });\n    talentDamage.push({\n      description: `${i + 1}HitDmg`,\n      damage: [damage],\n    });\n  }\n\n  let hit4Dmg = [];\n  for (let i = 3; i < 5; i++) {\n    hit4Dmg.push(\n      calculateTotalDamage({\n        stats,\n        multiplier: params[i],\n        element: 'physical',\n        attackType: 'normal',\n        modifier,\n      })\n    );\n  }\n  talentDamage.push({\n    description: '4HitDmg',\n    damage: hit4Dmg,\n  });\n\n  let hit5Dmg = [\n    calculateTotalDamage({\n      stats,\n      multiplier: params[5],\n      element: 'physical',\n      attackType: 'normal',\n      modifier,\n    }),\n  ];\n  talentDamage.push({\n    description: `5HitDmg`,\n    damage: hit5Dmg,\n  });\n\n  // Charged attack\n  talentDamage.push(\n    ...chargedAttackMulti({\n      hits: 2,\n      element: 'physical',\n      params: params.slice(6, 8),\n      stats,\n      modifier,\n    })\n  );\n\n  // Plunge attack\n  talentDamage.push(\n    ...plungeAttackDefault({\n      element: 'physical',\n      params: params.slice(9, 12),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function keqingSkill({ params, stats, modifier }) {\n  let descriptions = ['lightningStilettoDmg', 'slashingDmg'];\n  let talentDamage = descriptions.map((description, i) => {\n    return skillBase({\n      description,\n      element: 'electro',\n      multiplier: params[i],\n      stats,\n      modifier,\n    });\n  });\n\n  talentDamage.push(\n    skillMultiBase({\n      description: 'thunderclapSlashDmg',\n      hits: 2,\n      element: 'electro',\n      params: [params[2], params[2]],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function keqingBurst({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    burstBase({\n      description: 'burstInitDmg',\n      element: 'electro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    })\n  );\n\n  let consecutiveSlashDmg = calculateTotalDamage({\n    stats,\n    multiplier: params[1],\n    element: 'electro',\n    attackType: 'burst',\n    modifier,\n  });\n  talentDamage.push({\n    description: 'consecutiveSlashDmg',\n    damage: Array(8).fill(consecutiveSlashDmg),\n  });\n\n  talentDamage.push(\n    burstBase({\n      description: 'lastAttackDmg',\n      element: 'electro',\n      multiplier: params[2],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\n// Sucrose\nexport function sucroseAttack({ params, stats, modifier }) {\n  return attackLightDefault({\n    normalHits: 4,\n    element: 'anemo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function sucroseSkill({ params, stats, modifier }) {\n  return skillDefault({\n    element: 'anemo',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function sucroseBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'dot',\n      element: 'anemo',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    // Not sure how the elemental absorption dmg is calculated\n    burstBase({\n      description: 'dotElementalAbsorption',\n      element: 'none',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Xinyan\nexport function xinyanAttack({ params, stats, modifier }) {\n  return attackHeavyDefault({\n    normalHits: 4,\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function xinyanSkill({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  talentDamage.push(\n    skillBase({\n      description: 'swingDmg',\n      element: 'pyro',\n      multiplier: params[0],\n      stats,\n      modifier,\n    })\n  );\n\n  // Shields\n  for (let i = 0; i < 3; i++) {\n    talentDamage.push(\n      shieldBase({\n        description: `shieldHpLevel${i + 1}`,\n        multiplier: params[2 * i + 1],\n        flatBonus: params[2 * i + 2],\n        element: 'pyro',\n        scalingType: 'defense',\n        stats,\n        modifier,\n      })\n    );\n  }\n\n  talentDamage.push(\n    skillBase({\n      description: 'dot',\n      element: 'pyro',\n      multiplier: params[7],\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function xinyanBurst({ params, stats, modifier }) {\n  return [\n    burstBase({\n      description: 'burstDmg',\n      element: 'physical',\n      multiplier: params[0],\n      stats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'pyroDot',\n      element: 'pyro',\n      multiplier: params[1],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Rosaria\nexport function rosariaAttack({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  // Normal attack\n  talentDamage.push(\n    ...normalAttackMulti({\n      hits: [1, 1, 2, 1],\n      element: 'physical',\n      params,\n      stats,\n      modifier,\n    })\n  );\n\n  let hit5Dmg = [];\n  for (let i = 4; i < 6; i++) {\n    hit5Dmg.push(\n      calculateTotalDamage({\n        stats,\n        multiplier: params[i],\n        element: 'physical',\n        attackType: 'normal',\n        modifier,\n      })\n    );\n  }\n  talentDamage.push({\n    description: '5HitDmg',\n    damage: hit5Dmg,\n  });\n\n  // Charged attack\n  talentDamage.push(\n    ...chargedAttackDefault({\n      element: 'physical',\n      params: params.slice(6, 7),\n      stats,\n      modifier,\n    })\n  );\n\n  // Plunge attack\n  talentDamage.push(\n    ...plungeAttackDefault({\n      element: 'physical',\n      params: params.slice(8, 11),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function rosariaSkill({ params, stats, modifier }) {\n  return [\n    skillMultiBase({\n      description: 'skillDmg',\n      hits: 2,\n      element: 'cryo',\n      params,\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function rosariaBurst({ params, stats, modifier }) {\n  return [\n    burstMultiBase({\n      description: 'burstDmg',\n      hits: 2,\n      element: 'cryo',\n      params,\n      stats,\n      modifier,\n    }),\n\n    burstBase({\n      description: 'iceLanceDot',\n      element: 'cyro',\n      multiplier: params[2],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\n// Hu Tao\nexport function hutaoAttack({ params, stats, modifier }) {\n  const element = modifier.infusion ?? 'physical';\n\n  let talentDamage = [];\n\n  // Normal attack\n  talentDamage.push(\n    ...normalAttackDefault({\n      hits: 4,\n      element,\n      params,\n      stats,\n      modifier,\n    })\n  );\n\n  let hit5Dmg = [];\n  for (let i = 4; i < 6; i++) {\n    hit5Dmg.push(\n      calculateTotalDamage({\n        stats,\n        multiplier: params[i],\n        element,\n        attackType: 'normal',\n        modifier,\n      })\n    );\n  }\n  talentDamage.push({\n    description: '5HitDmg',\n    damage: hit5Dmg,\n  });\n\n  let hit6Dmg = [\n    calculateTotalDamage({\n      stats,\n      multiplier: params[6],\n      element,\n      attackType: 'normal',\n      modifier,\n    }),\n  ];\n  talentDamage.push({\n    description: '6HitDmg',\n    damage: hit6Dmg,\n  });\n\n  // Charged attack\n  talentDamage.push(\n    ...chargedAttackDefault({\n      element,\n      params: params.slice(7, 8),\n      stats,\n      modifier,\n    })\n  );\n\n  // Plunge attack\n  talentDamage.push(\n    ...plungeAttackDefault({\n      element,\n      params: params.slice(9, 12),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function hutaoSkill({ params, stats, modifier }) {\n  return [\n    skillBase({\n      description: 'bloodBlossomDmg',\n      element: 'pyro',\n      multiplier: params[2],\n      stats,\n      modifier,\n    }),\n  ];\n}\n\nexport function hutaoBurst({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  let dmgDescriptions = ['burstDmg', 'burstDmgLowHp'];\n  dmgDescriptions.forEach((description, i) => {\n    talentDamage.push(\n      burstBase({\n        description,\n        element: 'pyro',\n        multiplier: params[i],\n        stats,\n        modifier,\n      })\n    );\n  });\n\n  let regenDescriptions = ['hpRegen', 'hpRegenLowHp'];\n  regenDescriptions.forEach((description, i) => {\n    talentDamage.push(\n      healingSkillBase({\n        description,\n        params: [params[i + 2], 0],\n        stats,\n        modifier,\n      })\n    );\n  });\n\n  return talentDamage;\n}\n\n// Yanfei\nexport function yanfeiAttack({ params, stats, modifier }) {\n  let talentDamage = [];\n\n  // Normal attack\n  talentDamage.push(\n    ...normalAttackDefault({\n      hits: 3,\n      element: 'pyro',\n      params,\n      stats,\n      modifier,\n    })\n  );\n\n  // Charged attack\n  for (let i = 0; i < 5; i++) {\n    let damage = calculateTotalDamage({\n      stats,\n      multiplier: params[i + 3],\n      element: 'pyro',\n      attackType: 'charged',\n      modifier,\n    });\n    talentDamage.push({\n      description: `chargedDmgSeal${i}`,\n      damage: [damage],\n    });\n  }\n\n  // Plunge attack\n  talentDamage.push(\n    ...plungeAttackDefault({\n      element: 'pyro',\n      params: params.slice(15, 18),\n      stats,\n      modifier,\n    })\n  );\n\n  return talentDamage;\n}\n\nexport function yanfeiSkill({ stats, params, modifier }) {\n  return skillDefault({\n    element: 'pyro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function yanfeiBurst({ stats, params, modifier }) {\n  return burstDefault({\n    element: 'pyro',\n    params,\n    stats,\n    modifier,\n  });\n}\n\n// Eula\nexport function eulaAttack({ params, stats, modifier }) {\n  return attackHeavyMulti({\n    normalHits: [1, 1, 2, 1, 2],\n    params,\n    stats,\n    modifier,\n  });\n}\n\nexport function eulaSkill({ params, stats, modifier }) {\n  let descriptions = ['pressDmg', 'holdDmg', 'icewhirlBrandDmg'];\n  return descriptions.map((description, i) => {\n    return skillBase({\n      description,\n      element: 'cryo',\n      multiplier: params[i],\n      stats,\n      modifier,\n    });\n  });\n}\n\nexport function eulaBurst({ params, stats, modifier }) {\n  let talentDmg = [];\n  talentDmg.push(\n    ...burstDefault({\n      element: 'cryo',\n      params,\n      stats,\n      modifier,\n    })\n  );\n\n  let descriptions = ['lightfallSwordBaseDmg', 'lightfallSwordStackDmg'];\n  let lightfallSwordParams = params.slice(1, 3);\n  let lightfallSwordTalent = descriptions.map((description, i) => {\n    return burstBase({\n      description,\n      element: 'physical',\n      multiplier: lightfallSwordParams[i],\n      stats,\n      modifier,\n    });\n  });\n\n  talentDmg.push(...lightfallSwordTalent);\n\n  return talentDmg;\n}\n","export default class Option {\n  // Currently handled types: boolean\n  constructor({\n    id,\n    type,\n    initialValue,\n\n    // Applies the Option onto stats\n    // Mutates stats directly\n    applyOnStats = (\n      stats,\n      value,\n      { talentAttackLevel, talentSkillLevel, talentBurstLevel }\n    ) => {\n      return stats;\n    },\n\n    // Applies the Option onto modifier\n    // Mutates modifier directly\n    applyOnModifier = (modifier, value) => {\n      return modifier;\n    },\n  }) {\n    this.id = id;\n    this.type = type;\n    this.value = initialValue;\n    this._applyOnStats = applyOnStats;\n    this._applyOnModifier = applyOnModifier;\n  }\n\n  applyOnStats(stats, talentAttackLevel, talentSkillLevel, talentBurstLevel) {\n    this._applyOnStats(stats, this.value, {\n      talentAttackLevel,\n      talentSkillLevel,\n      talentBurstLevel,\n    });\n    return stats;\n  }\n\n  applyOnModifier(modifier) {\n    this._applyOnModifier(modifier, this.value);\n    return modifier;\n  }\n\n  // Returns a new Option with the new value\n  withValue(value) {\n    return new Option({\n      id: this.id,\n      type: this.type,\n      initialValue: value,\n      applyOnStats: this._applyOnStats,\n      applyOnModifier: this._applyOnModifier,\n    });\n  }\n}\n","import Option from '../Option.js';\n\nconst dilucOptionInfusion = new Option({\n  id: 'infusionPyro',\n  type: 'boolean',\n  initialValue: false,\n\n  applyOnModifier: (modifier, value) => {\n    if (value === true) {\n      modifier.infusion = 'pyro';\n    }\n  },\n});\n\nexport default [dilucOptionInfusion];\n","import Option from '../Option.js';\nimport { getTalentStatsAt, getTalentData } from '../../Data.js';\n\nconst xiaoOptionBurst = new Option({\n  id: 'xiaoBurst',\n  type: 'boolean',\n  initialValue: false,\n\n  applyOnStats: (stats, value, { talentBurstLevel }) => {\n    if (value === true) {\n      let burstParams = getTalentStatsAt(\n        'burst',\n        talentBurstLevel,\n        getTalentData('xiao')\n      );\n\n      stats.normalDmgBonus = burstParams[0] + (stats.normalDmgBonus ?? 0);\n      stats.chargedDmgBonus = burstParams[0] + (stats.chargedDmgBonus ?? 0);\n      stats.plungeDmgBonus = burstParams[0] + (stats.plungeDmgBonus ?? 0);\n    }\n  },\n\n  applyOnModifier: (modifier, value) => {\n    if (value === true) {\n      modifier.infusion = 'anemo';\n    }\n  },\n});\n\nexport default [xiaoOptionBurst];\n","import Option from '../Option.js';\nimport { getTalentStatsAt, getTalentData } from '../../Data.js';\n\nconst noelleOptionBurst = new Option({\n  id: 'noelleBurst',\n  type: 'boolean',\n  initialValue: false,\n\n  applyOnStats: (stats, value, { talentBurstLevel }) => {\n    if (value === true) {\n      let burstParams = getTalentStatsAt(\n        'burst',\n        talentBurstLevel,\n        getTalentData('noelle')\n      );\n\n      stats.flatAtk = stats.flatAtk + stats.flatDef * burstParams[2];\n    }\n  },\n\n  applyOnModifier: (modifier, value) => {\n    if (value === true) {\n      modifier.infusion = 'geo';\n    }\n  },\n});\n\nexport default [noelleOptionBurst];\n","import Option from '../Option.js';\n\nconst chongyunOptionInfusion = new Option({\n  id: 'infusionCryo',\n  type: 'boolean',\n  initialValue: false,\n\n  applyOnModifier: (modifier, value) => {\n    if (value === true) {\n      modifier.infusion = 'cryo';\n    }\n  },\n});\n\nexport default [chongyunOptionInfusion];\n","import Option from '../Option.js';\nimport { getTalentStatsAt, getTalentData } from '../../Data.js';\n\nconst hutaoOptionSkill = new Option({\n  id: 'paramitaPapilioState',\n  type: 'boolean',\n  initialValue: false,\n\n  applyOnStats: (stats, value, { talentSkillLevel }) => {\n    if (value === true) {\n      let skillParams = getTalentStatsAt(\n        'skill',\n        talentSkillLevel,\n        getTalentData('hutao')\n      );\n      stats.flatAtk += skillParams[1] * stats.flatHp;\n    }\n  },\n\n  applyOnModifier: (modifier, value) => {\n    if (value === true) {\n      modifier.infusion = 'pyro';\n    }\n  },\n});\n\nexport default [hutaoOptionSkill];\n","import Option from '../Option.js';\nimport { getTalentStatsAt, getTalentData } from '../../Data.js';\n\nconst yanfeiOptionBurst = new Option({\n  id: 'brilliance',\n  type: 'boolean',\n  initialValue: false,\n\n  applyOnStats: (stats, value, { talentBurstLevel }) => {\n    if (value === true) {\n      const burstParams = getTalentStatsAt(\n        'burst',\n        talentBurstLevel,\n        getTalentData('yanfei')\n      );\n      stats.chargedDmgBonus = burstParams[1] + (stats.chargedDmgBonus ?? 0);\n    }\n  },\n});\n\nexport default [yanfeiOptionBurst];\n","import * as characterOptions from './characterOptions';\n\nconst defaultOptions = [];\n\n// Type can be character, weapon, or artifact\nexport function getOptions(type, id) {\n  switch (type) {\n    case 'character':\n      return characterOptions[id] ?? defaultOptions;\n    default:\n      return defaultOptions;\n  }\n}\n","import {\n  getCharacterData as getData,\n  getCharacterAscensionBonusData as getAscensionBonusData,\n  getCharacterStatCurveAt as getStatCurveAt,\n  getAscensionBonusAt,\n  getTalentData,\n  getTalentStatsAt,\n} from './Data.js';\n\nimport * as talents from './Talent.js';\nimport { getOptions } from './option';\n\nexport default class Character {\n  constructor(id) {\n    this.id = id;\n\n    const data = getData(id);\n    this.name = data.name;\n    this.baseStats = data.baseStats;\n    this.statCurveMapping = data.statCurves;\n    this.ascensionBonuses = getAscensionBonusData(id);\n\n    this.talents = getTalentData(id);\n  }\n\n  // Returns an Object containing the character's innate total HP, Atk and Def, taking into account only their level and ascension\n  getInnateStatsAt(level, hasAscended) {\n    if (isNaN(level) || level < 1 || level > 90) {\n      // Return nulls if level is invalid\n      let innateStats;\n      if (this.innateStats !== undefined) {\n        // Copy all of innateStats' properties to a new object and initialize them to null\n        innateStats = Object.keys(this.innateStats).reduce((obj, stat) => {\n          obj[stat] = null;\n          return obj;\n        }, {});\n      } else {\n        innateStats = {};\n      }\n\n      this.innateStats = innateStats;\n      this.level = level;\n      this.hasAscended = hasAscended;\n\n      return innateStats;\n    }\n    // If getStatsAt has not been called before, this.level, this.hasAscended, and this.stats will be undefined\n    else if (level === this.level && hasAscended === this.hasAscended) {\n      // Don't recalculate stats if it has been calculated with the same parameters before\n      return this.innateStats;\n    } else {\n      // Initialize stats with character level 1 base stats\n      let innateStats = { ...this.baseStats };\n\n      let charStatCurves = getStatCurveAt(level);\n\n      // Calculate stats from character level\n      Object.entries(this.statCurveMapping).forEach(([stat, curve]) => {\n        let multiplier = charStatCurves[curve];\n        innateStats[stat] *= multiplier;\n      });\n\n      // Calculate stats from character ascension\n      let ascensionLevel;\n      if (level > 80 || (level == 80 && hasAscended)) {\n        ascensionLevel = 6;\n      } else if (level > 70 || (level == 70 && hasAscended)) {\n        ascensionLevel = 5;\n      } else if (level > 60 || (level == 60 && hasAscended)) {\n        ascensionLevel = 4;\n      } else if (level > 50 || (level == 50 && hasAscended)) {\n        ascensionLevel = 3;\n      } else if (level > 40 || (level == 40 && hasAscended)) {\n        ascensionLevel = 2;\n      } else if (level > 20 || (level == 20 && hasAscended)) {\n        ascensionLevel = 1;\n      } else {\n        ascensionLevel = 0;\n      }\n      let ascensionBonuses = getAscensionBonusAt(\n        ascensionLevel,\n        this.ascensionBonuses\n      );\n\n      if (ascensionBonuses !== undefined) {\n        Object.entries(ascensionBonuses).forEach(([stat, bonus]) => {\n          if (stat in innateStats) {\n            innateStats[stat] += bonus;\n          } else {\n            innateStats[stat] = bonus;\n          }\n        });\n      }\n\n      this.innateStats = innateStats;\n      this.level = level;\n      this.hasAscended = hasAscended;\n\n      return innateStats;\n    }\n  }\n\n  // Return an Object with description and damage properties\n  getTalentDamageAt({ type, talentLevel, totalStats, modifier }) {\n    const params = getTalentStatsAt(\n      type.toLowerCase(),\n      talentLevel,\n      this.talents\n    );\n\n    let damageFn = talents[this.id + type];\n    if (damageFn === undefined) {\n      damageFn = talents['defaultTalent'];\n    }\n\n    let damage = damageFn({\n      params,\n      stats: totalStats,\n      modifier,\n    });\n\n    return damage;\n  }\n\n  getOptions() {\n    return getOptions('character', this.id);\n  }\n}\n","import {\n  getWeaponData as getData,\n  getWeaponAscensionBonusData as getAscensionBonusData,\n  getWeaponStatCurveAt as getStatCurveAt,\n  getAscensionBonusAt,\n} from './Data.js';\n\nexport default class Weapon {\n  constructor(id) {\n    this.id = id;\n\n    const data = getData(id);\n    this.name = data.name;\n    this.type = data.type;\n    this.rank = data.rank;\n    this.baseStats = data.baseStats;\n    this.statCurveMapping = data.statCurves;\n    this.ascensionBonuses = getAscensionBonusData(id);\n  }\n\n  // Returns an Object containing the weapons's HP, Atk and Def, taking into account only its level and ascension\n  getStatsAt(weaponLevel, hasAscended) {\n    if (\n      isNaN(weaponLevel) ||\n      weaponLevel < 1 ||\n      (this.rank <= 2 && weaponLevel > 70) ||\n      weaponLevel > 90\n    ) {\n      // Return nulls if weapon level is invalid\n      let weaponStats;\n      if (this.stats !== undefined) {\n        // Copy all of stats' properties to a new object and initialize them to null\n        weaponStats = Object.keys(this.stats).reduce((obj, stat) => {\n          obj[stat] = null;\n          return obj;\n        }, {});\n      } else {\n        weaponStats = {};\n      }\n\n      this.stats = weaponStats;\n      this.weaponLevel = weaponLevel;\n      this.hasAscended = hasAscended;\n\n      return weaponStats;\n    }\n    // If getStatsAt has not been called before, this.weaponLevel, this.hasAscended, and this.stats will be undefined\n    else if (\n      weaponLevel === this.weaponLevel &&\n      hasAscended === this.hasAscended\n    ) {\n      // Don't recalculate stats if it has been calculated with the same parameters before\n      return this.stats;\n    } else {\n      // Level 1 weapon stats\n      let weaponStats = { ...this.baseStats };\n\n      let weaponStatCurves = getStatCurveAt(weaponLevel);\n\n      // Calculate stats from weapon level\n      Object.entries(this.statCurveMapping).forEach(([stat, curve]) => {\n        let multiplier = weaponStatCurves[curve];\n        weaponStats[stat] *= multiplier;\n      });\n\n      // Calculate stats from weapon ascension\n      let ascensionLevel;\n      // Only 3-star and above weapons can be ascended beyond level 70\n      if (\n        this.rank > 2 &&\n        (weaponLevel > 80 || (weaponLevel == 80 && hasAscended))\n      ) {\n        ascensionLevel = 6;\n      } else if (\n        this.rank > 2 &&\n        (weaponLevel > 70 || (weaponLevel == 70 && hasAscended))\n      ) {\n        ascensionLevel = 5;\n      } else if (weaponLevel > 60 || (weaponLevel == 60 && hasAscended)) {\n        ascensionLevel = 4;\n      } else if (weaponLevel > 50 || (weaponLevel == 50 && hasAscended)) {\n        ascensionLevel = 3;\n      } else if (weaponLevel > 40 || (weaponLevel == 40 && hasAscended)) {\n        ascensionLevel = 2;\n      } else if (weaponLevel > 20 || (weaponLevel == 20 && hasAscended)) {\n        ascensionLevel = 1;\n      } else {\n        ascensionLevel = 0;\n      }\n      let ascensionBonuses = getAscensionBonusAt(\n        ascensionLevel,\n        this.ascensionBonuses\n      );\n\n      if (ascensionBonuses !== undefined) {\n        Object.entries(ascensionBonuses).forEach(([stat, bonus]) => {\n          if (stat in weaponStats) {\n            weaponStats[stat] += bonus;\n          } else {\n            weaponStats[stat] = bonus;\n          }\n        });\n      }\n\n      this.stats = weaponStats;\n      this.weaponLevel = weaponLevel;\n      this.hasAscended = hasAscended;\n\n      return weaponStats;\n    }\n  }\n}\n","import { talentDescMapping, optionMapping } from './Data.js';\n\n// Returns the string to display as the value of a stat\nexport function getStatDisplayValue(value, isPercentage) {\n  if (value != null) {\n    if (isPercentage) {\n      return (value * 100).toFixed(1) + '%';\n    } else {\n      return Math.round(value);\n    }\n  } else {\n    return '-';\n  }\n}\n\n// Returns the string to display as the talent damage\nexport function getDamageDisplayValue(values) {\n  let str = '';\n\n  if (values.length === 0) {\n    return str;\n  }\n\n  if (isNaN(values[0])) {\n    return '-';\n  } else {\n    str += Math.round(values[0]);\n  }\n\n  if (values.length >= 3 && values.every((value) => value === values[0])) {\n    // All elements are the same, simplify to ${damage} x${count}\n    str += ' x ' + values.length;\n  } else {\n    // Less than 3 elements, or elements are different\n    values.slice(1).forEach((value) => {\n      if (isNaN(value)) {\n        return '-';\n      } else {\n        str += ' + ' + Math.round(value);\n      }\n    });\n  }\n\n  return str;\n}\n\n// Returns the display name of a talent option\nexport function getOptionName(id) {\n  return optionMapping[id];\n}\n\n// Returns a Number representing the inputed value of a stat\n// Returns null if the input is not a valid stat value\nexport function convertStatValue(value, isPercentage) {\n  if (isPercentage) {\n    return value / 100;\n  } else {\n    return value;\n  }\n}\n\nexport function getTalentDescription(desc) {\n  return talentDescMapping[desc];\n}\n\n// Returns object containing base stats of character with the passed weapon\n// Base stats = character innate stats + weapon stats\nfunction getBaseStatsAt(\n  weapon,\n  weaponLevel,\n  weaponHasAscended,\n  character,\n  characterLevel,\n  characterHasAscended\n) {\n  let weaponStats;\n  if (weapon !== undefined) {\n    weaponStats = weapon.getStatsAt(weaponLevel, weaponHasAscended);\n  } else {\n    weaponStats = {};\n  }\n\n  let characterStats;\n  if (character !== undefined) {\n    characterStats = character.getInnateStatsAt(\n      characterLevel,\n      characterHasAscended\n    );\n  } else {\n    characterStats = {};\n  }\n\n  // Merges weaponStats and innateStats into a new baseStats object\n  let baseStats = { ...weaponStats };\n  Object.entries(characterStats).map(([stat, value]) => {\n    if (baseStats[stat] === undefined) {\n      baseStats[stat] = value;\n    } else {\n      baseStats[stat] += value;\n    }\n  });\n\n  return baseStats;\n}\n\n// Returns object containing the total stats of the character, weapon and artifacts\n// Ignores any of [character, weapon] that are undefined\nexport function getTotalStatsAt(\n  weapon,\n  weaponLevel,\n  weaponHasAscended,\n  character,\n  characterLevel,\n  characterHasAscended,\n  artifactSetBonuses,\n  artifacts,\n  talentAttackLevel,\n  talentSkillLevel,\n  talentBurstLevel,\n  options\n) {\n  let baseStats = getBaseStatsAt(\n    weapon,\n    weaponLevel,\n    weaponHasAscended,\n    character,\n    characterLevel,\n    characterHasAscended\n  );\n  let combinedStats = { ...baseStats };\n\n  // Merge base stats and artifact set bonuses\n  if (artifactSetBonuses !== undefined) {\n    Object.entries(artifactSetBonuses).forEach(([stat, value]) => {\n      if (combinedStats[stat] === undefined) {\n        combinedStats[stat] = value;\n      } else {\n        combinedStats[stat] += value;\n      }\n    });\n  }\n\n  // Merge artifact bonuses into separate object\n  let artifactStats = {};\n  artifacts.forEach((artifact) => {\n    Object.entries(artifact.getStats()).forEach(([stat, value]) => {\n      if (artifactStats[stat] === undefined) {\n        artifactStats[stat] = value;\n      } else {\n        artifactStats[stat] += value;\n      }\n    });\n  });\n\n  // Merge base stats and artifact bonuses\n  Object.entries(artifactStats).forEach(([stat, value]) => {\n    if (combinedStats[stat] === undefined) {\n      combinedStats[stat] = value;\n    } else {\n      combinedStats[stat] += value;\n    }\n  });\n\n  // Calculate total stats\n  let totalStats = {};\n\n  totalStats.baseAtk = combinedStats.baseAtk ? combinedStats.baseAtk : 0;\n\n  totalStats.flatAtk =\n    (combinedStats.baseAtk ? combinedStats.baseAtk : 0) *\n      (1 + (combinedStats.atkBonus ? combinedStats.atkBonus : 0)) +\n    (combinedStats.flatAtk ? combinedStats.flatAtk : 0);\n  totalStats.flatDef =\n    (combinedStats.baseDef ? combinedStats.baseDef : 0) *\n      (1 + (combinedStats.defBonus ? combinedStats.defBonus : 0)) +\n    (combinedStats.flatDef ? combinedStats.flatDef : 0);\n  totalStats.flatHp =\n    (combinedStats.baseHp ? combinedStats.baseHp : 0) *\n      (1 + (combinedStats.hpBonus ? combinedStats.hpBonus : 0)) +\n    (combinedStats.flatHp ? combinedStats.flatHp : 0);\n  totalStats.critRate = combinedStats.critRate ? combinedStats.critRate : 0;\n  totalStats.critDmg = combinedStats.critDmg ? combinedStats.critDmg : 0;\n  totalStats.elementalMastery = combinedStats.elementalMastery\n    ? combinedStats.elementalMastery\n    : 0;\n  totalStats.energyRecharge =\n    1 + (combinedStats.energyRecharge ? combinedStats.energyRecharge : 0);\n\n  combinedStats.anemoDmgBonus\n    ? (totalStats.anemoDmgBonus = combinedStats.anemoDmgBonus)\n    : null;\n  combinedStats.cryoDmgBonus\n    ? (totalStats.cryoDmgBonus = combinedStats.cryoDmgBonus)\n    : null;\n  combinedStats.electroDmgBonus\n    ? (totalStats.electroDmgBonus = combinedStats.electroDmgBonus)\n    : null;\n  combinedStats.geoDmgBonus\n    ? (totalStats.geoDmgBonus = combinedStats.geoDmgBonus)\n    : null;\n  combinedStats.hydroDmgBonus\n    ? (totalStats.hydroDmgBonus = combinedStats.hydroDmgBonus)\n    : null;\n  combinedStats.pyroDmgBonus\n    ? (totalStats.pyroDmgBonus = combinedStats.pyroDmgBonus)\n    : null;\n  combinedStats.physicalDmgBonus\n    ? (totalStats.physicalDmgBonus = combinedStats.physicalDmgBonus)\n    : null;\n\n  combinedStats.anemoRes\n    ? (totalStats.anemoRes = combinedStats.anemoRes)\n    : null;\n  combinedStats.cryoRes ? (totalStats.cryoRes = combinedStats.cryoRes) : null;\n  combinedStats.electroRes\n    ? (totalStats.electroRes = combinedStats.electroRes)\n    : null;\n  combinedStats.geoRes ? (totalStats.geoRes = combinedStats.geoRes) : null;\n  combinedStats.hydroRes\n    ? (totalStats.hydroRes = combinedStats.hydroRes)\n    : null;\n  combinedStats.pyroRes ? (totalStats.pyroRes = combinedStats.pyroRes) : null;\n  combinedStats.physicalRes\n    ? (totalStats.physicalRes = combinedStats.physicalRes)\n    : null;\n\n  combinedStats.healingBonus\n    ? (totalStats.healingBonus = combinedStats.healingBonus)\n    : null;\n\n  options.forEach((option) => {\n    option.applyOnStats(\n      totalStats,\n      talentAttackLevel,\n      talentSkillLevel,\n      talentBurstLevel\n    );\n  });\n\n  return totalStats;\n}\n\nexport function capitalize(str) {\n  return str[0].toUpperCase().concat(str.slice(1));\n}\n","import * as statUtils from './Stat.js';\n\nexport default class Artifact {\n  mainStat = {\n    stat: 0,\n    rawValue: NaN,\n    value: NaN,\n  };\n\n  subStats = [\n    {\n      stat: 0,\n      rawValue: NaN,\n      value: NaN,\n    },\n    {\n      stat: 0,\n      rawValue: NaN,\n      value: NaN,\n    },\n    {\n      stat: 0,\n      rawValue: NaN,\n      value: NaN,\n    },\n    {\n      stat: 0,\n      rawValue: NaN,\n      value: NaN,\n    },\n  ];\n\n  constructor(type) {\n    this.type = type;\n  }\n\n  // Can be called with one of the two of stat and value (the other will be undefined)\n  setStat(statObj, stat, value, isPercentage = false) {\n    if (stat == undefined && value != undefined) {\n      statObj.rawValue = value;\n      statObj.value = statUtils.convertStatValue(value, isPercentage);\n    } else if (stat != undefined && value == undefined) {\n      statObj.stat = stat;\n      statObj.value = statUtils.convertStatValue(\n        statObj.rawValue,\n        isPercentage\n      );\n    } else if (stat != undefined && value != undefined) {\n      statObj.stat = stat;\n      statObj.rawValue = value;\n      statObj.value = statUtils.convertStatValue(value, isPercentage);\n    }\n  }\n\n  /*\n    setMainStat(stat, value, isPercentage = false) {\n        this.setStat(this.mainStat, stat, value, isPercentage);\n    }\n\n    // Set substat in a spefiic position\n    setSubStat(pos, stat, value, isPercentage = false) {\n        this.setStat(this.subStats[pos], stat, value, isPercentage);\n    }\n    */\n\n  // Returns object containing stat: value mapping, including both main stat and substats\n  getStats() {\n    let stats = {};\n\n    if (this.mainStat.stat != 0) {\n      if (!isNaN(this.mainStat.value)) {\n        stats[this.mainStat.stat] = this.mainStat.value;\n      } else {\n        stats[this.mainStat.stat] = null;\n      }\n    }\n\n    this.subStats.forEach((subStat) => {\n      if (subStat.stat != 0) {\n        if (!isNaN(subStat.value)) {\n          stats[subStat.stat] = subStat.value;\n        } else {\n          stats[subStat.stat] = null;\n        }\n      }\n    });\n\n    return stats;\n  }\n}\n\nexport const mainStatProps = {\n  Flower: ['flatHp'],\n\n  Feather: ['flatAtk'],\n\n  Sands: [\n    'hpBonus',\n    'atkBonus',\n    'defBonus',\n    'elementalMastery',\n    'energyRecharge',\n  ],\n\n  Goblet: [\n    'hpBonus',\n    'atkBonus',\n    'defBonus',\n    'elementalMastery',\n    'anemoDmgBonus',\n    'cryoDmgBonus',\n    'electroDmgBonus',\n    'geoDmgBonus',\n    'hydroDmgBonus',\n    'pyroDmgBonus',\n    'physicalDmgBonus',\n  ],\n\n  Circlet: [\n    'hpBonus',\n    'atkBonus',\n    'defBonus',\n    'elementalMastery',\n    'critRate',\n    'critDmg',\n    'healingBonus',\n  ],\n};\n\nexport const subStatProps = [\n  'flatHp',\n  'flatAtk',\n  'flatDef',\n  'hpBonus',\n  'atkBonus',\n  'defBonus',\n  'elementalMastery',\n  'energyRecharge',\n  'critRate',\n  'critDmg',\n];\n","// Placeholder function\nexport function defaultSetBonus() {\n  return [];\n}\n","import { getArtifactSetData, getArtifactSetBonusData } from './Data.js';\nimport * as extraBonuses from './ArtifactSetBonus.js';\n\nexport default class ArtifactSet {\n  constructor(id) {\n    this.id = id;\n\n    const data = getArtifactSetData(id);\n    this.name = data.name;\n    this.bonusThresholds = data.bonusThresholds;\n\n    this.setBonuses = getArtifactSetBonusData(id);\n  }\n\n  getSetBonusesAt(pieces) {\n    return this.bonusThresholds\n      .filter((threshold) => pieces >= threshold)\n      .map((threshold) => this.setBonuses[threshold]);\n  }\n\n  getStatsAt(pieces) {\n    let stats = {};\n\n    let setBonuses = this.getSetBonusesAt(pieces);\n    setBonuses.forEach((setBonus) => {\n      // Normal stat bonuses\n      setBonus.bonuses.forEach((statBonus) => {\n        if (stats[statBonus.stat] !== undefined) {\n          stats[statBonus.stat] += statBonus.value;\n        } else {\n          stats[statBonus.stat] = statBonus.value;\n        }\n      });\n\n      // Special bonuses, has to be handled individually\n      let extraBonus = setBonus.bonusExtra;\n      if (extraBonus.type !== '') {\n        let bonusFn = extraBonuses[extraBonus.type];\n        if (bonusFn === undefined) {\n          bonusFn = extraBonuses['defaultSetBonus'];\n        }\n\n        let params = extraBonus.params;\n\n        let statBonuses = bonusFn(params);\n\n        statBonuses.forEach((statBonus) => {\n          if (stats[statBonus.stat] !== undefined) {\n            stats[statBonus.stat] += statBonus.value;\n          } else {\n            stats[statBonus.stat] = statBonus.value;\n          }\n        });\n      }\n    });\n\n    return stats;\n  }\n}\n","import Resistance from './Resistance';\n\nexport default class DamageModifier {\n  constructor({\n    characterLevel,\n    enemyLevel = 1,\n    enemyDefReduction = 0,\n    enemyRes = new Resistance({}),\n    enemyResReduction = new Resistance({}),\n    modifiers = {},\n    critType = 'none',\n    flatDmg = 0,\n    reaction = 'none',\n    talentAttackLevel,\n    talentSkillLevel,\n    talentBurstLevel,\n    options = [],\n  }) {\n    this.characterLevel = characterLevel;\n    this.enemyLevel = enemyLevel;\n    this.enemyDefReduction = enemyDefReduction;\n    this.enemyRes = enemyRes;\n    this.enemyResReduction = enemyResReduction;\n    this.modifiers = modifiers;\n    this.critType = critType;\n    this.flatDmg = flatDmg;\n    this.reaction = reaction;\n    this.talentAttackLevel = talentAttackLevel;\n    this.talentSkillLevel = talentSkillLevel;\n    this.talentBurstLevel = talentBurstLevel;\n\n    options.forEach((option) => {\n      option.applyOnModifier(this);\n    });\n  }\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'stretch',\n\n    fontSize: 14,\n\n    height: '100%',\n\n    backgroundColor: '#fff',\n  },\n\n  inputColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    padding: '1%',\n\n    borderRightWidth: 1,\n\n    backgroundColor: '#ccc',\n  },\n\n  inputRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n\n    marginVertical: '0.25em',\n  },\n\n  levelInput: {\n    width: '2em',\n  },\n\n  statInput: {\n    width: '3em',\n  },\n\n  buttonGroupContainer: {\n    height: 'initial',\n\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: 0,\n    marginRight: 0,\n\n    borderRadius: 2,\n    borderColor: '#000',\n\n    backgroundColor: '#ccc',\n  },\n\n  buttonGroupButtonContainer: {\n    borderRightColor: '#000',\n    width: '4em',\n  },\n\n  buttonGroupText: {\n    fontSize: '1em',\n    fontWeight: 400,\n    color: '#000',\n  },\n\n  buttonGroupSelectedButton: {\n    backgroundColor: '#eee',\n  },\n\n  buttonGroupSelectedText: {\n    color: '#000',\n  },\n\n  resultColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    borderRightWidth: 1,\n\n    backgroundColor: '#eee',\n  },\n\n  resultBlockNoBorder: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    padding: '0.8em',\n  },\n\n  resultBlock: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    padding: '0.8em',\n    borderBottomWidth: 1,\n  },\n\n  artifactBlockNoBorder: {\n    display: 'flex',\n    flexDirection: 'column',\n    paddingTop: '0.5em',\n    paddingBottom: '0.7em',\n  },\n\n  artifactBlock: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    paddingTop: '0.5em',\n    paddingBottom: '0.7em',\n\n    borderStyle: 'dashed',\n    borderBottomWidth: 1,\n  },\n\n  characterImage: {\n    marginVertical: '0.25em',\n  },\n\n  titleText: {\n    fontSize: '1.5em',\n    fontWeight: '200',\n\n    marginVertical: '0.17em',\n  },\n\n  artifactType: {\n    fontSize: '1.2em',\n    fontWeight: '200',\n\n    marginVertical: '0.21em',\n  },\n\n  artifactStatType: {\n    marginVertical: '0.25em',\n  },\n\n  resultText: {\n    marginVertical: '0.25em',\n  },\n\n  fillerColumn: {\n    flexGrow: 1,\n\n    backgroundColor: '#eee',\n  },\n});\n","import { Picker } from '@react-native-picker/picker';\nimport Checkbox from 'expo-checkbox';\nimport { ButtonGroup } from 'react-native-elements';\nimport React, { Component } from 'react';\nimport { FlatList, Image, Text, TextInput, View } from 'react-native';\n\nimport Character from './js/Character.js';\nimport Weapon from './js/Weapon.js';\nimport Artifact, { mainStatProps, subStatProps } from './js/Artifact.js';\nimport ArtifactSet from './js/ArtifactSet.js';\nimport DamageModifier from './js/DamageModifer.js';\nimport Resistance from './js/Resistance.js';\nimport * as statUtils from './js/Stat.js';\nimport * as data from './js/Data.js';\n\nimport styles from './js/Styles.js';\n\nexport default class App extends Component {\n  // Constants\n  elements = ['anemo', 'cryo', 'electro', 'geo', 'hydro', 'pyro', 'physical'];\n\n  // Class properties\n  character;\n  weapon;\n  artifactSetStats;\n  artifactFlower;\n  artifactFeather;\n  artifactSands;\n  artifactGoblet;\n  artifactCirclet;\n\n  constructor() {\n    super();\n\n    // Initialize sorted list of characters and weapons\n    this.characters = data.getSortedCharacterList();\n    this.weapons = data.getSortedWeaponList();\n    this.artifacts = data.getSortedArtifactSetList();\n\n    this.artifactFlower = new Artifact('Flower');\n    this.artifactFeather = new Artifact('Feather');\n    this.artifactSands = new Artifact('Sands');\n    this.artifactGoblet = new Artifact('Goblet');\n    this.artifactCirclet = new Artifact('Circlet');\n\n    this.artifactSets = [0, 0, 0];\n\n    this.state = {\n      characterId: undefined,\n      characterLevel: 1,\n      isCharacterAscended: false,\n\n      weaponId: undefined,\n      weaponLevel: 1,\n      isWeaponAscended: false,\n\n      artifactSet1Id: undefined,\n      artifactSet1Pc: undefined,\n      artifactSet2Id: undefined,\n      artifactSet2Pc: undefined,\n      artifactSet3Id: undefined,\n      artifactSet3Pc: undefined,\n\n      talentAttackLevel: 1,\n      talentSkillLevel: 1,\n      talentBurstLevel: 1,\n\n      critType: 'none',\n      enemyLevel: 1,\n      enemyRes: new Resistance({}),\n\n      characterStats: undefined,\n      weaponStats: undefined,\n      totalStats: undefined,\n\n      talentAttackDamage: undefined,\n      talentSkillDamage: undefined,\n      talentBurstDamage: undefined,\n\n      options: [],\n    };\n  }\n\n  renderInputColumn = () => {\n    return (\n      <View>\n        {this.renderCharacterList()}\n\n        <View style={styles.inputRow}>\n          <Text>Level: </Text>\n          <TextInput\n            style={styles.levelInput}\n            defaultValue={this.state.characterLevel}\n            onChangeText={(text) => {\n              this.setState(\n                { characterLevel: parseInt(text) },\n                this.setCharacterState\n              );\n            }}\n          />\n        </View>\n\n        <View style={styles.inputRow}>\n          <Text>Ascended? </Text>\n          <Checkbox\n            onValueChange={(value) =>\n              this.setState(\n                { isCharacterAscended: value },\n                this.setCharacterState\n              )\n            }\n            value={this.state.isCharacterAscended}\n          />\n        </View>\n\n        <Text> </Text>\n\n        {this.renderWeaponList()}\n\n        <View style={styles.inputRow}>\n          <Text>Level: </Text>\n          <TextInput\n            style={styles.levelInput}\n            defaultValue={this.state.weaponLevel}\n            onChangeText={(text) => {\n              this.setState(\n                { weaponLevel: parseInt(text) },\n                this.setWeaponState\n              );\n            }}\n          />\n        </View>\n\n        <View style={styles.inputRow}>\n          <Text>Ascended? </Text>\n          <Checkbox\n            onValueChange={(value) =>\n              this.setState({ isWeaponAscended: value }, this.setWeaponState)\n            }\n            value={this.state.isWeaponAscended}\n          />\n        </View>\n\n        <Text> </Text>\n\n        <Text>Artifact Sets</Text>\n        {this.artifactSets.map((_, i) => this.renderArtifactSetInput(i))}\n\n        <Text> </Text>\n\n        <View style={styles.inputRow}>\n          <Text>Attack Talent Level: </Text>\n          <TextInput\n            style={styles.levelInput}\n            defaultValue={this.state.talentAttackLevel}\n            onChangeText={(text) => {\n              this.setState(\n                { talentAttackLevel: parseInt(text) },\n                this.setStatTalentState\n              );\n            }}\n          />\n        </View>\n\n        <View style={styles.inputRow}>\n          <Text>Skill Talent Level: </Text>\n          <TextInput\n            style={styles.levelInput}\n            defaultValue={this.state.talentSkillLevel}\n            onChangeText={(text) => {\n              this.setState(\n                { talentSkillLevel: parseInt(text) },\n                this.setStatTalentState\n              );\n            }}\n          />\n        </View>\n\n        <View style={styles.inputRow}>\n          <Text>Burst Talent Level: </Text>\n          <TextInput\n            style={styles.levelInput}\n            defaultValue={this.state.talentBurstLevel}\n            onChangeText={(text) => {\n              this.setState(\n                { talentBurstLevel: parseInt(text) },\n                this.setStatTalentState\n              );\n            }}\n          />\n        </View>\n\n        <Text> </Text>\n\n        <View style={styles.inputRow}>\n          <Text>Crit: </Text>\n          <ButtonGroup\n            buttons={['None', 'Crit', 'Average']}\n            containerStyle={styles.buttonGroupContainer}\n            buttonContainerStyle={styles.buttonGroupButtonContainer}\n            textStyle={styles.buttonGroupText}\n            selectedButtonStyle={styles.buttonGroupSelectedButton}\n            selectedTextStyle={styles.buttonGroupSelectedText}\n            selectedIndex={(() => {\n              if (this.state.critType === 'crit') {\n                return 1;\n              } else if (this.state.critType === 'average') {\n                return 2;\n              } else {\n                return 0;\n              }\n            })()}\n            onPress={(selectedIndex) => {\n              if (selectedIndex === 1) {\n                this.setState({ critType: 'crit' }, this.setAllTalentState);\n              } else if (selectedIndex === 2) {\n                this.setState({ critType: 'average' }, this.setAllTalentState);\n              } else {\n                this.setState({ critType: 'none' }, this.setAllTalentState);\n              }\n            }}\n          />\n        </View>\n\n        <View style={styles.inputRow}>\n          <Text>Enemy Level: </Text>\n          <TextInput\n            style={styles.levelInput}\n            defaultValue={this.state.enemyLevel}\n            onChangeText={(text) => {\n              this.setState(\n                { enemyLevel: parseInt(text) },\n                this.setAllTalentState\n              );\n            }}\n          />\n        </View>\n\n        {this.elements.map((element) => {\n          return (\n            <View style={styles.inputRow} key={element}>\n              <Text>Enemy {statUtils.capitalize(element)} RES: </Text>\n              <TextInput\n                style={styles.levelInput}\n                defaultValue={this.state.enemyRes[element]}\n                onChangeText={(text) => {\n                  this.state.enemyRes.set(element, parseFloat(text));\n                  let enemyRes = this.state.enemyRes;\n                  this.setState({ enemyRes }, this.setAllTalentState);\n                }}\n              />\n              <Text>%</Text>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderCharacterList = () => {\n    return (\n      <View style={styles.inputRow}>\n        <Text>Character: </Text>\n        <Picker\n          style={styles.characterSelect}\n          selectedValue={this.state.characterId}\n          onValueChange={(value, _) => {\n            if (value != 0) {\n              this.character = new Character(value);\n              this.setState(\n                {\n                  characterId: value,\n                  options: this.character.getOptions(),\n                },\n                this.setCharacterState\n              );\n            }\n          }}\n        >\n          <Picker.Item label='' value={0} />\n          {this.characters.map((id) => (\n            <Picker.Item\n              label={data.getCharacterData(id).name}\n              value={id}\n              key={id}\n            />\n          ))}\n        </Picker>\n      </View>\n    );\n  };\n\n  renderWeaponList = () => {\n    return (\n      <View style={styles.inputRow}>\n        <Text>Weapon: </Text>\n        <Picker\n          style={styles.characterSelect}\n          selectedValue={this.state.weaponId}\n          onValueChange={(value, _) => {\n            if (value != 0) {\n              this.weapon = new Weapon(value);\n              this.setState({ weaponId: value }, this.setWeaponState);\n            }\n          }}\n        >\n          <Picker.Item label='' value={0} />\n          {this.weapons.map((id) => (\n            <Picker.Item\n              label={data.getWeaponData(id).name}\n              value={id}\n              key={id}\n            />\n          ))}\n        </Picker>\n      </View>\n    );\n  };\n\n  renderArtifactSetInput = (i) => {\n    return (\n      <View style={styles.inputRow} key={i}>\n        <Picker\n          style={styles.characterSelect}\n          selectedValue={this.state[`artifactSet${i + 1}Id`]}\n          onValueChange={(value, _) => {\n            if (value != 0) {\n              this.artifactSets[i] = new ArtifactSet(value);\n              this.setState(\n                { [`artifactSet${i + 1}Id`]: value },\n                this.setArtifactSetState\n              );\n            }\n          }}\n        >\n          <Picker.Item label='' value={0} />\n          {this.artifacts.map((id) => (\n            <Picker.Item\n              label={data.getArtifactSetData(id).name}\n              value={id}\n              key={id}\n            />\n          ))}\n        </Picker>\n\n        <Text> : </Text>\n\n        <TextInput\n          style={styles.levelInput}\n          defaultValue={this.state[`artifactSet${i + 1}Pc`]}\n          onChangeText={(text) => {\n            this.setState(\n              { [`artifactSet${i + 1}Pc`]: parseInt(text) },\n              this.setArtifactSetState\n            );\n          }}\n        />\n\n        <Text>pc</Text>\n      </View>\n    );\n  };\n\n  renderCharacterImage = () => {\n    let imageUrl = `https://rerollcdn.com/GENSHIN/Characters/${this.character.name}.png`;\n    return (\n      <Image\n        style={styles.characterImage}\n        source={{ uri: imageUrl, width: 70, height: 70 }}\n      />\n    );\n  };\n\n  getDamageModifier = () => {\n    let modifier = new DamageModifier({\n      characterLevel: this.state.characterLevel,\n      critType: this.state.critType,\n      enemyLevel: this.state.enemyLevel,\n      enemyRes: this.state.enemyRes,\n      talentAttackLevel: this.state.talentAttackLevel,\n      talentSkillLevel: this.state.talentSkillLevel,\n      talentBurstLevel: this.state.talentBurstLevel,\n      options: this.state.options,\n    });\n\n    return modifier;\n  };\n\n  setCharacterState = () => {\n    if (this.character !== undefined) {\n      let stats = this.character.getInnateStatsAt(\n        this.state.characterLevel,\n        this.state.isCharacterAscended\n      );\n      let totalStats = this.getTotalStats();\n      let modifier = this.getDamageModifier();\n\n      let talentAttackDamage = this.character.getTalentDamageAt({\n        type: 'Attack',\n        talentLevel: this.state.talentAttackLevel,\n        totalStats,\n        modifier,\n      });\n\n      let talentSkillDamage = this.character.getTalentDamageAt({\n        type: 'Skill',\n        talentLevel: this.state.talentSkillLevel,\n        totalStats,\n        modifier,\n      });\n\n      let talentBurstDamage = this.character.getTalentDamageAt({\n        type: 'Burst',\n        talentLevel: this.state.talentBurstLevel,\n        totalStats,\n        modifier,\n      });\n\n      this.setState({\n        characterStats: stats,\n        totalStats: totalStats,\n        talentAttackDamage: talentAttackDamage,\n        talentSkillDamage: talentSkillDamage,\n        talentBurstDamage: talentBurstDamage,\n      });\n    }\n  };\n\n  setWeaponState = () => {\n    if (this.weapon !== undefined) {\n      let stats = this.weapon.getStatsAt(\n        this.state.weaponLevel,\n        this.state.isweaponAscended\n      );\n      let totalStats = this.getTotalStats();\n      let modifier = this.getDamageModifier();\n\n      let talentAttackDamage, talentSkillDamage, talentBurstDamage;\n      if (this.character !== undefined) {\n        talentAttackDamage = this.character.getTalentDamageAt({\n          type: 'Attack',\n          talentLevel: this.state.talentAttackLevel,\n          totalStats,\n          modifier,\n        });\n\n        talentSkillDamage = this.character.getTalentDamageAt({\n          type: 'Skill',\n          talentLevel: this.state.talentSkillLevel,\n          totalStats,\n          modifier,\n        });\n\n        talentBurstDamage = this.character.getTalentDamageAt({\n          type: 'Burst',\n          talentLevel: this.state.talentBurstLevel,\n          totalStats,\n          modifier,\n        });\n      }\n\n      this.setState({\n        weaponStats: stats,\n        totalStats: totalStats,\n        talentAttackDamage: talentAttackDamage,\n        talentSkillDamage: talentSkillDamage,\n        talentBurstDamage: talentBurstDamage,\n      });\n    }\n  };\n\n  setArtifactSetState = () => {\n    if (!this.artifactSets.every((value) => value === 0)) {\n      this.artifactSetStats = this.artifactSets.reduce((acc, set, i) => {\n        if (set !== 0) {\n          let setStats = set.getStatsAt(this.state[`artifactSet${i + 1}Pc`]);\n          Object.entries(setStats).forEach(([stat, value]) => {\n            if (acc[stat] !== undefined) {\n              acc[stat] += value;\n            } else {\n              acc[stat] = value;\n            }\n          });\n          return acc;\n        } else {\n          return acc;\n        }\n      }, {});\n\n      this.setStatTalentState();\n    }\n  };\n\n  setStatTalentState = (type) => {\n    let totalStats = this.getTotalStats();\n    let modifier = this.getDamageModifier();\n\n    let talentAttackDamage, talentSkillDamage, talentBurstDamage;\n    if (this.character !== undefined) {\n      talentAttackDamage = this.character.getTalentDamageAt({\n        type: 'Attack',\n        talentLevel: this.state.talentAttackLevel,\n        totalStats,\n        modifier,\n      });\n\n      talentSkillDamage = this.character.getTalentDamageAt({\n        type: 'Skill',\n        talentLevel: this.state.talentSkillLevel,\n        totalStats,\n        modifier,\n      });\n\n      talentBurstDamage = this.character.getTalentDamageAt({\n        type: 'Burst',\n        talentLevel: this.state.talentBurstLevel,\n        totalStats,\n        modifier,\n      });\n    }\n\n    this.setState({\n      totalStats: totalStats,\n      talentAttackDamage: talentAttackDamage,\n      talentSkillDamage: talentSkillDamage,\n      talentBurstDamage: talentBurstDamage,\n    });\n  };\n\n  setTalentState = (type) => {\n    if (this.character !== undefined) {\n      let talentDmg = this.character.getTalentDamageAt({\n        type,\n        talentLevel: this.state[`talent${type}Level`],\n        totalStats: this.state.totalStats,\n        modifier: this.getDamageModifier(),\n      });\n\n      this.setState({ [`talent${type}Damage`]: talentDmg });\n    }\n  };\n\n  // Not used in setCharacterState, setWeaponState, or setArtifactState to reduce number of setState calls\n  // Does not call setTalentState to reduce number of setState calls\n  setAllTalentState = () => {\n    if (this.character !== undefined) {\n      let talentAttackDamage = this.character.getTalentDamageAt({\n        type: 'Attack',\n        talentLevel: this.state.talentAttackLevel,\n        totalStats: this.state.totalStats,\n        modifier: this.getDamageModifier(),\n      });\n\n      let talentSkillDamage = this.character.getTalentDamageAt({\n        type: 'Skill',\n        talentLevel: this.state.talentSkillLevel,\n        totalStats: this.state.totalStats,\n        modifier: this.getDamageModifier(),\n      });\n\n      let talentBurstDamage = this.character.getTalentDamageAt({\n        type: 'Burst',\n        talentLevel: this.state.talentBurstLevel,\n        totalStats: this.state.totalStats,\n        modifier: this.getDamageModifier(),\n      });\n\n      this.setState({\n        talentAttackDamage: talentAttackDamage,\n        talentSkillDamage: talentSkillDamage,\n        talentBurstDamage: talentBurstDamage,\n      });\n    }\n  };\n\n  getTotalStats = () => {\n    let artifacts = [\n      this.artifactFlower,\n      this.artifactFeather,\n      this.artifactSands,\n      this.artifactGoblet,\n      this.artifactCirclet,\n    ];\n\n    let stats = statUtils.getTotalStatsAt(\n      this.weapon,\n      this.state.weaponLevel,\n      this.state.isWeaponAscended,\n      this.character,\n      this.state.characterLevel,\n      this.state.isCharacterAscended,\n      this.artifactSetStats,\n      artifacts,\n      this.state.talentAttackLevel,\n      this.state.talentSkillLevel,\n      this.state.talentBurstLevel,\n      this.state.options\n    );\n\n    return stats;\n  };\n\n  renderCharacterStats = () => {\n    return this.character ? (\n      <View style={styles.resultBlock}>\n        <Text style={styles.titleText}>Character</Text>\n        {this.renderCharacterImage()}\n        <Text style={styles.resultText}>\n          {this.character ? this.character.name : ''}\n        </Text>\n        {this.state.characterStats\n          ? Object.entries(this.state.characterStats).map(([stat, value]) => {\n              return (\n                <Text style={styles.resultText} key={stat}>\n                  {data.propMapping[stat].name}:{' '}\n                  {statUtils.getStatDisplayValue(\n                    value,\n                    data.propMapping[stat].isPercentage\n                  )}\n                </Text>\n              );\n            })\n          : null}\n      </View>\n    ) : null;\n  };\n\n  renderWeaponStats = () => {\n    return this.weapon ? (\n      <View style={styles.resultBlock}>\n        <Text style={styles.titleText}>Weapon</Text>\n        <Text style={styles.resultText}>\n          {this.weapon ? this.weapon.name : ''}\n        </Text>\n        {this.state.weaponStats\n          ? Object.entries(this.state.weaponStats).map(([stat, value]) => {\n              return (\n                <Text style={styles.resultText} key={stat}>\n                  {data.propMapping[stat].name}:{' '}\n                  {statUtils.getStatDisplayValue(\n                    value,\n                    data.propMapping[stat].isPercentage\n                  )}\n                </Text>\n              );\n            })\n          : null}\n      </View>\n    ) : null;\n  };\n\n  renderArtifactSetStats = () => {\n    let stats = this.artifactSetStats;\n\n    return stats ? (\n      <View style={styles.resultBlock}>\n        <Text style={styles.titleText}>Artifact Sets</Text>\n        {Object.entries(stats).map(([stat, value]) => {\n          return (\n            <Text style={styles.resultText} key={stat}>\n              {data.propMapping[stat].name}:{' '}\n              {statUtils.getStatDisplayValue(\n                value,\n                data.propMapping[stat].isPercentage\n              )}\n            </Text>\n          );\n        })}\n      </View>\n    ) : null;\n  };\n\n  renderArtifactMainStat = (type) => {\n    return (\n      <View style={styles.inputRow}>\n        <Picker\n          selectedValue={this['artifact' + type].mainStat.stat}\n          onValueChange={(stat, _) => {\n            if (stat != 0) {\n              let mainStat = this['artifact' + type].mainStat;\n              this['artifact' + type].setStat(\n                mainStat,\n                stat,\n                undefined,\n                data.propMapping[stat].isPercentage\n              );\n              // Update total stats\n              this.setStatTalentState(type);\n            }\n          }}\n        >\n          <Picker.Item label='' value={0} />\n          {mainStatProps[type].map((prop) => (\n            <Picker.Item\n              label={data.propMapping[prop].name}\n              value={prop}\n              key={prop}\n            />\n          ))}\n        </Picker>\n\n        <Text> : </Text>\n\n        <TextInput\n          style={styles.statInput}\n          onChangeText={(text) => {\n            let mainStat = this['artifact' + type].mainStat;\n            if (mainStat.stat) {\n              this['artifact' + type].setStat(\n                mainStat,\n                undefined,\n                parseFloat(text),\n                data.propMapping[mainStat.stat].isPercentage\n              );\n            } else {\n              // If stat type is not yet set\n              this['artifact' + type].setStat(\n                mainStat,\n                undefined,\n                parseFloat(text),\n                false\n              );\n            }\n\n            // Update total stats\n            this.setStatTalentState(type);\n          }}\n        />\n      </View>\n    );\n  };\n\n  renderArtifactSubStats = (type) => {\n    return (\n      <View>\n        {this['artifact' + type].subStats.map((subStat, index) => {\n          return (\n            <View style={styles.inputRow} key={index}>\n              <Picker\n                selectedValue={subStat.stat}\n                onValueChange={(stat, _) => {\n                  if (stat != 0) {\n                    this['artifact' + type].setStat(\n                      subStat,\n                      stat,\n                      undefined,\n                      data.propMapping[stat].isPercentage\n                    );\n                    // Update total stats\n                    this.setStatTalentState(type);\n                  }\n                }}\n              >\n                <Picker.Item label='' value={0} />\n                {subStatProps.map((prop) => (\n                  <Picker.Item\n                    label={data.propMapping[prop].name}\n                    value={prop}\n                    key={prop}\n                  />\n                ))}\n              </Picker>\n\n              <Text> : </Text>\n\n              <TextInput\n                style={styles.statInput}\n                onChangeText={(text) => {\n                  let stat = subStat.stat;\n                  if (stat) {\n                    this['artifact' + type].setStat(\n                      subStat,\n                      undefined,\n                      parseFloat(text),\n                      data.propMapping[stat].isPercentage\n                    );\n                  } else {\n                    // If stat type is not yet set\n                    this['artifact' + type].setStat(\n                      subStat,\n                      undefined,\n                      parseFloat(text),\n                      false\n                    );\n                  }\n                  // Update total stats\n                  this.setStatTalentState(type);\n                }}\n              />\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderArtifactStat = (type, isLast = false) => {\n    return (\n      <View\n        style={isLast ? styles.artifactBlockNoBorder : styles.artifactBlock}\n      >\n        <Text style={styles.artifactType}>{type}</Text>\n\n        <Text style={styles.artifactStatType}>Main Stat</Text>\n        {this.renderArtifactMainStat(type)}\n\n        <Text style={styles.artifactStatType}>Substats</Text>\n        {this.renderArtifactSubStats(type)}\n      </View>\n    );\n  };\n\n  renderAllArtifactStats = () => {\n    return (\n      <View style={styles.resultBlockNoBorder}>\n        <Text style={styles.titleText}>Artifacts</Text>\n        {this.renderArtifactStat('Flower')}\n        {this.renderArtifactStat('Feather')}\n        {this.renderArtifactStat('Sands')}\n        {this.renderArtifactStat('Goblet')}\n        {this.renderArtifactStat('Circlet', true)}\n      </View>\n    );\n  };\n\n  renderTotalStats = () => {\n    return (\n      <View style={styles.resultBlockNoBorder}>\n        <Text style={styles.titleText}>Stat Total</Text>\n        {this.state.totalStats\n          ? Object.entries(this.state.totalStats).map(([stat, value]) => {\n              if (stat != 'baseAtk') {\n                return (\n                  <Text style={styles.resultText} key={stat}>\n                    {data.propMapping[stat].name}:{' '}\n                    {statUtils.getStatDisplayValue(\n                      value,\n                      data.propMapping[stat].isPercentage\n                    )}\n                  </Text>\n                );\n              } else {\n                return null;\n              }\n            })\n          : null}\n      </View>\n    );\n  };\n\n  renderTalentDamage = (type, isLast = false) => {\n    return (\n      <View\n        style={isLast ? styles.artifactBlockNoBorder : styles.artifactBlock}\n      >\n        <Text style={styles.artifactType}>{type}</Text>\n        {this.state['talent' + type + 'Damage']\n          ? this.state['talent' + type + 'Damage'].map(\n              ({ description, damage }, index) => {\n                return (\n                  <Text style={styles.resultText} key={index}>\n                    {statUtils.getTalentDescription(description)}:{' '}\n                    {statUtils.getDamageDisplayValue(damage)}\n                  </Text>\n                );\n              }\n            )\n          : null}\n      </View>\n    );\n  };\n\n  renderOptions = () => {\n    return (\n      <FlatList\n        data={this.state.options}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item, index }) => {\n          if (item.type === 'boolean') {\n            return (\n              <View style={styles.inputRow}>\n                <Text>{statUtils.getOptionName(item.id)}: </Text>\n                <Checkbox\n                  onValueChange={(value) => {\n                    let options = [...this.state.options];\n                    options[index] = options[index].withValue(value);\n                    this.setState({ options }, this.setStatTalentState);\n                  }}\n                  value={item.value}\n                />\n              </View>\n            );\n          } else {\n            return null;\n          }\n        }}\n      />\n    );\n  };\n\n  renderAllTalentDamage = () => {\n    return (\n      <View style={styles.resultBlockNoBorder}>\n        <Text style={styles.titleText}>Talents</Text>\n\n        {this.renderTalentDamage('Attack')}\n        {this.renderTalentDamage('Skill')}\n        {this.renderTalentDamage('Burst', true)}\n        {this.renderOptions()}\n      </View>\n    );\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.inputColumn}>{this.renderInputColumn()}</View>\n\n        <View style={styles.resultColumn}>\n          {this.renderCharacterStats()}\n          {this.renderWeaponStats()}\n          {this.renderArtifactSetStats()}\n          {this.renderAllArtifactStats()}\n        </View>\n\n        <View style={styles.resultColumn}>{this.renderTotalStats()}</View>\n\n        <View style={styles.resultColumn}>{this.renderAllTalentDamage()}</View>\n\n        <View style={styles.fillerColumn}></View>\n      </View>\n    );\n  }\n}\n"],"sourceRoot":""}